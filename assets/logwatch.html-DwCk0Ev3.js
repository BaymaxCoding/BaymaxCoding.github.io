import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,b as n}from"./app-D3p8wuGf.js";const t={},l=n(`<h1 id="logwatch" tabindex="-1"><a class="header-anchor" href="#logwatch"><span>logwatch</span></a></h1><p>可定制和可插入式的日志监视系统</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>logwatch命令</strong> 是一个可定制和可插入式的日志监视系统，它通过遍历给定时间范围内的系统日志文件而产生日志报告。logwatch默认每天执行一次，可以从<code>/etc/cron.daily</code>里看到。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>logwatch<span class="token punctuation">(</span>选项<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>--detail<span class="token operator">&lt;</span>报告详细程度<span class="token operator">&gt;</span>：指定日志报告的详细程度；
--logfile<span class="token operator">&lt;</span>日志文件<span class="token operator">&gt;</span>：仅处理指定的日志文件；
--service<span class="token operator">&lt;</span>服务名<span class="token operator">&gt;</span>：仅处理指定服务的日志文件；
--print：打印结果到标准输出；
--mailto<span class="token operator">&lt;</span>邮件地址<span class="token operator">&gt;</span>：将结果发送到指定邮箱；
--range<span class="token operator">&lt;</span>日期范围<span class="token operator">&gt;</span>：指定处理日志的日期范围；
--archives：处理归档日志文件；
--debug<span class="token operator">&lt;</span>调试等级<span class="token operator">&gt;</span>：调试模式；
--save<span class="token operator">&lt;</span>文件名<span class="token operator">&gt;</span>：将结果保存到指定文件中，而不显示或者发送到指定邮箱；
--logdir<span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>：指定查找日志文件的目录，而不使用默认的日志目录；
--hostname<span class="token operator">&lt;</span>主机名<span class="token operator">&gt;</span>：指定在日志报告中使用的主机名，不使用系统默认的主机名；
--numeric：在报告中显示ip地址而不是主机名；
--help：显示指令的帮助信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>检查你的主机上是否已经存在Logwatch（Redhat默认已经安装了Logwatch，不过版本比较旧）：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> logwatch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果主机上没有logwatch，则执行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-Ivh</span> logwatch***.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果有老版本的logwatch，则执行：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-Uvh</span> logwatch***.rpm
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完毕后，开始配置：</p><p>可以修改和添加它的logfiles、services和其他配置，但默认已经有很多脚本了，只要在1）里设置<code>Detail = High</code>就可以了。</p><ul><li>可以添加新的配置到<code>/etc/logwatch/conf/logwatch.conf</code></li><li>也可以修改<code>/usr/share/logwatch/default.conf/logwatch.conf</code></li></ul><p><code>/etc/logwatch/conf/</code>会自动覆盖<code>/usr/share/logwatch/default.conf/</code>下的同名文件。</p><p>如果没有设置logwatch.conf也没关系，可以直接在命令行下设置。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>logwatch <span class="token parameter variable">--detail</span> High <span class="token parameter variable">--Service</span> All <span class="token parameter variable">--range</span> All <span class="token parameter variable">--print</span>    基本就可以显示出所有日志的情况了
logwatch <span class="token parameter variable">--service</span> sshd <span class="token parameter variable">--detail</span> High                       只看sshd的日志情况
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[l];function i(c,r){return e(),s("div",null,o)}const h=a(t,[["render",i],["__file","logwatch.html.vue"]]),g=JSON.parse('{"path":"/command/linux/logwatch.html","title":"logwatch","lang":"zh-CN","frontmatter":{"description":"logwatch 可定制和可插入式的日志监视系统 补充说明 logwatch命令 是一个可定制和可插入式的日志监视系统，它通过遍历给定时间范围内的系统日志文件而产生日志报告。logwatch默认每天执行一次，可以从/etc/cron.daily里看到。 语法 选项 实例 检查你的主机上是否已经存在Logwatch（Redhat默认已经安装了Logwat...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/logwatch.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"logwatch"}],["meta",{"property":"og:description","content":"logwatch 可定制和可插入式的日志监视系统 补充说明 logwatch命令 是一个可定制和可插入式的日志监视系统，它通过遍历给定时间范围内的系统日志文件而产生日志报告。logwatch默认每天执行一次，可以从/etc/cron.daily里看到。 语法 选项 实例 检查你的主机上是否已经存在Logwatch（Redhat默认已经安装了Logwat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"logwatch\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.71,"words":514},"filePathRelative":"command/linux/logwatch.md","localizedDate":"2024年4月12日","autoDesc":true}');export{h as comp,g as data};
