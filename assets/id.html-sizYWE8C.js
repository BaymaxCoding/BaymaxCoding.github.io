import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,b as e}from"./app-D3p8wuGf.js";const t={},p=e(`<h1 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>id</span></a></h1><p>打印真实以及有效的用户和所在组的信息</p><h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要"><span>概要</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">id</span> <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span><span class="token environment constant">USER</span><span class="token punctuation">]</span><span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="主要用途" tabindex="-1"><a class="header-anchor" href="#主要用途"><span>主要用途</span></a></h2><ul><li>没有选项时，打印指定用户ID信息。</li></ul><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-a</span>               兼容性选项，没有实际作用。
-Z, <span class="token parameter variable">--context</span>    只打印进程的安全上下文。
-g, <span class="token parameter variable">--group</span>      只打印有效的组ID。
-G, <span class="token parameter variable">--groups</span>     打印全部组ID。
-u, <span class="token parameter variable">--user</span>       只打印有效的用户ID。
-z, <span class="token parameter variable">--zero</span>       使用空字符代替默认的空格来分隔条目。
<span class="token parameter variable">--help</span>           显示帮助信息并退出。
<span class="token parameter variable">--version</span>        显示版本信息并退出。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只有在使用 <code>-u</code> <code>-g</code> <code>-G</code> 选项中一到多个时，以下选项可以使用：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-n, <span class="token parameter variable">--name</span>    打印名称而不是数字。
-r, <span class="token parameter variable">--real</span>    打印真实ID而不是有效ID。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><p>user（可选）：可以为一到多个，默认为当前用户。</p><h2 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值</span></a></h2><p>返回0表示成功，返回非0值表示失败。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># id</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>,1<span class="token punctuation">(</span>bin<span class="token punctuation">)</span>,2<span class="token punctuation">(</span>daemon<span class="token punctuation">)</span>,3<span class="token punctuation">(</span>sys<span class="token punctuation">)</span>,4<span class="token punctuation">(</span>adm<span class="token punctuation">)</span>,6<span class="token punctuation">(</span>disk<span class="token punctuation">)</span>,10<span class="token punctuation">(</span>wheel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：用户root的UID号码 = 0，GID号码 = 0。用户root是下面组的成员：</p><ul><li>root组GID号是：0</li><li>bin组GID号是：1</li><li>daemon组GID号是：2</li><li>sys组GID号是：3</li><li>adm组GID号是：4</li><li>disk组GID号是：6</li><li>wheel组GID号是：10</li></ul><p>打印用户名、UID 和该用户所属的所有组，要这么做，我们可以使用 -a 选项：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># id -a</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>,1<span class="token punctuation">(</span>bin<span class="token punctuation">)</span>,2<span class="token punctuation">(</span>daemon<span class="token punctuation">)</span>,3<span class="token punctuation">(</span>sys<span class="token punctuation">)</span>,4<span class="token punctuation">(</span>adm<span class="token punctuation">)</span>,6<span class="token punctuation">(</span>disk<span class="token punctuation">)</span>,10<span class="token punctuation">(</span>wheel<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出所有不同的组ID ，有效的，真实的和补充的，我们可以使用 -G 选项来实现：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># id -G</span>
<span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>结果只会显示GID号。你可以和<code>/etc/group</code>文件比较。下面是<code>/etc/group</code>文件的示例内容：</p><p>只输出有效的组ID，通过使用 -g 选项来只输出有效组ID：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># id -g</span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出特定用户信息，我们可以输出特定的用户信息相关的UID和GID。只需要在id命令后跟上用户名：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># id www</span>
<span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">(</span>www<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">(</span>www<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">(</span>www<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ol><li><p>该命令可以显示真实有效的用户ID(UID)和组ID(GID)。UID 是对一个用户的单一身份标识。组ID（GID）则对应多个UID；一些程序可能需要UID/GID来运行。<code>id</code> 使我们更加容易地找出用户的UID以及GID，而不必在 <code>/etc/group</code> 文件中搜寻。</p></li><li><p>该命令是<code>GNU coreutils</code>包中的命令，相关的帮助信息请查看<code>man -s 1 id</code>，<code>info coreutils &#39;id invocation&#39;</code>。</p></li></ol>`,29),o=[p];function i(l,c){return n(),s("div",null,o)}const u=a(t,[["render",i],["__file","id.html.vue"]]),m=JSON.parse('{"path":"/command/linux/id.html","title":"id","lang":"zh-CN","frontmatter":{"description":"id 打印真实以及有效的用户和所在组的信息 概要 主要用途 没有选项时，打印指定用户ID信息。 选项 只有在使用 -u -g -G 选项中一到多个时，以下选项可以使用： 参数 user（可选）：可以为一到多个，默认为当前用户。 返回值 返回0表示成功，返回非0值表示失败。 例子 解释：用户root的UID号码 = 0，GID号码 = 0。用户root是...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/id.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"id"}],["meta",{"property":"og:description","content":"id 打印真实以及有效的用户和所在组的信息 概要 主要用途 没有选项时，打印指定用户ID信息。 选项 只有在使用 -u -g -G 选项中一到多个时，以下选项可以使用： 参数 user（可选）：可以为一到多个，默认为当前用户。 返回值 返回0表示成功，返回非0值表示失败。 例子 解释：用户root的UID号码 = 0，GID号码 = 0。用户root是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"id\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"主要用途","slug":"主要用途","link":"#主要用途","children":[]},{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.14,"words":641},"filePathRelative":"command/linux/id.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
