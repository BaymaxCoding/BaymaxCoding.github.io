import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,e as n}from"./app-D_HUMAmc.js";const l={},t=n(`<h1 id="badblocks" tabindex="-1"><a class="header-anchor" href="#badblocks"><span>badblocks</span></a></h1><p>查找磁盘中损坏的区块</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>badblock命令</strong> 用于查找磁盘中损坏的区块。 硬盘是一个损耗设备，当使用一段时间后可能会出现坏道等物理故障。电脑硬盘出现坏道后，如果不及时更换或进行技术处理，坏道就会越来越多，并会造成频繁死机和数据丢失。最好的处理方式是更换磁盘，但在临时的情况下，应及时屏蔽坏道部分的扇区，不要触动它们。badblocks就是一个很好的检查坏道位置的工具。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>badblock<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-b<span class="token operator">&lt;</span>区块大小<span class="token operator">&gt;</span>：指定磁盘的区块大小，单位为字节；
-o<span class="token operator">&lt;</span>输出文件<span class="token operator">&gt;</span>：将检查的结果写入指定的输出文件；
-s：在检查时显示进度；
-v：执行时显示详细的信息；
-w：在检查时，执行写入测试。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>磁盘装置：指定要检查的磁盘装置；</li><li>磁盘区块数：指定磁盘装置的区块总数；</li><li>启始区块：指定要从哪个区块开始检查。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>badblocks以 4096 的一个block，每一个block检查16次，将结果输出到“hda-badblocks-list”文件里。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>badblocks <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-c</span> <span class="token number">16</span> /dev/hda1 <span class="token parameter variable">-o</span> hda-badblocks-list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>hda-badblocks-list是个文本文件，内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> hda-badblocks-list
<span class="token number">51249</span>
<span class="token number">51250</span>
<span class="token number">51251</span>
<span class="token number">51253</span>
<span class="token number">51254</span>
……
<span class="token number">61245</span>
……
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以针对可疑的区块多做几次操作。下面，badblocks以4096字节为一个“block”,每一个“block”检查1次, 将结果输出到“hda-badblocks-list.1”文件中，由第51000 block开始，到63000 block结束。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>badblocks <span class="token parameter variable">-b</span> <span class="token number">4096</span> <span class="token parameter variable">-c</span> <span class="token number">1</span> /dev/hda1 <span class="token parameter variable">-o</span> hda-badblocks-list.1 <span class="token number">63000</span> <span class="token number">51000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这次花费的时间比较短，硬盘在指定的情况下在很短的时间就产生“嘎嘎嘎嘎”的响声。由于检查条件的不同，其输出的结果也不完全是相同的。重复几次同样的操作，因条件多少都有些不同，所以结果也有所不同。进行多次操作后，直到产生最后的hda-badblock-list.final文件。</p><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h3><p><strong>1、fsck使用badblocks的信息</strong></p><p>badblocks只会在日志文件中标记出坏道的信息，但若希望在检测磁盘时也能跳过这些坏块不检测，可以使用fsck的-l参数：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>fsck.ext3 -l /tmp/hda-badblock-list.final /dev/hda1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2、在创建文件系统前检测坏道</strong></p><p>badblocks可以随e2fsck和mke2fs的-c删除一起运行（对ext3文件系统也一样），在创建文件系统前就先检测坏道信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkfs.ext3 <span class="token parameter variable">-c</span> /dev/hda1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码表示使用-c在创建文件系统前检查坏道的硬盘。</p><p>这个操作已经很清楚地告知我们可以采用<code>mkfs.ext3 -c</code>选项用<code>read-only</code>方式检查硬盘。这个命令会在格式化硬盘时检查硬盘，并标出错误的硬盘“block”。用这个方法格式化硬盘，需要有相当大的耐心，因为命令运行后，会一个个用读的方式检查硬盘。</p>`,27),i=[t];function d(c,o){return e(),s("div",null,i)}const b=a(l,[["render",d],["__file","badblocks.html.vue"]]),m=JSON.parse('{"path":"/command/linux/badblocks.html","title":"badblocks","lang":"zh-CN","frontmatter":{"description":"badblocks 查找磁盘中损坏的区块 补充说明 badblock命令 用于查找磁盘中损坏的区块。 硬盘是一个损耗设备，当使用一段时间后可能会出现坏道等物理故障。电脑硬盘出现坏道后，如果不及时更换或进行技术处理，坏道就会越来越多，并会造成频繁死机和数据丢失。最好的处理方式是更换磁盘，但在临时的情况下，应及时屏蔽坏道部分的扇区，不要触动它们。badbl...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/badblocks.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"badblocks"}],["meta",{"property":"og:description","content":"badblocks 查找磁盘中损坏的区块 补充说明 badblock命令 用于查找磁盘中损坏的区块。 硬盘是一个损耗设备，当使用一段时间后可能会出现坏道等物理故障。电脑硬盘出现坏道后，如果不及时更换或进行技术处理，坏道就会越来越多，并会造成频繁死机和数据丢失。最好的处理方式是更换磁盘，但在临时的情况下，应及时屏蔽坏道部分的扇区，不要触动它们。badbl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"badblocks\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.54,"words":763},"filePathRelative":"command/linux/badblocks.md","localizedDate":"2024年4月12日","autoDesc":true}');export{b as comp,m as data};
