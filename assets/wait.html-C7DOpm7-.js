import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as t,c as s,a as i,e as o,w as l,b as p,d as c}from"./app-D3p8wuGf.js";const r={},d=p(`<h1 id="wait" tabindex="-1"><a class="header-anchor" href="#wait"><span>wait</span></a></h1><p>等待进程执行完后返回</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>wait命令</strong> 用来等待指令的指令，直到其执行完毕后返回终端。该指令常用于shell脚本编程中，待指定的指令执行完成后，才会继续执行后面的任务。该指令等待作业时，在作业标识号前必须添加百分号&quot;%&quot;。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>wait<span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>进程或作业标示：指定进程号或者作业号。</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：</p><p>运行一个sleep进程</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sleep</span> 10s <span class="token operator">&amp;</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token number">27156</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>指定作业号</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wait</span> %1       <span class="token comment">#等待作业号为1的作业完成 </span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>+  Done                    <span class="token function">sleep</span> 10s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>指定进程号</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wait</span> <span class="token number">27156</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>+  Done                    <span class="token function">sleep</span> 10s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出当前存在作业号的指令，如下所示：</p>`,17);function m(u,h){const a=n("RouteLink");return t(),s("div",null,[d,i("p",null,[o(a,{to:"/command/linux/jobs.html"},{default:l(()=>[c("jobs")]),_:1})])])}const v=e(r,[["render",m],["__file","wait.html.vue"]]),k=JSON.parse('{"path":"/command/linux/wait.html","title":"wait","lang":"zh-CN","frontmatter":{"description":"wait 等待进程执行完后返回 补充说明 wait命令 用来等待指令的指令，直到其执行完毕后返回终端。该指令常用于shell脚本编程中，待指定的指令执行完成后，才会继续执行后面的任务。该指令等待作业时，在作业标识号前必须添加百分号\\"%\\"。 语法 参数 进程或作业标示：指定进程号或者作业号。 实例 使用命令wait等待作业号为1的作业完成后再返回，输入如...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/wait.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"wait"}],["meta",{"property":"og:description","content":"wait 等待进程执行完后返回 补充说明 wait命令 用来等待指令的指令，直到其执行完毕后返回终端。该指令常用于shell脚本编程中，待指定的指令执行完成后，才会继续执行后面的任务。该指令等待作业时，在作业标识号前必须添加百分号\\"%\\"。 语法 参数 进程或作业标示：指定进程号或者作业号。 实例 使用命令wait等待作业号为1的作业完成后再返回，输入如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"wait\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"command/linux/wait.md","localizedDate":"2024年4月12日","autoDesc":true}');export{v as comp,k as data};
