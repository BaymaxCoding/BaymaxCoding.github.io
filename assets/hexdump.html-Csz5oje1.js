import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,b as e}from"./app-DOGW-9XX.js";const t={},p=e(`<h1 id="hexdump" tabindex="-1"><a class="header-anchor" href="#hexdump"><span>hexdump</span></a></h1><p>显示文件十六进制格式</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>hexdump命令</strong> 一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件，而不只限于二进制文件。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>hexdump <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>文件<span class="token punctuation">]</span><span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-n</span> length 只格式化输入文件的前length个字节。
<span class="token parameter variable">-C</span> 输出规范的十六进制和ASCII码。
<span class="token parameter variable">-b</span> 单字节八进制显示。
<span class="token parameter variable">-c</span> 单字节字符显示。
<span class="token parameter variable">-d</span> 双字节十进制显示。
<span class="token parameter variable">-o</span> 双字节八进制显示。
<span class="token parameter variable">-x</span> 双字节十六进制显示。
<span class="token parameter variable">-s</span> 从偏移量开始输出。
<span class="token parameter variable">-e</span> 指定格式字符串，格式字符串包含在一对单引号中，格式字符串形如：<span class="token string">&#39;a/b &quot;format1&quot; &quot;format2&quot;&#39;</span>。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个格式字符串由三部分组成，每个由空格分隔，第一个形如a/b，b表示对每b个输入字节应用format1格式，a表示对每a个输入字节应用format2格式，一般a&gt;b，且b只能为1，2，4，另外a可以省略，省略则a=1。format1和format2中可以使用类似printf的格式字符串，如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>%02d：两位十进制
%03x：三位十六进制
%02o：两位八进制
%c：单个字符等
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一些特殊的用法：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>%_ad：标记下一个输出字节的序号，用十进制表示。
%_ax：标记下一个输出字节的序号，用十六进制表示。
%_ao：标记下一个输出字节的序号，用八进制表示。
%_p：对不能以常规字符显示的用 <span class="token builtin class-name">.</span> 代替。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同一行如果要显示多个格式字符串，则可以跟多个<code>-e</code>选项。</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>hexdump <span class="token parameter variable">-e</span> <span class="token string">&#39;16/1 &quot;%02X &quot; &quot;  |  &quot;&#39;</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;16/1 &quot;%_p&quot; &quot;\\n&quot;&#39;</span> <span class="token builtin class-name">test</span>
00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F  <span class="token operator">|</span>  <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>  
<span class="token number">10</span> <span class="token number">11</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">19</span> 1A 1B 1C 1D 1E 1F  <span class="token operator">|</span>  <span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>  
<span class="token number">20</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">25</span> <span class="token number">26</span> <span class="token number">27</span> <span class="token number">28</span> <span class="token number">29</span> 2A 2B 2C 2D 2E 2F  <span class="token operator">|</span>   <span class="token operator">!</span>&quot;#$%<span class="token operator">&amp;</span>&#39;<span class="token punctuation">(</span><span class="token punctuation">)</span>*+,-./ 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),i=[p];function l(o,r){return n(),s("div",null,i)}const u=a(t,[["render",l],["__file","hexdump.html.vue"]]),m=JSON.parse('{"path":"/command/linux/hexdump.html","title":"hexdump","lang":"zh-CN","frontmatter":{"description":"hexdump 显示文件十六进制格式 补充说明 hexdump命令 一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件，而不只限于二进制文件。 语法 选项 每个格式字符串由三部分组成，每个由空格分隔，第一个形如a/b，b表示对每b个输入字节应用format1格式，a表示对每a个输入字节应用format2格式，一般a>b，且b只能为1，2...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/hexdump.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"hexdump"}],["meta",{"property":"og:description","content":"hexdump 显示文件十六进制格式 补充说明 hexdump命令 一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件，而不只限于二进制文件。 语法 选项 每个格式字符串由三部分组成，每个由空格分隔，第一个形如a/b，b表示对每b个输入字节应用format1格式，a表示对每a个输入字节应用format2格式，一般a>b，且b只能为1，2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"hexdump\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.61,"words":482},"filePathRelative":"command/linux/hexdump.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
