import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as e}from"./app-CHACLx4z.js";const t={},i=e(`<h1 id="join" tabindex="-1"><a class="header-anchor" href="#join"><span>join</span></a></h1><p>两个文件中指定栏位内容相同的行连接起来</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>join命令</strong> 用来将两个文件中，制定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，再输出到标准输出设备。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>join<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-a<span class="token operator">&lt;</span><span class="token number">1</span>或<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>：除了显示原来的输出内容之外，还显示指令文件中没有相同栏位的行；
-e<span class="token operator">&lt;</span>字符串<span class="token operator">&gt;</span>：若<span class="token punctuation">[</span>文件1<span class="token punctuation">]</span>与<span class="token punctuation">[</span>文件2<span class="token punctuation">]</span>中找不到指定的栏位，则在输出中填入选项中的字符串；
-i或--ignore-case：比较栏位内容时，忽略大小写的差异；
-o<span class="token operator">&lt;</span>格式<span class="token operator">&gt;</span>：按照指定的格式来显示结果；
-t<span class="token operator">&lt;</span>字符<span class="token operator">&gt;</span>：使用栏位的分割字符；
-v<span class="token operator">&lt;</span><span class="token number">1</span>或<span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>：更-a相同，但是只显示文件中没有相同栏位的行；
-<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>栏位<span class="token operator">&gt;</span>：连接<span class="token punctuation">[</span>文件1<span class="token punctuation">]</span>指定的栏位；
-<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>栏位<span class="token operator">&gt;</span>：连接<span class="token punctuation">[</span>文件2<span class="token punctuation">]</span>指定的栏位。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>文件1：要进行合并操作的第1个文件参数；</li><li>文件2：要进行合并操作的第2个文件参数。</li></ul><h3 id="常见用法" tabindex="-1"><a class="header-anchor" href="#常见用法"><span>常见用法</span></a></h3><p>把两个文件制定栏位内容相同的行连接起来：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat name </span>
<span class="token number">1</span> xiaoming
<span class="token number">2</span> xiaowang
<span class="token number">3</span> xiaoliu
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat city </span>
<span class="token number">1</span> beijing  beijing
<span class="token number">2</span> hubei   wuhan 
<span class="token number">3</span> hunan   changsha

<span class="token comment"># city文件在后，则拼接在后，如果city文件在前，则name文件拼接在后。</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># join  name  city </span>
<span class="token number">1</span> xiaoming beijing beijing
<span class="token number">2</span> xiaowang hubei wuhan 
<span class="token number">3</span> xiaoliu hunan changsha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把两个文件指定列拼接起来：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 把name文件的第2列和city文件的第3列拼接起来</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># join -o 1.2 2.3 name  city </span>
xiaoming beijing
xiaowang wuhan
xiaoliu changsha
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),o=[i];function l(p,c){return a(),s("div",null,o)}const u=n(t,[["render",l],["__file","join.html.vue"]]),m=JSON.parse('{"path":"/command/linux/join.html","title":"join","lang":"zh-CN","frontmatter":{"description":"join 两个文件中指定栏位内容相同的行连接起来 补充说明 join命令 用来将两个文件中，制定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，再输出到标准输出设备。 语法 选项 参数 文件1：要进行合并操作的第1个文件参数； 文件2：要进行合并操作的第2个文件参数。 常见用法 把两个文件制定栏位内容相同的行连接起来： 把两...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/join.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"join"}],["meta",{"property":"og:description","content":"join 两个文件中指定栏位内容相同的行连接起来 补充说明 join命令 用来将两个文件中，制定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，再输出到标准输出设备。 语法 选项 参数 文件1：要进行合并操作的第1个文件参数； 文件2：要进行合并操作的第2个文件参数。 常见用法 把两个文件制定栏位内容相同的行连接起来： 把两..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"join\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"常见用法","slug":"常见用法","link":"#常见用法","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.42,"words":426},"filePathRelative":"command/linux/join.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
