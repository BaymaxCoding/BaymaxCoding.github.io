import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,b as n}from"./app-CHACLx4z.js";const t={},l=n(`<h1 id="pvck" tabindex="-1"><a class="header-anchor" href="#pvck"><span>pvck</span></a></h1><p>检测物理卷的LVM元数据的一致性</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>pvck命令</strong> 用来检测物理卷的LVM元数据的一致性。默认情况下，物理卷中的前4个扇区保存着LVM卷标，可以使用<code>--labelsector</code>选项指定其他的位置（例如：数据恢复时）。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pvck<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-d：调试模式；
-v：详细信息模式；
--labelsector：指定LVE卷标所在扇区。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>物理卷：指定要检查的物理卷对应的设备文件。</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>使用pvck命令检查物理卷<code>/dev/sdb1</code>。在命令行中输入下面的命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pvck <span class="token parameter variable">-v</span> /dev/sdb1    <span class="token comment">#检查物理卷元数据</span>
Scanning /dev/sdb1  
Found label on /dev/sdb1, sector <span class="token number">1</span>, <span class="token assign-left variable">type</span><span class="token operator">=</span>LVM2 001  
Found text metadata area: <span class="token assign-left variable">offset</span><span class="token operator">=</span><span class="token number">4096</span>, <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">192512</span> 
Found LVM2 metadata record at <span class="token assign-left variable">offset</span><span class="token operator">=</span><span class="token number">125952</span>,  
<span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token number">70656</span>, <span class="token assign-left variable">offset2</span><span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">size2</span><span class="token operator">=</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),i=[l];function c(o,p){return e(),s("div",null,i)}const m=a(t,[["render",c],["__file","pvck.html.vue"]]),v=JSON.parse('{"path":"/command/linux/pvck.html","title":"pvck","lang":"zh-CN","frontmatter":{"description":"pvck 检测物理卷的LVM元数据的一致性 补充说明 pvck命令 用来检测物理卷的LVM元数据的一致性。默认情况下，物理卷中的前4个扇区保存着LVM卷标，可以使用--labelsector选项指定其他的位置（例如：数据恢复时）。 语法 选项 参数 物理卷：指定要检查的物理卷对应的设备文件。 实例 使用pvck命令检查物理卷/dev/sdb1。在命令行...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/pvck.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"pvck"}],["meta",{"property":"og:description","content":"pvck 检测物理卷的LVM元数据的一致性 补充说明 pvck命令 用来检测物理卷的LVM元数据的一致性。默认情况下，物理卷中的前4个扇区保存着LVM卷标，可以使用--labelsector选项指定其他的位置（例如：数据恢复时）。 语法 选项 参数 物理卷：指定要检查的物理卷对应的设备文件。 实例 使用pvck命令检查物理卷/dev/sdb1。在命令行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pvck\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"command/linux/pvck.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,v as data};
