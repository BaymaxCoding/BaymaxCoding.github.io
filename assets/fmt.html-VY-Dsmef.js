import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as t,e as n}from"./app-D_HUMAmc.js";const s={},o=n(`<h1 id="fmt" tabindex="-1"><a class="header-anchor" href="#fmt"><span>fmt</span></a></h1><p>读取文件后优化处理并输出</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>fmt命令</strong> 读取文件的内容，根据选项的设置对文件格式进行简单的优化处理，并将结果送到标准输出设备。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>fmt<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-c或--crown-margin：每段前两列缩排；
-p<span class="token operator">&lt;</span>列起始字符串<span class="token operator">&gt;</span>或-prefix<span class="token operator">=</span><span class="token operator">&lt;</span>列起始字符串<span class="token operator">&gt;</span>：仅合并含有指定字符串的列，通常运用在程序语言的注解方面；
-s或--split-only：只拆开字数超出每列字符数的列，但不合并字数不足每列字符数的列；
-t或--tagged-paragraph：每列前两列缩排，但第1列和第2列的缩排格式不同；
-u或--uniform-spacing：每列字符之间都以一个空格字符间隔，每个句子之间则两个空格字符分隔；
-w<span class="token operator">&lt;</span>每列字符数<span class="token operator">&gt;</span>或--width<span class="token operator">=</span><span class="token operator">&lt;</span>每列字符数<span class="token operator">&gt;</span>或-<span class="token operator">&lt;</span>每列字符数<span class="token operator">&gt;</span>：设置每列的最大字符数。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>指定要优化格式的文件。</p>`,10),i=[o];function r(l,p){return e(),t("div",null,i)}const m=a(s,[["render",r],["__file","fmt.html.vue"]]),h=JSON.parse('{"path":"/command/linux/fmt.html","title":"fmt","lang":"zh-CN","frontmatter":{"description":"fmt 读取文件后优化处理并输出 补充说明 fmt命令 读取文件的内容，根据选项的设置对文件格式进行简单的优化处理，并将结果送到标准输出设备。 语法 选项 参数 指定要优化格式的文件。","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/fmt.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"fmt"}],["meta",{"property":"og:description","content":"fmt 读取文件后优化处理并输出 补充说明 fmt命令 读取文件的内容，根据选项的设置对文件格式进行简单的优化处理，并将结果送到标准输出设备。 语法 选项 参数 指定要优化格式的文件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"fmt\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.86,"words":258},"filePathRelative":"command/linux/fmt.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,h as data};
