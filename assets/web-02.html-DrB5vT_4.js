import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,b as a,a as t}from"./app-DOGW-9XX.js";const l={},p=a(`<h2 id="css层叠样式表" tabindex="-1"><a class="header-anchor" href="#css层叠样式表"><span>css层叠样式表</span></a></h2><p>style标签包裹</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>书写格式 
选择器 {
 key：value
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="引入方式" tabindex="-1"><a class="header-anchor" href="#引入方式"><span>引入方式</span></a></h2><p>内部 style</p><p>外部 使用link标签引入 rel关系属性 stylesheet、href .css文件位置</p><p>行内 配合js <code>&lt;div style=&quot;color:red;&quot;&gt;&lt;/div&gt;</code></p><h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器"><span>选择器</span></a></h2><p>命名规范 单词小写-单词小写</p><p>标签选择器 直接写标签所有指定标签都会被渲染</p><p>类选择器 标签class属性可写多个 class = “c1 c2” 使用.xxx{} 一般用来设置样式</p><p>id选择器 唯一性一个页面中只能使用一次 标签id属性 使用#xx{} 一般用来配合js使用</p><p>通配符选择器 *{} 配置所有标签的属性 开发中清除标签的默认属性使用</p><ul><li><p>复合选择器</p><p>后代选择器 父标签+空格+ 子标签{}，被父标签包裹的指定子标签都会被渲染，包括孙子标签</p><p>子代选择器 父标签+&gt;子标签{}，只会渲染子标签，孙子标签不生效</p><p>并集选择器 多个标签相同属性，说白还是标签选择器多个标签用逗号相隔</p><p>交集选择器 选择器+选择器{}满足多个条件的</p></li><li><p>伪类选择器</p><p>选择器+：+对应属性{}</p><p>:hover鼠标悬停，:link访问前，:visited访问后,:active点击时</p><p>超过四个按LVHA顺序写</p></li><li><p>结构伪类选择器 选择器:first-child 第一个 last-child最后一个</p><p>nth-child(n)指定哪个，小括号中的公式偶数标签2n奇数标签2n+1/2n-1,5的倍数标签5n找到第五个以后的标签n+5，找到第五个以前的标签-n+5，其中n的值从0开始推算</p></li><li><p>伪元素选择器(创建一个假的标签。) 选择器::before 选择器::after 大类后面那个小箭头 用来放装饰性内容</p><blockquote><p>必须要有content属性参数可以为空，默认行内模式显示，权重和选择器相同</p></blockquote><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code>	<span class="token selector">div::before</span><span class="token punctuation">{</span>
            <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&quot;1111&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="div" tabindex="-1"><a class="header-anchor" href="#div"><span>div</span></a></h2><p>width 宽 height 高 background-color 背景色</p><h2 id="文字控制属性" tabindex="-1"><a class="header-anchor" href="#文字控制属性"><span>文字控制属性</span></a></h2><p>google浏览器默认文字大小16px</p><p>font-size 字体大小单位px 无单位不生效</p><p>font-weight 文字粗细 参数为数字 400 正常 700 加粗 normal正常 bold 加粗</p><p>font-style文字倾斜 属性值 normal正常 italic 倾斜 一般不倾斜，用来清除倾斜效果</p><p>line-height 行高段落中用 大小px 不加单位直接就是当前标签font-size属性的倍数 2就是2倍</p><blockquote><p>段落中每行文字中的空隙并不是行高 ，行高由文字的上间距+文本高度+下间距构成！！</p><p>行高的测量方式从每行文字的最顶端或者最低端量到下一行文字的最顶端或者最低端</p><p>盒子行高实现文字垂直居中，配置行高与盒子高度相同 ，原理：文字行高由文字的上边距+文字本身+文字的下边距构成 ，如盒子高100，则配置文字行高为100，行高的构成就变成42+16浏览器默认文字大小+ 42实现文字居中 注意！！！只适用与单行文字！！！！</p></blockquote><p>font-family 字体族 楷体，宋体 ，微软雅黑，可配置多个顺序即为优先级从左向右 最后一个一般设置为字体族名做兜底 无衬线字体和有衬线字体开发使用无衬线，可以直接copy大厂样式</p><p>font 字体复合属性 用来设置网页文字的公共样式直接copy</p><blockquote><p>font字体的简写方式 倾斜 加粗 字号/行高 字体 必须按顺序写，字体和字号为必要属性也可以只写这两个属性</p></blockquote><p>text-indent 缩进 数字+px 数字+em 用em跟着字体大小走2em就是缩进两个字</p><blockquote><p>1em = 当前标签字号大小</p></blockquote><p>text-align 对其方式 left左对齐默认 center 居中 right 右对齐</p><blockquote><p>调整的是内容，不影响标签位置，如果给图片做居中则给图片的父级标签配置内容居中</p></blockquote><p>text-decoration 修饰线如删除线下划线 none无 underline下划线 line-through 删除线 overline上划线 一般用来去除超链接下划线</p><p>color字体颜色</p><blockquote><p>取值写法 单词、r，g，b 0-255、r，g，b，a a为0-1取值调节透明度 、十六进制写法#RRGGBB相同可简写#0000ff = #00f</p><p>三原色rgb 红绿蓝</p></blockquote><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">h1</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>1<span class="token punctuation">,</span>1<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span><span class="token function">rgba</span><span class="token punctuation">(</span>1<span class="token punctuation">,</span>1<span class="token punctuation">,</span>1<span class="token punctuation">,</span>0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css特性" tabindex="-1"><a class="header-anchor" href="#css特性"><span>css特性</span></a></h2><p>继承性：子级继承父级的文字属性，如果标签有自己默认的样式，则不会继承</p><p>层叠性：后写的属性会覆盖之前写的属性，不同的属性则会叠加进去展示</p><p>选择器优先级 通配《标签《类《id《行内《分号前加!important提高权重慎用</p><p>选中的范围越大优先级越低</p><blockquote><p>复合选择器权重按复合选择器中选择器个数，对比顺序为行内-id-类-标签。继承样式的权重最低！</p></blockquote><h2 id="emmet简写提高开发效率" tabindex="-1"><a class="header-anchor" href="#emmet简写提高开发效率"><span>emmet简写提高开发效率</span></a></h2><p>div.box</p><p>div#box</p><p>同级div+p</p><p>父子div &gt; p</p><p>多个相同span*3</p>`,46),i=t("p",{XX:""},"指定内容 div",-1),c=a(`<p>css 用首字符小写后面可以跟参数</p><h2 id="背景属性" tabindex="-1"><a class="header-anchor" href="#背景属性"><span>背景属性</span></a></h2><p>background-color</p><p>background-image 背景图属性 uri(路径)</p><p>background-repeat 填充方式，默认平铺就是复制，no-repeat,repeat,repeat-x,repeat-y</p><p>background-position背景图位置调整【水平和垂直】 左右上下居中英文关键字，或者数字加像素。关于参数顺序关键字可以不按顺序，如只有一个关键字，另一方向默认居中，数字只写一个表示水平方向则垂直也为居中</p><p>background-size 背景图缩放，属性值cover等比缩放完全覆盖背景区域，部分背景图看不见，contain等比完全装入背景去，部分背景区空白或者数字加像素，或者百分比根据盒子尺寸计算</p><p>background-attachement 背景固定参数值 fixed</p><p>background 复合属性 背景色+背景图+填充方式+背图位置/缩放+背图固定 不分顺序</p><h2 id="显示模式" tabindex="-1"><a class="header-anchor" href="#显示模式"><span>显示模式</span></a></h2><ol><li><p>块级元素 独占一行 宽度默认为父级标签的100% 添加宽高属性生效 div</p></li><li><p>行内元素 一行多个 宽度由内容撑开，宽高属性不生效 如span</p></li><li><p>行内块元素 如img，由内容撑开，添加宽高属性生效</p></li></ol><ul><li><p>转换显示模式</p><p>display 属性值block块 inline-block行内块，inline行内一般用前两个</p></li></ul><h2 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型"><span>盒子模型</span></a></h2><table><thead><tr><th>内容区域</th><th>宽高</th></tr></thead><tbody><tr><td>内边距padding</td><td>内容和盒子的边缘距离，单参数四个边都会修改，拉开内容和盒子距离</td></tr><tr><td>边框线border</td><td>像素 线的类型 颜色不分顺序，类型solid实线、dashed虚线、点线dotted</td></tr><tr><td>外边距margin</td><td>盒子外围距离，单参数四个边都会修改拉开盒子距离</td></tr></tbody></table><blockquote><p>三个属性均可以添加-方位名词做某个边的样式如padding-top、border-bottom、margin-left、margin-right</p></blockquote><h3 id="简化写法" tabindex="-1"><a class="header-anchor" href="#简化写法"><span>简化写法</span></a></h3><p>padding： 上 右 下 左</p><p>一个值四个方向均应用单值</p><p>四个值 上右下左</p><p>三个值 上左右下</p><p>两个值上下左右</p><h3 id="盒子的计算" tabindex="-1"><a class="header-anchor" href="#盒子的计算"><span>盒子的计算</span></a></h3><ul><li><p>默认（被内容撑大）</p><p>盒子尺寸 = 内容尺寸+border尺寸+内边距尺寸</p><p>解决撑大的方法，把最外层盒子做相应的减少或者使用内减模式box-sizing：borderbox属性</p></li></ul><h3 id="版心居中" tabindex="-1"><a class="header-anchor" href="#版心居中"><span>版心居中</span></a></h3><p>盒子整体居中，让网页内容都在中间显示，盒子一定要有宽度属性，否则无法居中， 计算原理 浏览器全宽减去盒子宽度除以2</p><p>margin</p><h3 id="清除默认样式" tabindex="-1"><a class="header-anchor" href="#清除默认样式"><span>清除默认样式</span></a></h3><p>去除标签的默认样式，通配符的方式 或者选择所有带默认属性的标签进行设置</p><p>去除内边距外边距</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>*{
padding:0;
margin:0;
box-sizing: border-box;启动内减避免撑大盒子
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>去除有序无序的默认样式小黑点</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">li</span><span class="token punctuation">{</span>
    <span class="token property">list-style</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素溢出" tabindex="-1"><a class="header-anchor" href="#元素溢出"><span>元素溢出</span></a></h3><p>元素超出盒子的处理情况</p><p>overflow属性</p><p>hidden超出隐藏</p><p>scroll无论是否溢出显示滚动条 滚动条右，下</p><p>auto超出后显示滚动条 滚动条右</p><h3 id="外边距的问题" tabindex="-1"><a class="header-anchor" href="#外边距的问题"><span>外边距的问题</span></a></h3><h4 id="合并现象" tabindex="-1"><a class="header-anchor" href="#合并现象"><span>合并现象</span></a></h4><p>当垂直排列的兄弟元素上边的下边距会和下面的上边距合并，自动选择较大的一个值来应用，解决方法只设置一个盒子的边距</p><h4 id="塌陷问题" tabindex="-1"><a class="header-anchor" href="#塌陷问题"><span>塌陷问题</span></a></h4><p>子父级标签如果子级添加上外边距会产生塌陷问题导致父级盒子一起向下移动，解决方式 取消子级的margin 设置父级的padding或者设置父级的overflow为hidden或者设置父级border-top，使用第一种方法，后两种方法是在不改变子盒子属性的情况下附加属性</p><h3 id="行内元素内外边距问题" tabindex="-1"><a class="header-anchor" href="#行内元素内外边距问题"><span>行内元素内外边距问题</span></a></h3><p>行内元素直接添加margin和padding无法改变元素垂直的位置，通过行高属性改变垂直位置 line-height</p><h3 id="盒子的圆角属性" tabindex="-1"><a class="header-anchor" href="#盒子的圆角属性"><span>盒子的圆角属性</span></a></h3><p>border-redius值可以px或者百分比，值的原理就是圆角半径</p><p>可以多个值和内外边距多值一个意思，没值会取对角</p><h4 id="正圆-头像" tabindex="-1"><a class="header-anchor" href="#正圆-头像"><span>正圆-头像</span></a></h4><p>正方形盒子设置圆角属性值为宽高的一半或者50%（正方形最大就是百分之50再大也没效果）</p><h4 id="胶囊" tabindex="-1"><a class="header-anchor" href="#胶囊"><span>胶囊</span></a></h4><p>长方形 ，圆角值为高的一半</p><h3 id="盒子的阴影" tabindex="-1"><a class="header-anchor" href="#盒子的阴影"><span>盒子的阴影</span></a></h3><p>box-shadow</p><p>取值 x轴偏移量 Y轴偏移量 模糊半径 扩散半径 颜色 内外阴影(不写就是外)</p><p>xy为必要值，默认外阴影，内阴影需要添加inset</p><h3 id="css属性书写顺序" tabindex="-1"><a class="header-anchor" href="#css属性书写顺序"><span>css属性书写顺序</span></a></h3><p>提高浏览区渲染效率</p><ol><li>盒子属性</li><li>文字样式</li><li>圆角阴影等修饰属性</li></ol><h3 id="何时使用img" tabindex="-1"><a class="header-anchor" href="#何时使用img"><span>何时使用img</span></a></h3><p>不作为装饰的时候使用，平常不重要的使用背景去实现</p><h3 id="盒子取负值" tabindex="-1"><a class="header-anchor" href="#盒子取负值"><span>盒子取负值</span></a></h3><p>可以对上一层盒子做覆盖</p><h3 id="标准流" tabindex="-1"><a class="header-anchor" href="#标准流"><span>标准流</span></a></h3><p>默认的标签显示模式 ，如div独占一行，span行内可显示多个</p><h3 id="浮动-old" tabindex="-1"><a class="header-anchor" href="#浮动-old"><span>浮动-old</span></a></h3><p>float属性 left基于父标签左对齐 right基于父标签右对齐</p><p>特点，顶对齐，行内块元素特点，拖标（摆脱标准流控制）</p><p>浮动后会脱离标准流的控制不再独占一行，盒子要么都浮动，要么都不浮动</p><p>需要注意，父级如果宽度不够，则会超出内容</p><h4 id="清除浮动-脱标带来的问题" tabindex="-1"><a class="header-anchor" href="#清除浮动-脱标带来的问题"><span>清除浮动！！脱标带来的问题</span></a></h4><p>如果父级标签没有高度，子级标签又有浮动，那么排版就会错乱。因为没有高度而浮动以后的标签又没有标准流那么就无法撑开盒子，导致排版错乱</p><p>解决方法4种</p><ol><li><p>额外标签法工作中一般类名为clearfix：在父元素的最后加一个块级元素 比如div 加css属性clear：both/left/right 清除哪个方位的浮动影响一般就用both</p></li><li><p>单伪元素法 写好模版直接调用类父级标签添加</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.clearfix::after</span><span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>
    <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>双伪元素法 （推荐）</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">这里的before是为了解决外边距塌陷的问题
.clearfix::before,
.clearfix::after</span><span class="token punctuation">{</span>
    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.clearfix::after</span><span class="token punctuation">{</span>
    <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>overflow法 父元素添加overflow：hidden，检查父级范围</p></li></ol><h3 id="flex布局替代float" tabindex="-1"><a class="header-anchor" href="#flex布局替代float"><span>flex布局替代float</span></a></h3><p>弹性布局 ，不会出现脱标的情况</p><p>为父级盒子添加display:flex构成弹性容器，里面的元素称为弹性盒子。默认主轴是以x轴的方向进行浮动，弹性盒子会自动挤压或者拉升。侧轴/交叉轴默认在垂直方向</p><h4 id="flex布局" tabindex="-1"><a class="header-anchor" href="#flex布局"><span>flex布局</span></a></h4><table><thead><tr><th></th></tr></thead><tbody><tr><td>display：flex创建flex容器</td></tr></tbody></table><ul><li><p>justify-content主轴对齐方式</p><table><thead><tr><th>属性值</th><th>效果</th></tr></thead><tbody><tr><td>flex-start</td><td>默认值，从起点开始，也就是左对齐</td></tr><tr><td>flex-end</td><td>从终点开始也就是右对齐</td></tr><tr><td>center</td><td>沿着主轴居中排列，盒子居中对齐</td></tr><tr><td>space-between</td><td>延主轴均匀排列，间距在弹性盒子之间相等。计算规则父级宽减去所有子级元素宽剩下的均匀分配</td></tr><tr><td>space-around</td><td>延主轴均匀排列，间距分布在盒子两侧。中间的间距是两边的二倍</td></tr><tr><td>space-evenly</td><td>延主轴均匀排列，弹性盒子与容器之间的间距相等。均匀分配容器间距包括左右</td></tr></tbody></table></li><li><p>align-items当前盒子容器内所有盒子侧轴对齐方式给容器设置（这里注意，之前因为默认铺满的情况排查过，只有stretch在弹性盒子没有高度的情况下会铺满侧轴）</p><p>stretch 如果弹性盒子没有设置高度，那么弹性盒子的高会铺满，而宽就是内容的宽度</p><p>center弹性盒子延侧轴居中排列</p><p>flex-start沿着侧轴起点排列</p><p>flex-end沿着侧轴终点排列</p></li><li><p>align-self某个弹性盒子侧轴对齐方式给弹性盒子设置</p><p>参数同align-items</p></li><li><p>flex-direction修改主轴方向，则侧轴自动到反方向水平/垂直</p><p>row水平从左向右 默认</p><p>column垂直从上到下</p><p>row-reverse 水平从右向左</p><p>column-reverse 垂直从下向上</p></li><li><p>flex弹性伸缩比（弹性盒子）</p><p>整数数字，占用剩余父级盒子剩余尺寸的份数，通过剩余盒子按总份数拆分决定占比</p><p>默认情况主轴靠内容撑开，侧轴默认拉升</p></li><li><p>flex-wrap弹性盒子换行（容器）</p><p>因为默认不换行，所有的元素都会挤在一行均匀分配尺寸</p><p>wrap 换行</p><p>no-wrap 不换行</p></li><li><p>align-content行对齐方式 对单行弹性盒子不生效</p><p>和主轴对齐方式属性一致</p></li></ul><h3 id="名词" tabindex="-1"><a class="header-anchor" href="#名词"><span>名词</span></a></h3><p>通栏 宽度与浏览器窗口相同的盒子</p><h3 id="项目" tabindex="-1"><a class="header-anchor" href="#项目"><span>项目</span></a></h3><h4 id="网页中logo的制作技巧" tabindex="-1"><a class="header-anchor" href="#网页中logo的制作技巧"><span>网页中logo的制作技巧</span></a></h4><ol><li><p>单击跳转到首页</p></li><li><p>搜索引擎优化，提升网站搜索排名</p><p>实现方式 为a标签设置背景</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span>网站关键字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="导航制作技巧" tabindex="-1"><a class="header-anchor" href="#导航制作技巧"><span>导航制作技巧</span></a></h4><p>使用无序列表包裹a标签</p><p>避免堆砌，降级网站搜索排名</p><h3 id="outline属性去除input焦点框" tabindex="-1"><a class="header-anchor" href="#outline属性去除input焦点框"><span>outline属性去除input焦点框</span></a></h3><h3 id="vertical-align-middle" tabindex="-1"><a class="header-anchor" href="#vertical-align-middle"><span>vertical-align:middle</span></a></h3><p>行内块和行内垂直方向对齐方式</p>`,91),d=[p,i,c];function o(r,h){return n(),s("div",null,d)}const b=e(l,[["render",o],["__file","web-02.html.vue"]]),m=JSON.parse('{"path":"/posts/web/html/web-02.html","title":"CSS（一）基本介绍和常用布局属性","lang":"zh-CN","frontmatter":{"title":"CSS（一）基本介绍和常用布局属性","date":"2024-03-26T00:00:00.000Z","category":["前端"],"tag":["HTML"],"description":"css层叠样式表 style标签包裹 引入方式 内部 style 外部 使用link标签引入 rel关系属性 stylesheet、href .css文件位置 行内 配合js <div style=\\"color:red;\\"></div> 选择器 命名规范 单词小写-单词小写 标签选择器 直接写标签所有指定标签都会被渲染 类选择器 标签class属性可写...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/posts/web/html/web-02.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"CSS（一）基本介绍和常用布局属性"}],["meta",{"property":"og:description","content":"css层叠样式表 style标签包裹 引入方式 内部 style 外部 使用link标签引入 rel关系属性 stylesheet、href .css文件位置 行内 配合js <div style=\\"color:red;\\"></div> 选择器 命名规范 单词小写-单词小写 标签选择器 直接写标签所有指定标签都会被渲染 类选择器 标签class属性可写..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:tag","content":"HTML"}],["meta",{"property":"article:published_time","content":"2024-03-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS（一）基本介绍和常用布局属性\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-26T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"css层叠样式表","slug":"css层叠样式表","link":"#css层叠样式表","children":[]},{"level":2,"title":"引入方式","slug":"引入方式","link":"#引入方式","children":[]},{"level":2,"title":"选择器","slug":"选择器","link":"#选择器","children":[]},{"level":2,"title":"div","slug":"div","link":"#div","children":[]},{"level":2,"title":"文字控制属性","slug":"文字控制属性","link":"#文字控制属性","children":[]},{"level":2,"title":"css特性","slug":"css特性","link":"#css特性","children":[]},{"level":2,"title":"emmet简写提高开发效率","slug":"emmet简写提高开发效率","link":"#emmet简写提高开发效率","children":[]},{"level":2,"title":"背景属性","slug":"背景属性","link":"#背景属性","children":[]},{"level":2,"title":"显示模式","slug":"显示模式","link":"#显示模式","children":[]},{"level":2,"title":"盒子模型","slug":"盒子模型","link":"#盒子模型","children":[{"level":3,"title":"简化写法","slug":"简化写法","link":"#简化写法","children":[]},{"level":3,"title":"盒子的计算","slug":"盒子的计算","link":"#盒子的计算","children":[]},{"level":3,"title":"版心居中","slug":"版心居中","link":"#版心居中","children":[]},{"level":3,"title":"清除默认样式","slug":"清除默认样式","link":"#清除默认样式","children":[]},{"level":3,"title":"元素溢出","slug":"元素溢出","link":"#元素溢出","children":[]},{"level":3,"title":"外边距的问题","slug":"外边距的问题","link":"#外边距的问题","children":[]},{"level":3,"title":"行内元素内外边距问题","slug":"行内元素内外边距问题","link":"#行内元素内外边距问题","children":[]},{"level":3,"title":"盒子的圆角属性","slug":"盒子的圆角属性","link":"#盒子的圆角属性","children":[]},{"level":3,"title":"盒子的阴影","slug":"盒子的阴影","link":"#盒子的阴影","children":[]},{"level":3,"title":"css属性书写顺序","slug":"css属性书写顺序","link":"#css属性书写顺序","children":[]},{"level":3,"title":"何时使用img","slug":"何时使用img","link":"#何时使用img","children":[]},{"level":3,"title":"盒子取负值","slug":"盒子取负值","link":"#盒子取负值","children":[]},{"level":3,"title":"标准流","slug":"标准流","link":"#标准流","children":[]},{"level":3,"title":"浮动-old","slug":"浮动-old","link":"#浮动-old","children":[]},{"level":3,"title":"flex布局替代float","slug":"flex布局替代float","link":"#flex布局替代float","children":[]},{"level":3,"title":"名词","slug":"名词","link":"#名词","children":[]},{"level":3,"title":"项目","slug":"项目","link":"#项目","children":[]},{"level":3,"title":"outline属性去除input焦点框","slug":"outline属性去除input焦点框","link":"#outline属性去除input焦点框","children":[]},{"level":3,"title":"vertical-align:middle","slug":"vertical-align-middle","link":"#vertical-align-middle","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":12.03,"words":3609},"filePathRelative":"posts/web/html/web-02.md","localizedDate":"2024年3月26日","autoDesc":true}');export{b as comp,m as data};
