import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as t,b as s}from"./app-D3p8wuGf.js";const n={},i=s(`<h1 id="sha256sum" tabindex="-1"><a class="header-anchor" href="#sha256sum"><span>sha256sum</span></a></h1><p>用于计算文件的 SHA-256 哈希值</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>sha256sum命令</strong> 是打印或检查 SHA256（256位）校验</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sha256sum <span class="token punctuation">[</span>OPTION<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>FILE<span class="token punctuation">]</span><span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-b, <span class="token parameter variable">--binary</span>  <span class="token comment"># 以二进制模式读取</span>
-c, <span class="token parameter variable">--check</span>   <span class="token comment"># 从文件中读取 SHA256 校验和并进行检查</span>
    <span class="token parameter variable">--tag</span>     <span class="token comment"># 创建 BSD 风格的校验和</span>
-t, <span class="token parameter variable">--text</span>    <span class="token comment"># 以文本模式读取（默认）</span>
-z, <span class="token parameter variable">--zero</span>    <span class="token comment"># 每行输出以 NUL 结尾，而不是换行符，并禁用文件名转义</span>
    <span class="token parameter variable">--help</span>    <span class="token comment"># 显示此帮助并退出</span>
    <span class="token parameter variable">--version</span> <span class="token comment"># 输出版本信息并退出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>以下是一些使用 sha256sum 命令的示例：</p><ol><li>计算文件的 SHA-256 哈希值</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sha256sum file.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将会输出文件 file.txt 的 SHA-256 哈希值和文件名。</p><ol start="2"><li>计算多个文件的 SHA-256 哈希值</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sha256sum file1.txt file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将会输出文件 file1.txt 和 file2.txt 的 SHA-256 哈希值和文件名。</p><ol start="3"><li>将 SHA-256 哈希值保存到文件中</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sha256sum file.txt &gt; hash.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将会将文件 file.txt 的 SHA-256 哈希值保存到文件 hash.txt 中。</p><ol start="4"><li>验证文件的 SHA-256 哈希值</li></ol><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>sha256sum -c hash.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将会验证文件的 SHA-256 哈希值是否与 hash.txt 中的值匹配。如果匹配，输出 OK，否则输出 FAILED。</p>`,22),l=[i];function r(d,o){return e(),t("div",null,l)}const m=a(n,[["render",r],["__file","sha256sum.html.vue"]]),u=JSON.parse('{"path":"/command/linux/sha256sum.html","title":"sha256sum","lang":"zh-CN","frontmatter":{"description":"sha256sum 用于计算文件的 SHA-256 哈希值 补充说明 sha256sum命令 是打印或检查 SHA256（256位）校验 语法 选项 实例 以下是一些使用 sha256sum 命令的示例： 计算文件的 SHA-256 哈希值 这将会输出文件 file.txt 的 SHA-256 哈希值和文件名。 计算多个文件的 SHA-256 哈希值 ...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/sha256sum.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"sha256sum"}],["meta",{"property":"og:description","content":"sha256sum 用于计算文件的 SHA-256 哈希值 补充说明 sha256sum命令 是打印或检查 SHA256（256位）校验 语法 选项 实例 以下是一些使用 sha256sum 命令的示例： 计算文件的 SHA-256 哈希值 这将会输出文件 file.txt 的 SHA-256 哈希值和文件名。 计算多个文件的 SHA-256 哈希值 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sha256sum\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1,"words":299},"filePathRelative":"command/linux/sha256sum.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
