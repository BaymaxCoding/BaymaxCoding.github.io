import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,e as n}from"./app-D_HUMAmc.js";const t={},l=n(`<h1 id="logger" tabindex="-1"><a class="header-anchor" href="#logger"><span>logger</span></a></h1><p>在系统日志中记录相应条目</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>logger命令</strong> 是用于往系统中写入日志，他提供一个shell命令接口到syslog系统模块</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>logger <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> -T, <span class="token parameter variable">--tcp</span>             使用流连接<span class="token punctuation">(</span>TCP<span class="token punctuation">)</span>
 -d, <span class="token parameter variable">--udp</span>             使用数据报<span class="token punctuation">(</span>UDP<span class="token punctuation">)</span>
 -i, <span class="token parameter variable">--id</span>              逐行记录每一次logger的进程ID
 -f, <span class="token parameter variable">--file</span> <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span>     记录特定的文件
 -h, <span class="token parameter variable">--help</span>            显示帮助文本并退出
 -n, <span class="token parameter variable">--server</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>   写入指定的远程syslog服务器，使用UDP代替内装式syslog的例程
 -P, <span class="token parameter variable">--port</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span>     使用指定的UDP端口。默认的端口号是514
 -p, <span class="token parameter variable">--priority</span> <span class="token operator">&lt;</span>prio<span class="token operator">&gt;</span> 指定输入消息的优先级，优先级可以是数字或者指定为 <span class="token string">&quot; facility.level&quot;</span> 的格式。
                       比如：<span class="token string">&quot; -p local3.info &quot;</span> local3 这个设备的消息级别为 info。
                       默认级别是 <span class="token string">&quot;user.notice&quot;</span>
 -s, <span class="token parameter variable">--stderr</span>          输出标准错误到系统日志。
 -t, <span class="token parameter variable">--tag</span> <span class="token operator">&lt;</span>tag<span class="token operator">&gt;</span>       指定标记记录
 -u, <span class="token parameter variable">--socket</span> <span class="token operator">&lt;</span>socket<span class="token operator">&gt;</span> 写入指定的socket，而不是到内置系统日志例程。
 -V, <span class="token parameter variable">--version</span>         输出版本信息并退出
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>logger <span class="token parameter variable">-p</span> syslog.info <span class="token string">&quot;backup.sh is starting&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10),o=[l];function r(i,p){return e(),s("div",null,o)}const g=a(t,[["render",r],["__file","logger.html.vue"]]),m=JSON.parse('{"path":"/command/linux/logger.html","title":"logger","lang":"zh-CN","frontmatter":{"description":"logger 在系统日志中记录相应条目 补充说明 logger命令 是用于往系统中写入日志，他提供一个shell命令接口到syslog系统模块 语法 选项 例子","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/logger.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"logger"}],["meta",{"property":"og:description","content":"logger 在系统日志中记录相应条目 补充说明 logger命令 是用于往系统中写入日志，他提供一个shell命令接口到syslog系统模块 语法 选项 例子"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"logger\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.89,"words":267},"filePathRelative":"command/linux/logger.md","localizedDate":"2024年4月12日","autoDesc":true}');export{g as comp,m as data};
