import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as t,b as n}from"./app-DOGW-9XX.js";const s={},i=n(`<h1 id="true" tabindex="-1"><a class="header-anchor" href="#true"><span>true</span></a></h1><p>返回状态为成功。</p><h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要"><span>概要</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="主要用途" tabindex="-1"><a class="header-anchor" href="#主要用途"><span>主要用途</span></a></h2><ul><li>用于和其他命令进行逻辑运算。</li></ul><h2 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值</span></a></h2><p>返回状态总是成功；返回值为0。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 当你的脚本设置set -e时，任何返回值为失败的命令都会使得脚本退出。</span>
<span class="token builtin class-name">set</span> <span class="token parameter variable">-e</span>
<span class="token comment"># 如何临时跳过呢？下面的语句使用逻辑或操作符连接true，返回值一定为真。</span>
some_command <span class="token operator">||</span> <span class="token boolean">true</span>

<span class="token comment"># 当然，和python的pass一样，也可以用作条件语句临时占位。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ol><li>该命令是bash内建命令，相关的帮助信息请查看<code>help</code>命令。</li></ol>`,12),l=[i];function r(o,c){return a(),t("div",null,l)}const m=e(s,[["render",r],["__file","true.html.vue"]]),h=JSON.parse('{"path":"/command/linux/true.html","title":"true","lang":"zh-CN","frontmatter":{"description":"true 返回状态为成功。 概要 主要用途 用于和其他命令进行逻辑运算。 返回值 返回状态总是成功；返回值为0。 例子 注意 该命令是bash内建命令，相关的帮助信息请查看help命令。","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/true.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"true"}],["meta",{"property":"og:description","content":"true 返回状态为成功。 概要 主要用途 用于和其他命令进行逻辑运算。 返回值 返回状态总是成功；返回值为0。 例子 注意 该命令是bash内建命令，相关的帮助信息请查看help命令。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"true\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"主要用途","slug":"主要用途","link":"#主要用途","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"command/linux/true.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,h as data};
