import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as s}from"./app-D_HUMAmc.js";const a={},l=s(`<h1 id="lsof" tabindex="-1"><a class="header-anchor" href="#lsof"><span>lsof</span></a></h1><p>显示Linux系统当前已打开的所有文件列表 <code>lsof -p pid</code></p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>lsof命令</strong> 用于查看你进程打开的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回/恢复删除的文件。是十分方便的系统监视工具，因为lsof命令需要访问核心内存和各种文件，所以需要root用户执行。</p><p>在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token punctuation">(</span>选项<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-a：列出打开文件存在的进程；
-c<span class="token operator">&lt;</span>进程名<span class="token operator">&gt;</span>：列出指定进程所打开的文件；
-g：列出GID号进程详情；
-d<span class="token operator">&lt;</span>文件号<span class="token operator">&gt;</span>：列出占用该文件号的进程；
+d<span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>：列出目录下被打开的文件；
+D<span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>：递归列出目录下被打开的文件；
-n<span class="token operator">&lt;</span>目录<span class="token operator">&gt;</span>：列出使用NFS的文件；
-i<span class="token operator">&lt;</span>条件<span class="token operator">&gt;</span>：列出符合条件的进程（协议、:端口、 @ip ）
-p<span class="token operator">&lt;</span>进程号<span class="token operator">&gt;</span>：列出指定进程号所打开的文件；
-u：列出<span class="token environment constant">UID</span>号进程详情；
-h：显示帮助信息；
-v：显示版本信息
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span>
<span class="token builtin class-name">command</span>     PID <span class="token environment constant">USER</span>   FD      <span class="token builtin class-name">type</span>             DEVICE     SIZE       NODE NAME
init          <span class="token number">1</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
init          <span class="token number">1</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
init          <span class="token number">1</span> root  txt       REG                <span class="token number">8,2</span>    <span class="token number">43496</span>    <span class="token number">6121706</span> /sbin/init
init          <span class="token number">1</span> root  mem       REG                <span class="token number">8,2</span>   <span class="token number">143600</span>    <span class="token number">7823908</span> /lib64/ld-2.5.so
init          <span class="token number">1</span> root  mem       REG                <span class="token number">8,2</span>  <span class="token number">1722304</span>    <span class="token number">7823915</span> /lib64/libc-2.5.so
init          <span class="token number">1</span> root  mem       REG                <span class="token number">8,2</span>    <span class="token number">23360</span>    <span class="token number">7823919</span> /lib64/libdl-2.5.so
init          <span class="token number">1</span> root  mem       REG                <span class="token number">8,2</span>    <span class="token number">95464</span>    <span class="token number">7824116</span> /lib64/libselinux.so.1
init          <span class="token number">1</span> root  mem       REG                <span class="token number">8,2</span>   <span class="token number">247496</span>    <span class="token number">7823947</span> /lib64/libsepol.so.1
init          <span class="token number">1</span> root   10u     FIFO               <span class="token number">0,17</span>                <span class="token number">1233</span> /dev/initctl
migration     <span class="token number">2</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
migration     <span class="token number">2</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
migration     <span class="token number">2</span> root  txt   unknown                                        /proc/2/exe
ksoftirqd     <span class="token number">3</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
ksoftirqd     <span class="token number">3</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
ksoftirqd     <span class="token number">3</span> root  txt   unknown                                        /proc/3/exe
migration     <span class="token number">4</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
migration     <span class="token number">4</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
migration     <span class="token number">4</span> root  txt   unknown                                        /proc/4/exe
ksoftirqd     <span class="token number">5</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
ksoftirqd     <span class="token number">5</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
ksoftirqd     <span class="token number">5</span> root  txt   unknown                                        /proc/5/exe
events/0      <span class="token number">6</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
events/0      <span class="token number">6</span> root  rtd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
events/0      <span class="token number">6</span> root  txt   unknown                                        /proc/6/exe
events/1      <span class="token number">7</span> root  cwd       DIR                <span class="token number">8,2</span>     <span class="token number">4096</span>          <span class="token number">2</span> /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>lsof输出各列信息的意义如下：</strong></p><table><thead><tr><th style="text-align:left;">标识</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>COMMAND</code></td><td style="text-align:left;">进程的名称</td></tr><tr><td style="text-align:left;"><code>PID</code></td><td style="text-align:left;">进程标识符</td></tr><tr><td style="text-align:left;"><code>PPID</code></td><td style="text-align:left;">父进程标识符（需要指定-R参数）</td></tr><tr><td style="text-align:left;"><code>USER</code></td><td style="text-align:left;">进程所有者</td></tr><tr><td style="text-align:left;"><code>PGID</code></td><td style="text-align:left;">进程所属组</td></tr><tr><td style="text-align:left;"><code>FD</code></td><td style="text-align:left;">文件描述符，应用程序通过它识别该文件</td></tr></tbody></table><p>文件描述符列表：</p><table><thead><tr><th style="text-align:left;">标识</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cwd</code></td><td style="text-align:left;">表示当前工作目录，即：应用程序的当前工作目录，这是该应用程序启动的目录，除非它本身对这个目录进行更改</td></tr><tr><td style="text-align:left;"><code>txt</code></td><td style="text-align:left;">该类型的文件是程序代码，如应用程序二进制文件本身或共享库，如上列表中显示的 /sbin/init 程序</td></tr><tr><td style="text-align:left;"><code>lnn</code></td><td style="text-align:left;">库引用 (AIX);</td></tr><tr><td style="text-align:left;"><code>er</code></td><td style="text-align:left;">FD 信息错误（参见名称栏）</td></tr><tr><td style="text-align:left;"><code>jld</code></td><td style="text-align:left;">jail 目录 (FreeBSD);</td></tr><tr><td style="text-align:left;"><code>ltx</code></td><td style="text-align:left;">共享库文本（代码和数据）</td></tr><tr><td style="text-align:left;"><code>mxx</code></td><td style="text-align:left;">十六进制内存映射类型编号xx</td></tr><tr><td style="text-align:left;"><code>m86</code></td><td style="text-align:left;">DOS合并映射文件</td></tr><tr><td style="text-align:left;"><code>mem</code></td><td style="text-align:left;">内存映射文件</td></tr><tr><td style="text-align:left;"><code>mmap</code></td><td style="text-align:left;">内存映射设备</td></tr><tr><td style="text-align:left;"><code>pd</code></td><td style="text-align:left;">父目录</td></tr><tr><td style="text-align:left;"><code>rtd</code></td><td style="text-align:left;">根目录</td></tr><tr><td style="text-align:left;"><code>tr</code></td><td style="text-align:left;">内核跟踪文件 (OpenBSD)</td></tr><tr><td style="text-align:left;"><code>v86</code></td><td style="text-align:left;">VP/ix 映射文件</td></tr><tr><td style="text-align:left;"><code>0</code></td><td style="text-align:left;">表示标准输出</td></tr><tr><td style="text-align:left;"><code>1</code></td><td style="text-align:left;">表示标准输入</td></tr><tr><td style="text-align:left;"><code>2</code></td><td style="text-align:left;">表示标准错误</td></tr></tbody></table><p>一般在标准输出、标准错误、标准输入后还跟着文件状态模式：</p><table><thead><tr><th style="text-align:left;">标识</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>u</code></td><td style="text-align:left;">表示该文件被打开并处于读取/写入模式</td></tr><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;">表示该文件被打开并处于只读模式</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;">表示该文件被打开并处于写入模式</td></tr><tr><td style="text-align:left;"><code>空格</code></td><td style="text-align:left;">表示该文件的状态模式为 unknow，且没有锁定</td></tr><tr><td style="text-align:left;"><code>-</code></td><td style="text-align:left;">表示该文件的状态模式为 unknow，且被锁定</td></tr></tbody></table><p>同时在文件状态模式后面，还跟着相关的锁：</p><table><thead><tr><th style="text-align:left;">标识</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>N</code></td><td style="text-align:left;">对于未知类型的Solaris NFS锁</td></tr><tr><td style="text-align:left;"><code>r</code></td><td style="text-align:left;">用于部分文件的读取锁定</td></tr><tr><td style="text-align:left;"><code>R</code></td><td style="text-align:left;">对整个文件进行读取锁定</td></tr><tr><td style="text-align:left;"><code>w</code></td><td style="text-align:left;">对文件的一部分进行写锁定(文件的部分写锁)</td></tr><tr><td style="text-align:left;"><code>W</code></td><td style="text-align:left;">对整个文件进行写锁定(整个文件的写锁)</td></tr><tr><td style="text-align:left;"><code>u</code></td><td style="text-align:left;">用于任何长度的读写锁</td></tr><tr><td style="text-align:left;"><code>U</code></td><td style="text-align:left;">对于未知类型的锁</td></tr><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;">对于文件部分的SCO OpenServer Xenix锁</td></tr><tr><td style="text-align:left;"><code>X</code></td><td style="text-align:left;">对于整个文件的SCO OpenServer Xenix锁</td></tr><tr><td style="text-align:left;"><code>space</code></td><td style="text-align:left;">如果没有锁</td></tr></tbody></table><p><strong>文件类型</strong></p><table><thead><tr><th style="text-align:left;">标识</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>DIR</code></td><td style="text-align:left;">表示目录</td></tr><tr><td style="text-align:left;"><code>CHR</code></td><td style="text-align:left;">表示字符类型</td></tr><tr><td style="text-align:left;"><code>BLK</code></td><td style="text-align:left;">块设备类型</td></tr><tr><td style="text-align:left;"><code>UNIX</code></td><td style="text-align:left;">UNIX 域套接字</td></tr><tr><td style="text-align:left;"><code>FIFO</code></td><td style="text-align:left;">先进先出 (FIFO) 队列</td></tr><tr><td style="text-align:left;"><code>IPv4</code></td><td style="text-align:left;">网际协议 (IP) 套接字</td></tr><tr><td style="text-align:left;"><code>DEVICE</code></td><td style="text-align:left;">指定磁盘的名称</td></tr><tr><td style="text-align:left;"><code>SIZE</code></td><td style="text-align:left;">文件的大小</td></tr><tr><td style="text-align:left;"><code>NODE</code></td><td style="text-align:left;">索引节点（文件在磁盘上的标识）</td></tr><tr><td style="text-align:left;"><code>NAME</code></td><td style="text-align:left;">打开文件的确切名称</td></tr><tr><td style="text-align:left;"><code>REG</code></td><td style="text-align:left;">常规文件</td></tr></tbody></table><p>列出指定进程号所打开的文件:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-p</span> <span class="token variable">$pid</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>获取端口对应的进程ID=&gt;pid</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-i:9981</span> <span class="token parameter variable">-P</span> <span class="token parameter variable">-t</span> <span class="token parameter variable">-sTCP:LISTEN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>列出打开文件的进程:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token variable">$filename</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看端口占用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">lsof</span> -i:<span class="token variable">$port</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,29),d=[l];function o(i,r){return e(),n("div",null,d)}const m=t(a,[["render",o],["__file","lsof.html.vue"]]),u=JSON.parse('{"path":"/command/linux/lsof.html","title":"lsof","lang":"zh-CN","frontmatter":{"description":"lsof 显示Linux系统当前已打开的所有文件列表 lsof -p pid 补充说明 lsof命令 用于查看你进程打开的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回/恢复删除的文件。是十分方便的系统监视工具，因为lsof命令需要访问核心内存和各种文件，所以需要root用户执行。 在linux环境下，任何事物都以文件的形式存在，通过文件...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/lsof.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"lsof"}],["meta",{"property":"og:description","content":"lsof 显示Linux系统当前已打开的所有文件列表 lsof -p pid 补充说明 lsof命令 用于查看你进程打开的文件，打开文件的进程，进程打开的端口(TCP、UDP)。找回/恢复删除的文件。是十分方便的系统监视工具，因为lsof命令需要访问核心内存和各种文件，所以需要root用户执行。 在linux环境下，任何事物都以文件的形式存在，通过文件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lsof\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":4.65,"words":1395},"filePathRelative":"command/linux/lsof.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
