import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,b as n}from"./app-DOGW-9XX.js";const t={},i=n(`<h1 id="mail" tabindex="-1"><a class="header-anchor" href="#mail"><span>mail</span></a></h1><p>命令行下发送和接收电子邮件</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>mail命令</strong> 是命令行的电子邮件发送和接收工具。操作的界面不像elm或pine那么容易使用，但功能非常完整。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mail<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-b<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：指定密件副本的收信人地址；
-c<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：指定副本的收信人地址；
-f<span class="token operator">&lt;</span>邮件文件<span class="token operator">&gt;</span>：读取指定邮件文件中的邮件；
-i：不显示终端发出的信息；
-I：使用互动模式；
-n：程序使用时，不使用mail.rc文件中的设置；
-N：阅读邮件时，不显示邮件的标题；
-s<span class="token operator">&lt;</span>邮件主题<span class="token operator">&gt;</span>：指定邮件的主题；
-u<span class="token operator">&lt;</span>用户帐号<span class="token operator">&gt;</span>：读取指定用户的邮件；
-v：执行时，显示详细的信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>邮件地址：收信人的电子邮箱地址。</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p><strong>直接使用shell当编辑器</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Hello from jsdig.com by shell&quot;</span> admin@jsdig.com
hello,this is the content of mail.
welcome to www.jsdig.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一行是输入的命令，<code>-s</code>表示邮件的主题，后面的<code>admin@jsdig.com</code>则是邮件的接收人，输入完这行命令后回车，会进入邮件正文的编写，我们可以输入任何文字，比如上面的两行。当邮件正文输入完成后，需要按 <strong>CTRL+D</strong> 结束输入，此时会提示你输入Cc地址，即邮件抄送地址，没有直接回车就完成了邮件的发送。</p><p><strong>使用管道进行邮件发送</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello,this is the content of mail.welcome to www.jsdig.com&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Hello from jsdig.com by pipe&quot;</span> admin@jsdig.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用管道直接敲入这行命令即可完成邮件的发送，其中echo后的是邮件正文。</p><p><strong>使用文件进行邮件发送</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Hello from jsdig.com by file&quot;</span> admin@jsdig.com <span class="token operator">&lt;</span> mail.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用上面的命令后，我们就可以把mail.txt文件的内容作为邮件的内容发送给admin@jsdig.com了。</p><p>使用上述三种方式都可以给外部邮箱进行邮件发送，但因为前面2中都是直接在shell中敲入邮件内容，因此无法输入中文，即使我们使用粘贴的方式输入了中文，那么收到的邮件也是乱码的。但第3种方式，我们可以在window下编辑好邮件内容后，放到linux下，再进行发送，这样就可以正常发送中文了。不过目前邮件的中文标题暂时没有找到解决办法。</p><p>因为mail程序本身就是调用sendmail来进行邮件发送的，因此我们可以在mail命令中使用sendmail的参数进行配置，比如我想使用特定的发件人发送邮件，可以使用如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mail <span class="token parameter variable">-s</span> <span class="token string">&quot;Hello from jsdig.com with sender&quot;</span> admin@jsdig.com -- <span class="token parameter variable">-f</span> user@jsdig.com<span class="token operator">&lt;</span>mail.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的命令中，我们使用了– -f user@jsdig.com这样的参数，这是sendmail的选项，其中-f表示邮件的发送人邮件地址。</p><p>很多情况下，我们也需要使用邮件来发送附件，在linux下使用mail命令发送附件也很简单，不过首先需要安装uuencode软件包，这个程序是对二进制文件进行编码使其适合通过邮件进行发送，在CentOS上安装该软件包如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> sharutils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完成后我们就可以来进行附件的发送了，使用如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">uuencode</span> test.txt <span class="token builtin class-name">test</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> <span class="token string">&quot;hello,see the attachement&quot;</span> admin@jsdig.com<span class="token operator">&lt;</span>mail.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完成后就可以把text.txt文件作为邮件的附件发送出去了。uuencode有两个参数，第一个是要发送的文件，第二个是显示的文件名称。</p><p>这里我主要介绍的是在CentOS下使用mail发送电子邮件的一些使用方法，需要的要求是你的linux必须安装了sendmail并开启了，同时保证可以连接外网。另外，文章中提到的命令本人都经过亲自测试，保证完全可用，不过你需要将命令中的电子邮件地址换成自己的电子邮件地址。</p>`,30),l=[i];function o(d,r){return e(),s("div",null,l)}const m=a(t,[["render",o],["__file","mail.html.vue"]]),u=JSON.parse('{"path":"/command/linux/mail.html","title":"mail","lang":"zh-CN","frontmatter":{"description":"mail 命令行下发送和接收电子邮件 补充说明 mail命令 是命令行的电子邮件发送和接收工具。操作的界面不像elm或pine那么容易使用，但功能非常完整。 语法 选项 参数 邮件地址：收信人的电子邮箱地址。 实例 直接使用shell当编辑器 第一行是输入的命令，-s表示邮件的主题，后面的admin@jsdig.com则是邮件的接收人，输入完这行命令后...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/mail.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"mail"}],["meta",{"property":"og:description","content":"mail 命令行下发送和接收电子邮件 补充说明 mail命令 是命令行的电子邮件发送和接收工具。操作的界面不像elm或pine那么容易使用，但功能非常完整。 语法 选项 参数 邮件地址：收信人的电子邮箱地址。 实例 直接使用shell当编辑器 第一行是输入的命令，-s表示邮件的主题，后面的admin@jsdig.com则是邮件的接收人，输入完这行命令后..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mail\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":3.39,"words":1018},"filePathRelative":"command/linux/mail.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
