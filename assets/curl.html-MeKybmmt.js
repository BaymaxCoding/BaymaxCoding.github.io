import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,e}from"./app-D_HUMAmc.js";const l={},t=e(`<h1 id="curl" tabindex="-1"><a class="header-anchor" href="#curl"><span>curl</span></a></h1><p>利用URL规则在命令行下工作的文件传输工具</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>curl命令</strong> 是一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称curl为下载工具。作为一款强力工具，curl支持包括HTTP、HTTPS、ftp等众多协议，还支持POST、cookies、认证、从指定偏移处下载部分文件、用户代理字符串、限速、文件大小、进度条等特征。做网页处理流程和数据检索自动化，curl可以助一臂之力。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>curl<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-a</span>   <span class="token parameter variable">--append</span>                                   <span class="token comment"># 上传文件时，附加到目标文件 </span>
<span class="token parameter variable">-A</span>   --user-agent                               <span class="token comment"># 设置用户代理发送给服务器 </span>
<span class="token parameter variable">-anyauth</span>                                        <span class="token comment"># 可以使用“任何”身份验证方法 </span>
<span class="token parameter variable">-b</span>   <span class="token parameter variable">--cookie</span>                                   <span class="token comment"># cookie字符串或文件读取位置 </span>
     <span class="token parameter variable">--basic</span>                                    <span class="token comment"># 使用HTTP基本验证 </span>
<span class="token parameter variable">-B</span>   --use-ascii                                <span class="token comment"># 使用ASCII /文本传输 </span>
<span class="token parameter variable">-c</span>   --cookie-jar                               <span class="token comment"># 操作结束后把cookie写入到这个文件中 </span>
<span class="token parameter variable">-C</span>   --continue-at                              <span class="token comment"># 断点续传 </span>
<span class="token parameter variable">-d</span>   <span class="token parameter variable">--data</span>                                     <span class="token comment"># HTTP POST方式传送数据 </span>
     --data-ascii                               <span class="token comment"># 以ascii的方式post数据 </span>
     --data-binary                              <span class="token comment"># 以二进制的方式post数据 </span>
     <span class="token parameter variable">--negotiate</span>                                <span class="token comment"># 使用HTTP身份验证 </span>
     <span class="token parameter variable">--digest</span>                                   <span class="token comment"># 使用数字身份验证 </span>
     --disable-eprt                             <span class="token comment"># 禁止使用EPRT或LPRT </span>
     --disable-epsv                             <span class="token comment"># 禁止使用EPSV </span>
<span class="token parameter variable">-D</span>   --dump-header                              <span class="token comment"># 把header信息写入到该文件中 </span>
     --egd-file                                 <span class="token comment"># 为随机数据(SSL)设置EGD socket路径 </span>
     --tcp-nodelay                              <span class="token comment"># 使用TCP\\_NODELAY选项 </span>
<span class="token parameter variable">-e</span>   <span class="token parameter variable">--referer</span>                                  <span class="token comment"># 来源网址 </span>
<span class="token parameter variable">-E</span>   <span class="token parameter variable">--cert</span>                                     <span class="token comment"># 客户端证书文件和密码 (SSL)</span>
     --cert-type                                <span class="token comment"># 证书文件类型 (DER/PEM/ENG) (SSL)</span>
     <span class="token parameter variable">--key</span>                                      <span class="token comment"># 私钥文件名 (SSL)</span>
     --key-type                                 <span class="token comment"># 私钥文件类型 (DER/PEM/ENG) (SSL)</span>
     <span class="token parameter variable">--pass</span>                                     <span class="token comment"># 私钥密码 (SSL)</span>
     <span class="token parameter variable">--engine</span>                                   <span class="token comment"># 加密引擎使用 (SSL). &quot;--engine list&quot; for list </span>
     <span class="token parameter variable">--cacert</span>                                   <span class="token comment"># CA证书 (SSL)</span>
     <span class="token parameter variable">--capath</span>                                   <span class="token comment"># CA目录 (made using c\\_rehash) to verify peer against (SSL)</span>
     <span class="token parameter variable">--ciphers</span>                                  <span class="token comment"># SSL密码 </span>
     <span class="token parameter variable">--compressed</span>                               <span class="token comment"># 要求返回是压缩的形势 (using deflate or gzip)</span>
     --connect-timeout                          <span class="token comment"># 设置最大请求时间 </span>
     --create-dirs                              <span class="token comment"># 建立本地目录的目录层次结构 </span>
     <span class="token parameter variable">--crlf</span>                                     <span class="token comment"># 上传是把LF转变成CRLF </span>
<span class="token parameter variable">-f</span>   <span class="token parameter variable">--fail</span>                                     <span class="token comment"># 连接失败时不显示http错误 </span>
     --ftp-create-dirs                          <span class="token comment"># 如果远程目录不存在，创建远程目录 </span>
     --ftp-method <span class="token punctuation">\\</span><span class="token punctuation">[</span>multicwd/nocwd/singlecwd<span class="token punctuation">]</span>   <span class="token comment"># 控制CWD的使用 </span>
     --ftp-pasv                                 <span class="token comment"># 使用 PASV/EPSV 代替端口 </span>
     --ftp-skip-pasv-ip                         <span class="token comment"># 使用PASV的时候,忽略该IP地址 </span>
     --ftp-ssl                                  <span class="token comment"># 尝试用 SSL/TLS 来进行ftp数据传输 </span>
     --ftp-ssl-reqd                             <span class="token comment"># 要求用 SSL/TLS 来进行ftp数据传输 </span>
<span class="token parameter variable">-F</span>   <span class="token parameter variable">--form</span>                                     <span class="token comment"># 模拟http表单提交数据 </span>
     --form-string                              <span class="token comment"># 模拟http表单提交数据 </span>
<span class="token parameter variable">-g</span>   <span class="token parameter variable">--globoff</span>                                  <span class="token comment"># 禁用网址序列和范围使用{}和\\[] </span>
<span class="token parameter variable">-G</span>   <span class="token parameter variable">--get</span>                                      <span class="token comment"># 以get的方式来发送数据 </span>
<span class="token parameter variable">-H</span>   <span class="token parameter variable">--header</span>                                   <span class="token comment"># 自定义头信息传递给服务器 </span>
     --ignore-content-length                    <span class="token comment"># 忽略的HTTP头信息的长度 </span>
<span class="token parameter variable">-i</span>   <span class="token parameter variable">--include</span>                                  <span class="token comment"># 输出时包括protocol头信息 </span>
<span class="token parameter variable">-I</span>   <span class="token parameter variable">--head</span>                                     <span class="token comment"># 只显示请求头信息 </span>
<span class="token parameter variable">-j</span>   --junk-session-cookies                     <span class="token comment"># 读取文件进忽略session cookie </span>
     <span class="token parameter variable">--interface</span>                                <span class="token comment"># 使用指定网络接口/地址 </span>
     <span class="token parameter variable">--krb4</span>                                     <span class="token comment"># 使用指定安全级别的krb4 </span>
<span class="token parameter variable">-k</span>   <span class="token parameter variable">--insecure</span>                                 <span class="token comment"># 允许不使用证书到SSL站点 </span>
<span class="token parameter variable">-K</span>   <span class="token parameter variable">--config</span>                                   <span class="token comment"># 指定的配置文件读取 </span>
<span class="token parameter variable">-l</span>   --list-only                                <span class="token comment"># 列出ftp目录下的文件名称 </span>
     --limit-rate                               <span class="token comment"># 设置传输速度 </span>
     --local-port                               <span class="token comment"># 强制使用本地端口号 </span>
<span class="token parameter variable">-m</span>   --max-time                                 <span class="token comment"># 设置最大传输时间 </span>
     --max-redirs                               <span class="token comment"># 设置最大读取的目录数 </span>
     --max-filesize                             <span class="token comment"># 设置最大下载的文件总量 </span>
<span class="token parameter variable">-M</span>   <span class="token parameter variable">--manual</span>                                   <span class="token comment"># 显示全手动 </span>
<span class="token parameter variable">-n</span>   <span class="token parameter variable">--netrc</span>                                    <span class="token comment"># 从netrc文件中读取用户名和密码 </span>
     --netrc-optional                           <span class="token comment"># 使用 .netrc 或者 URL来覆盖-n </span>
     <span class="token parameter variable">--ntlm</span>                                     <span class="token comment"># 使用 HTTP NTLM 身份验证 </span>
<span class="token parameter variable">-N</span>   --no-buffer                                <span class="token comment"># 禁用缓冲输出 </span>
<span class="token parameter variable">-o</span>   <span class="token parameter variable">--output</span>                                   <span class="token comment"># 把输出写到该文件中 </span>
<span class="token parameter variable">-O</span>   --remote-name                              <span class="token comment"># 把输出写到该文件中，保留远程文件的文件名 </span>
<span class="token parameter variable">-p</span>   <span class="token parameter variable">--proxytunnel</span>                              <span class="token comment"># 使用HTTP代理 </span>
     --proxy-anyauth                            <span class="token comment"># 选择任一代理身份验证方法 </span>
     --proxy-basic                              <span class="token comment"># 在代理上使用基本身份验证 </span>
     --proxy-digest                             <span class="token comment"># 在代理上使用数字身份验证 </span>
     --proxy-ntlm                               <span class="token comment"># 在代理上使用ntlm身份验证 </span>
<span class="token parameter variable">-P</span>   --ftp-port                                 <span class="token comment"># 使用端口地址，而不是使用PASV </span>
<span class="token parameter variable">-q</span>                                              <span class="token comment"># 作为第一个参数，关闭 .curlrc </span>
<span class="token parameter variable">-Q</span>   <span class="token parameter variable">--quote</span>                                    <span class="token comment"># 文件传输前，发送命令到服务器 </span>
<span class="token parameter variable">-r</span>   <span class="token parameter variable">--range</span>                                    <span class="token comment"># 检索来自HTTP/1.1或FTP服务器字节范围 </span>
--range-file                                    <span class="token comment"># 读取（SSL）的随机文件 </span>
<span class="token parameter variable">-R</span>   --remote-time                              <span class="token comment"># 在本地生成文件时，保留远程文件时间 </span>
     <span class="token parameter variable">--retry</span>                                    <span class="token comment"># 传输出现问题时，重试的次数 </span>
     --retry-delay                              <span class="token comment"># 传输出现问题时，设置重试间隔时间 </span>
     --retry-max-time                           <span class="token comment"># 传输出现问题时，设置最大重试时间 </span>
<span class="token parameter variable">-s</span>   <span class="token parameter variable">--silent</span>                                   <span class="token comment"># 静默模式。不输出任何东西 </span>
<span class="token parameter variable">-S</span>   --show-error                               <span class="token comment"># 显示错误 </span>
     <span class="token parameter variable">--socks4</span>                                   <span class="token comment"># 用socks4代理给定主机和端口 </span>
     <span class="token parameter variable">--socks5</span>                                   <span class="token comment"># 用socks5代理给定主机和端口 </span>
     <span class="token parameter variable">--stderr</span>                                   <span class="token comment">#   </span>
<span class="token parameter variable">-t</span>   --telnet-option                            <span class="token comment"># Telnet选项设置 </span>
     <span class="token parameter variable">--trace</span>                                    <span class="token comment"># 对指定文件进行debug </span>
     --trace-ascii                              <span class="token comment"># Like --跟踪但没有hex输出 </span>
     --trace-time                               <span class="token comment"># 跟踪/详细输出时，添加时间戳 </span>
<span class="token parameter variable">-T</span>   --upload-file                              <span class="token comment"># 上传文件 </span>
     <span class="token parameter variable">--url</span> <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>                                <span class="token comment"># 要使用的 URL</span>
<span class="token parameter variable">-u</span>   <span class="token parameter variable">--user</span>                                     <span class="token comment"># 设置服务器的用户和密码 </span>
<span class="token parameter variable">-U</span>   --proxy-user                               <span class="token comment"># 设置代理用户名和密码 </span>
<span class="token parameter variable">-w</span>   --write-out <span class="token punctuation">\\</span><span class="token punctuation">[</span>format<span class="token punctuation">]</span>                      <span class="token comment"># 什么输出完成后 </span>
<span class="token parameter variable">-x</span>   <span class="token parameter variable">--proxy</span>                                    <span class="token comment"># 在给定的端口上使用HTTP代理 </span>
<span class="token parameter variable">-X</span>   <span class="token parameter variable">--request</span>                                  <span class="token comment"># 指定什么命令 </span>
<span class="token parameter variable">-y</span>   --speed-time                               <span class="token comment"># 放弃限速所要的时间，默认为30 </span>
<span class="token parameter variable">-Y</span>   --speed-limit                              <span class="token comment"># 停止传输速度的限制，速度时间 </span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><h4 id="文件下载" tabindex="-1"><a class="header-anchor" href="#文件下载"><span><strong>文件下载</strong></span></a></h4><p>curl命令可以用来执行下载、发送各种HTTP请求，指定HTTP头部等操作。如果系统没有curl可以使用<code>yum install curl</code>安装，也可以下载安装。curl是将下载文件输出到stdout，将进度信息输出到stderr，不显示进度信息使用<code>--silent</code>选项。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL <span class="token parameter variable">--silent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令是将下载文件输出到终端，所有下载的数据都被写入到stdout。</p><p>使用选项<code>-O</code>将下载的数据写入到文件，必须使用文件的绝对地址：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> http://example.com/text.iso <span class="token parameter variable">--silent</span> <span class="token parameter variable">-O</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项<code>-o</code>将下载数据写入到指定名称的文件中，并使用<code>--progress</code>显示进度条：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> http://example.com/test.iso <span class="token parameter variable">-o</span> filename.iso <span class="token parameter variable">--progress</span>
<span class="token comment">######################################### 100.0%</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="不输出错误和进度信息" tabindex="-1"><a class="header-anchor" href="#不输出错误和进度信息"><span><strong>不输出错误和进度信息</strong></span></a></h4><p><code>-s</code> 参数将不输出错误和进度信息。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> https://www.example.com
<span class="token comment"># 上面命令一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想让 curl 不产生任何输出，可以使用下面的命令。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-o</span> /dev/null https://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="断点续传" tabindex="-1"><a class="header-anchor" href="#断点续传"><span><strong>断点续传</strong></span></a></h4><p>curl能够从特定的文件偏移处继续下载，它可以通过指定一个偏移量来下载部分文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL/File <span class="token parameter variable">-C</span> 偏移量

<span class="token comment">#偏移量是以字节为单位的整数，如果让curl自动推断出正确的续传位置使用-C -：</span>
<span class="token function">curl</span> <span class="token parameter variable">-C</span> <span class="token parameter variable">-URL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用curl设置参照页字符串" tabindex="-1"><a class="header-anchor" href="#使用curl设置参照页字符串"><span><strong>使用curl设置参照页字符串</strong></span></a></h4><p>参照页是位于HTTP头部中的一个字符串，用来表示用户是从哪个页面到达当前页面的，如果用户点击网页A中的某个连接，那么用户就会跳转到B网页，网页B头部的参照页字符串就包含网页A的URL。</p><p>使用 <code>--referer</code> 选项指定参照页字符串：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--referer</span> http://www.example.com http://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="用curl设置用户代理字符串" tabindex="-1"><a class="header-anchor" href="#用curl设置用户代理字符串"><span><strong>用curl设置用户代理字符串</strong></span></a></h4><p>有些网站访问会提示只能使用IE浏览器来访问，这是因为这些网站设置了检查用户代理，可以使用curl把用户代理设置为IE，这样就可以访问了。使用 <code>--user-agent</code> 或者 <code>-A</code> 选项：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL --user-agent <span class="token string">&quot;Mozilla/5.0&quot;</span>
<span class="token function">curl</span> URL <span class="token parameter variable">-A</span> <span class="token string">&quot;Mozilla/5.0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其他HTTP头部信息也可以使用curl来发送，使用<code>-H</code>&quot;头部信息&quot; 传递多个头部信息，例如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;Host:example.com&quot;</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;accept-language:zh-cn&quot;</span> URL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="curl的带宽控制和下载配额" tabindex="-1"><a class="header-anchor" href="#curl的带宽控制和下载配额"><span><strong>curl的带宽控制和下载配额</strong></span></a></h4><p>使用<code>--limit-rate</code>限制curl的下载速度：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL --limit-rate 50k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令中用k（千字节）和m（兆字节）指定下载速度限制。</p><p>使用<code>--max-filesize</code>指定可下载的最大文件大小：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL --max-filesize bytes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果文件大小超出限制，命令则返回一个非0退出码，如果命令正常则返回0。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> --limit-rate 200k https://example.com
<span class="token comment"># 上面命令将带宽限制在每秒 200K 字节。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="用curl进行认证" tabindex="-1"><a class="header-anchor" href="#用curl进行认证"><span><strong>用curl进行认证</strong></span></a></h4><p>使用curl选项 -u 可以完成HTTP或者FTP的认证，可以指定密码，也可以不指定密码在后续操作中输入密码：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-u</span> user:pwd http://example.com
<span class="token function">curl</span> <span class="token parameter variable">-u</span> user http://example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="只打印响应头部信息" tabindex="-1"><a class="header-anchor" href="#只打印响应头部信息"><span><strong>只打印响应头部信息</strong></span></a></h4><p>通过<code>-I</code>或者<code>-head</code>可以只打印出HTTP头部信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost text<span class="token punctuation">]</span><span class="token comment"># curl -I http://example.com</span>
HTTP/1.1 <span class="token number">200</span> OK
Content-Encoding: <span class="token function">gzip</span>
Accept-Ranges: bytes
Age: <span class="token number">275552</span>
Cache-Control: max-age<span class="token operator">=</span><span class="token number">604800</span>
Content-Type: text/html<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>UTF-8
Date: Mon, <span class="token number">24</span> Apr <span class="token number">2023</span> <span class="token number">14</span>:39:36 GMT
Etag: <span class="token string">&quot;3147526947+gzip&quot;</span>
Expires: Mon, 01 May <span class="token number">2023</span> <span class="token number">14</span>:39:36 GMT
Last-Modified: Thu, <span class="token number">17</span> Oct <span class="token number">2019</span> 07:18:26 GMT
Server: ECS <span class="token punctuation">(</span>sec/96EE<span class="token punctuation">)</span>
X-Cache: HIT
Content-Length: <span class="token number">648</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="get-请求" tabindex="-1"><a class="header-anchor" href="#get-请求"><span><strong>GET 请求</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token string">&quot;http://www.example.com&quot;</span>    <span class="token comment"># 如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地</span>
<span class="token function">curl</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;http://www.example.com&quot;</span> <span class="token comment"># 显示全部信息</span>
<span class="token function">curl</span> <span class="token parameter variable">-l</span> <span class="token string">&quot;http://www.example.com&quot;</span> <span class="token comment"># 显示页面内容</span>
<span class="token function">curl</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;http://www.example.com&quot;</span> <span class="token comment"># 显示get请求全过程解析</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="post-请求" tabindex="-1"><a class="header-anchor" href="#post-请求"><span><strong>POST 请求</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;param1=value1&amp;param2=value2&quot;</span> <span class="token string">&quot;http://www.example.com/login&quot;</span>

$ <span class="token function">curl</span> -d<span class="token string">&#39;login=emma＆password=123&#39;</span> <span class="token parameter variable">-X</span> POST https://example.com/login
<span class="token comment"># 或者</span>
$ <span class="token function">curl</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;login=emma&#39;</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;password=123&#39;</span> <span class="token parameter variable">-X</span> POST  https://example.com/login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>--data-urlencode</code> 参数等同于 <code>-d</code>，发送 <code>POST</code> 请求的数据体，区别在于会自动将发送的数据进行 <code>URL</code> 编码。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> --data-urlencode <span class="token string">&#39;comment=hello world&#39;</span> https://example.com/login
<span class="token comment"># 上面代码中，发送的数据hello world之间有一个空格，需要进行 URL 编码。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="发送本地文件中的文字" tabindex="-1"><a class="header-anchor" href="#发送本地文件中的文字"><span><strong>发送本地文件中的文字</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;@data.txt&#39;</span> https://example.com/upload
<span class="token comment"># 读取data.txt文件的内容，作为数据体向服务器发送。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="json-格式的-post-请求" tabindex="-1"><a class="header-anchor" href="#json-格式的-post-请求"><span><strong>JSON 格式的 POST 请求</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-type: application/json&quot;</span> <span class="token parameter variable">-X</span> POST <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;phone&quot;:&quot;13888888888&quot;,&quot;password&quot;:&quot;test&quot;}&#39;</span> http://example.com/apis/users.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="向服务器发送-cookie" tabindex="-1"><a class="header-anchor" href="#向服务器发送-cookie"><span><strong>向服务器发送 Cookie</strong></span></a></h4><p>使用<code>--cookie &quot;COKKIES&quot;</code>选项来指定cookie，多个cookie使用分号分隔：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> http://example.com <span class="token parameter variable">--cookie</span> <span class="token string">&quot;user=root;pass=123456&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将cookie另存为一个文件，使用<code>--cookie-jar</code>选项：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> URL --cookie-jar cookie_file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>-b</code> 参数用来向服务器发送 Cookie。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">&#39;foo=bar&#39;</span> https://example.com
<span class="token comment"># 上面命令会生成一个标头Cookie: foo=bar，向服务器发送一个名为foo、值为bar的 Cookie。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-b</span> <span class="token string">&#39;foo1=bar&#39;</span> <span class="token parameter variable">-b</span> <span class="token string">&#39;foo2=baz&#39;</span> https://example.com
<span class="token comment"># 上面命令发送两个 Cookie。</span>

\`\`\`shell
<span class="token function">curl</span> <span class="token parameter variable">-b</span> cookies.txt https://www.example.com
<span class="token comment"># 上面命令读取本地文件 cookies.txt，里面是服务器设置的 Cookie（参见-c参数），将其发送到服务器。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="cookie-写入一个文件" tabindex="-1"><a class="header-anchor" href="#cookie-写入一个文件"><span><strong>Cookie 写入一个文件</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-c</span> cookies.txt https://www.example.com
<span class="token comment"># 上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件cookies.txt。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="请求的来源" tabindex="-1"><a class="header-anchor" href="#请求的来源"><span><strong>请求的来源</strong></span></a></h4><p><code>-e</code> 参数用来设置 <code>HTTP</code> 的标头 <code>Referer</code>，表示请求的来源。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;https://example.com?q=example&#39;</span> https://www.example.com
<span class="token comment"># 上面命令将Referer标头设为 https://example.com?q=example。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-H</code> 参数可以通过直接添加标头 <code>Referer</code>，达到同样效果。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Referer: https://example.com?q=example&#39;</span> https://www.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="上传二进制文件" tabindex="-1"><a class="header-anchor" href="#上传二进制文件"><span><strong>上传二进制文件</strong></span></a></h4><p><code>-F</code> 参数用来向服务器上传二进制文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-F</span> <span class="token string">&#39;file=@photo.png&#39;</span> https://example.com/profile
<span class="token comment"># 上面命令会给 HTTP 请求加上标头 Content-Type: multipart/form-data ，然后将文件photo.png作为file字段上传。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-F</code> 参数可以指定 <code>MIME</code> 类型。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-F</span> <span class="token string">&#39;file=@photo.png;type=image/png&#39;</span> https://example.com/profile
<span class="token comment"># 上面命令指定 MIME 类型为image/png，否则 curl 会把 MIME 类型设为 application/octet-stream。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-F</code> 参数也可以指定文件名。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-F</span> <span class="token string">&#39;file=@photo.png;filename=me.png&#39;</span> https://example.com/profile
<span class="token comment"># 上面命令中，原始文件名为photo.png，但是服务器接收到的文件名为me.png。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="设置请求头" tabindex="-1"><a class="header-anchor" href="#设置请求头"><span><strong>设置请求头</strong></span></a></h4><p><code>-H</code> 参数添加 <code>HTTP</code> 请求的标头。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept-Language: en-US&#39;</span> https://example.com
<span class="token comment"># 上面命令添加 HTTP 标头 Accept-Language: en-US。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Accept-Language: en-US&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Secret-Message: xyzzy&#39;</span> https://example.com
<span class="token comment"># 上面命令添加两个 HTTP 标头。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;{&quot;login&quot;: &quot;emma&quot;, &quot;pass&quot;: &quot;123&quot;}&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> https://example.com/login
<span class="token comment"># 上面命令添加 HTTP 请求的标头是 Content-Type: application/json，然后用 -d 参数发送 JSON 数据。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="跳过-ssl-检测" tabindex="-1"><a class="header-anchor" href="#跳过-ssl-检测"><span><strong>跳过 SSL 检测</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-k</span> https://www.example.com
<span class="token comment"># 上面命令不会检查服务器的 SSL 证书是否正确。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="请求跟随服务器的重定向" tabindex="-1"><a class="header-anchor" href="#请求跟随服务器的重定向"><span><strong>请求跟随服务器的重定向</strong></span></a></h4><p><code>-L</code> 参数会让 <code>HTTP</code> 请求跟随服务器的重定向。<code>curl</code> 默认不跟随重定向。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;tweet=hi&#39;</span> https://api.example.com/tweet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>值得注意的是，这种重定向方式不适用于在返回的 HTML 中的重定向，比如这种是不被 curl 识别的重定向(这部分内容由 <code>curl -v -L &lt;url&gt;</code> 生成)</p><div class="language-curl line-numbers-mode" data-ext="curl" data-title="curl"><pre class="language-curl"><code>* Connected to example.com (*.*.*.*) port 80 (#0)
&gt; GET / HTTP/1.1
&gt; Host: example.com
&gt; User-Agent: curl/8.0.1
&gt; Accept: */*
&gt;
&lt; HTTP/1.1 200 OK
....
&lt; Content-Type: text/html
&lt;
&lt;html&gt;
&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.example.com/&quot;&gt;
&lt;/html&gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="调试参数" tabindex="-1"><a class="header-anchor" href="#调试参数"><span><strong>调试参数</strong></span></a></h4><p><code>-v</code> 参数输出通信的整个过程，用于调试。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-v</span> https://www.example.com
<span class="token comment"># --trace参数也可以用于调试，还会输出原始的二进制数据。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">--trace</span> - https://www.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="获取本机外网-ip" tabindex="-1"><a class="header-anchor" href="#获取本机外网-ip"><span><strong>获取本机外网 IP</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> ipecho.net/plain
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用-curl-测试网站加载速度" tabindex="-1"><a class="header-anchor" href="#使用-curl-测试网站加载速度"><span><strong>使用 curl 测试网站加载速度</strong></span></a></h4><p>命令有一个鲜为人知的选项，<code>-w</code>，该选项在请求结束之后打印本次请求的统计数据到标准输出。</p><p>首先，我们定义控制打印行为的格式化字符串。新建文本文件 <code>fmt.txt</code>，并填入下面的内容：</p><div class="language-ruby line-numbers-mode" data-ext="rb" data-title="rb"><pre class="language-ruby"><code>\\n
Response <span class="token builtin">Time</span> <span class="token keyword">for</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">%{url_effective}</span></span>\\n\\n
<span class="token constant">DNS</span> Lookup <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_namelookup}</span></span>s\\n
Redirection <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_redirect}</span></span>s\\n
Connection <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_connect}</span></span>s\\n
App Connection <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_appconnect}</span></span>s\\n
Pre<span class="token operator">-</span>transfer <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_pretransfer}</span></span>s\\n
Start<span class="token operator">-</span>transfer <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t<span class="token string-literal"><span class="token string">%{time_starttransfer}</span></span>s\\n\\n
Total <span class="token builtin">Time</span><span class="token operator">:</span>\\t\\t\\t<span class="token string-literal"><span class="token string">%{time_total}</span></span>s\\n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>curl 提供了很多置换变量，可以在格式化字符串中通过 <code>%{var}</code> 的形式使用。完整的变量列表可以在 <code>curl</code> 的 <code>manpage</code> 中查看。简单介绍一下我们使用的这几个变量：</p><ul><li><code>url_effective</code>: 执行完地址重定向之后的最终 URL；</li><li><code>time_namelookup</code>: 从请求开始至完成名称解析所花的时间，单位为秒，下同；</li><li><code>time_redirect</code>: 执行所有重定向所花的时间；</li><li><code>time_connect</code>: 从请求开始至建立 TCP 连接所花的时间；</li><li><code>time_appconnect</code>: 从请求开始至完成 SSL/SSH 握手所花的时间；</li><li><code>time_pretransfer</code>: 从请求开始至服务器准备传送文件所花的时间，包含了传送协商时间；</li><li><code>time_starttransfer</code>: 从请求开始至服务器准备传送第一个字节所花的时间；</li><li><code>time_total</code>: 完整耗时。</li></ul><p>然后执行请求，通过 @filename 指定保存了格式化字符串的文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-w</span> @fmt.txt <span class="token parameter variable">-o</span> /dev/null http://www.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出：</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code>Response Time <span class="token keyword">for</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token comment">//www.google.co.jp/?gfe_rd=cr&amp;dcr=0&amp;ei=cjIaWpTkHeiQ8QfnxYzoBA</span>

DNS Lookup Time<span class="token operator">:</span>        <span class="token number">0.000038</span>s
Redirection Time<span class="token operator">:</span>       <span class="token number">0.207271</span>s
Connection Time<span class="token operator">:</span>        <span class="token number">0.000039</span>s
App Connection Time<span class="token operator">:</span>    <span class="token number">0.000039</span>s
Pre<span class="token operator">-</span>transfer Time<span class="token operator">:</span>      <span class="token number">0.000067</span>s
Start<span class="token operator">-</span>transfer Time<span class="token operator">:</span>    <span class="token number">0.260115</span>s

Total Time<span class="token operator">:</span>             <span class="token number">0.467691</span>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="要求返回是压缩的状态" tabindex="-1"><a class="header-anchor" href="#要求返回是压缩的状态"><span><strong>要求返回是压缩的状态</strong></span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">--compressed</span> -o- <span class="token parameter variable">-L</span> https://yarnpkg.com/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
<span class="token number">100</span>    <span class="token number">54</span>  <span class="token number">100</span>    <span class="token number">54</span>    <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">42</span>      <span class="token number">0</span>  <span class="token number">0</span>:00:01  <span class="token number">0</span>:00:01 --:--:--    <span class="token number">42</span>
<span class="token number">100</span>  <span class="token number">2341</span>  <span class="token number">100</span>  <span class="token number">2341</span>    <span class="token number">0</span>     <span class="token number">0</span>   <span class="token number">1202</span>      <span class="token number">0</span>  <span class="token number">0</span>:00:01  <span class="token number">0</span>:00:01 --:--:--  <span class="token number">9289</span>
Installing Yarn<span class="token operator">!</span>
<span class="token operator">&gt;</span> Downloading tarball<span class="token punctuation">..</span>.

<span class="token punctuation">[</span><span class="token number">1</span>/2<span class="token punctuation">]</span>: https://yarnpkg.com/latest.tar.gz --<span class="token operator">&gt;</span> /var/folders/j7/3xly5sk567s65ny5dnr__3b80000gn/T/yarn.tar.gz.XXXXXXXXXX.9hJsBsrA
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
<span class="token number">100</span>    <span class="token number">57</span>  <span class="token number">100</span>    <span class="token number">57</span>    <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">72</span>      <span class="token number">0</span> --:--:-- --:--:-- --:--:--    <span class="token number">72</span>
<span class="token number">100</span>    <span class="token number">93</span>  <span class="token number">100</span>    <span class="token number">93</span>    <span class="token number">0</span>     <span class="token number">0</span>     <span class="token number">63</span>      <span class="token number">0</span>  <span class="token number">0</span>:00:01  <span class="token number">0</span>:00:01 --:--:--    <span class="token number">63</span>
<span class="token number">100</span>   <span class="token number">643</span>  <span class="token number">100</span>   <span class="token number">643</span>    <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">248</span>      <span class="token number">0</span>  <span class="token number">0</span>:00:02  <span class="token number">0</span>:00:02 --:--:--   <span class="token number">707</span>
<span class="token number">100</span> 1215k  <span class="token number">100</span> 1215k    <span class="token number">0</span>     <span class="token number">0</span>   153k      <span class="token number">0</span>  <span class="token number">0</span>:00:07  <span class="token number">0</span>:00:07 --:--:--  305k

<span class="token punctuation">[</span><span class="token number">2</span>/2<span class="token punctuation">]</span>: https://yarnpkg.com/latest.tar.gz.asc --<span class="token operator">&gt;</span> /var/folders/j7/3xly5sk567s65ny5dnr__3b80000gn/T/yarn.tar.gz.XXXXXXXXXX.9hJsBsrA.asc
<span class="token number">100</span>    <span class="token number">61</span>  <span class="token number">100</span>    <span class="token number">61</span>    <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">356</span>      <span class="token number">0</span> --:--:-- --:--:-- --:--:--   <span class="token number">356</span>
<span class="token number">100</span>    <span class="token number">97</span>  <span class="token number">100</span>    <span class="token number">97</span>    <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">325</span>      <span class="token number">0</span> --:--:-- --:--:-- --:--:--   <span class="token number">325</span>
<span class="token number">100</span>   <span class="token number">647</span>  <span class="token number">100</span>   <span class="token number">647</span>    <span class="token number">0</span>     <span class="token number">0</span>   <span class="token number">1283</span>      <span class="token number">0</span> --:--:-- --:--:-- --:--:--  <span class="token number">1283</span>
<span class="token number">100</span>   <span class="token number">832</span>  <span class="token number">100</span>   <span class="token number">832</span>    <span class="token number">0</span>     <span class="token number">0</span>   <span class="token number">1107</span>      <span class="token number">0</span> --:--:-- --:--:-- --:--:--  812k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,110),p=[t];function i(c,r){return s(),n("div",null,p)}const m=a(l,[["render",i],["__file","curl.html.vue"]]),u=JSON.parse('{"path":"/command/linux/curl.html","title":"curl","lang":"zh-CN","frontmatter":{"description":"curl 利用URL规则在命令行下工作的文件传输工具 补充说明 curl命令 是一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称curl为下载工具。作为一款强力工具，curl支持包括HTTP、HTTPS、ftp等众多协议，还支持POST、cookies、认证、从指定偏移处下载部分文件、用户代理...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/curl.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"curl"}],["meta",{"property":"og:description","content":"curl 利用URL规则在命令行下工作的文件传输工具 补充说明 curl命令 是一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称curl为下载工具。作为一款强力工具，curl支持包括HTTP、HTTPS、ftp等众多协议，还支持POST、cookies、认证、从指定偏移处下载部分文件、用户代理..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"curl\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":12.61,"words":3782},"filePathRelative":"command/linux/curl.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
