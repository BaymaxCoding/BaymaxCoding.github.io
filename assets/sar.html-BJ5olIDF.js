import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as e,b as n}from"./app-CHACLx4z.js";const i={},l=n(`<h1 id="sar" tabindex="-1"><a class="header-anchor" href="#sar"><span>sar</span></a></h1><p>系统运行状态统计工具</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>sar命令</strong> 是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-A: 显示所有的报告信息；
-b: 显示I/O速率；
-B: 显示换页状态；
-c: 显示进程创建活动；
-d: 显示每个块设备的状态；
-e: 设置显示报告的结束时间；
-f: 从指定文件提取报告；
-i: 设状态信息刷新的间隔时间；
-n: 报告网络统计信息。
-P: 报告每个CPU的状态；
-R: 显示内存状态；
-u: 显示CPU利用率；
-v: 显示索引节点，文件和其他内核表的状态；
-w: 显示交换分区状态；
-x: 显示给定进程的状态。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-r: 以分页方式显示输出，每页最多显示 <span class="token number">100</span> 行。  
-o: 输出选项，指定要显示的列。例如，<span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">-o</span> mrk,prt,cvg<span class="token variable">\`</span></span> 将显示 CPU 使用率、进程标识符、磁盘使用率 和 网络流量。  
-t: 时间戳选项，指定要在输出中添加时间戳。  
-s: 统计选项，指定要显示的统计数据的类型。例如，<span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">-s</span> us,ms<span class="token variable">\`</span></span> 将显示 CPU 使用率的 us 和 ms 时间段的平均值。  
-c: 选项用于指定要发送的命令。例如，<span class="token variable"><span class="token variable">\`</span><span class="token parameter variable">-c</span> <span class="token function">ls</span><span class="token variable">\`</span></span> 将显示当前目录中的文件和子目录列表。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>间隔时间：每次报告的间隔时间（秒）；</li><li>次数：显示报告的次数。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p><strong>察看内存和交换空间的使用率：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-r</span>
Linux <span class="token number">2.4</span>.20-8 <span class="token punctuation">(</span>www.jsdig.com<span class="token punctuation">)</span>    <span class="token number">20130503</span>  
<span class="token number">12</span>:00:01 AM kbmemfree kbmemused  %memused 
kbmemshrd kbbuffers  kbcached  
<span class="token number">12</span>:10:00 AM    <span class="token number">240468</span>   <span class="token number">1048252</span>     <span class="token number">81.34</span>    
<span class="token number">0</span>    <span class="token number">133724</span>    <span class="token number">485772</span>  
<span class="token number">12</span>:20:00 AM    <span class="token number">240508</span>   <span class="token number">1048212</span>     <span class="token number">81.34</span>   
<span class="token number">0</span>    <span class="token number">134172</span>    <span class="token number">485600</span>  
…  
08:40:00 PM    <span class="token number">934132</span>    <span class="token number">354588</span>     <span class="token number">27.51</span>    
<span class="token number">0</span>     <span class="token number">26080</span>    <span class="token number">185364</span>  
Average:       <span class="token number">324346</span>    <span class="token number">964374</span>     <span class="token number">74.83</span>  
<span class="token number">0</span>     <span class="token number">96072</span>    <span class="token number">467559</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>kbmemfree与kbmemused字段分别显示内存的未使用与已使用空间，后面跟着的是已使用空间的百分比（%memused字段）。kbbuffers与kbcached字段分别显示缓冲区与系统全域的数据存取量，单位为KB。</p><p><strong>观察系统部件10分钟，并对数据进行排序：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-o</span> temp <span class="token number">60</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>显示保存在每日数据文件“sa16”中的内存和网络统计信息。</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-r</span> <span class="token parameter variable">-n</span> DEV <span class="token parameter variable">-f</span> /var/log/sa/sa16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查看 CPU 使用率：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-t</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查看磁盘使用率：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-s</span> disk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>查看网络流量：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-s</span> nic
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>发送命令到系统服务：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-c</span> <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>显示系统当前时间戳：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>sar <span class="token parameter variable">-t</span> +%s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这些只是 <code>sar</code> 命令的一些示例，您可以根据具体需求选择不同的选项和参数。</p><p>注意: <code>sar</code> 命令的输出结果可能会因为系统性能的不同而有所不同。如果要获得更准确的结果，请考虑在系统性能最佳的时候进行监控。</p>`,31),r=[l];function t(d,c){return s(),e("div",null,r)}const m=a(i,[["render",t],["__file","sar.html.vue"]]),u=JSON.parse('{"path":"/command/linux/sar.html","title":"sar","lang":"zh-CN","frontmatter":{"description":"sar 系统运行状态统计工具 补充说明 sar命令 是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。 语法 选项 参数...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/sar.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"sar"}],["meta",{"property":"og:description","content":"sar 系统运行状态统计工具 补充说明 sar命令 是Linux下系统运行状态统计工具，它将指定的操作系统状态计数器显示到标准输出设备。sar工具将对系统当前的状态进行取样，然后通过计算数据和比例来表达系统的当前运行状态。它的特点是可以连续对系统取样，获得大量的取样数据。取样数据和分析的结果都可以存入文件，使用它时消耗的系统资源很小。 语法 选项 参数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"sar\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.71,"words":812},"filePathRelative":"command/linux/sar.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
