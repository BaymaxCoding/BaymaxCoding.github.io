import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e}from"./app-D_HUMAmc.js";const t={},i=e(`<h1 id="tr" tabindex="-1"><a class="header-anchor" href="#tr"><span>tr</span></a></h1><p>将字符进行替换压缩和删除</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>tr命令</strong> 可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>tr<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-c或——complerment：取代所有不属于第一字符集的字符；
-d或——delete：删除所有属于第一字符集的字符；
-s或--squeeze-repeats：把连续重复的字符以单独一个字符表示；
-t或--truncate-set1：先删除第一字符集较第二字符集多出的字符。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”；</li><li>字符集2：指定要转换成的目标字符集。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>将输入字符由大写转换为小写：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;HELLO WORLD&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;A-Z&#39;</span> <span class="token string">&#39;a-z&#39;</span>
hello world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>&#39;A-Z&#39; 和 &#39;a-z&#39;都是集合，集合是可以自己制定的，例如：&#39;ABD-}&#39;、&#39;bB.,&#39;、&#39;a-de-h&#39;、&#39;a-c0-9&#39;都属于集合，集合里可以使用&#39;\\n&#39;、&#39;\\t&#39;，可以可以使用其他ASCII字符。</p><p>使用tr删除字符：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello 123 world 456&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;0-9&#39;</span>
hello  world 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>将制表符转换为空格：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> text <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&#39;\\t&#39;</span> <span class="token string">&#39; &#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>字符集补集，从输入文本中将不在补集中的所有字符删除：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> aa.,a <span class="token number">1</span> b<span class="token comment">#$bb 2 c*/cc 3 ddd 4 | tr -d -c &#39;0-9 \\n&#39;</span>
 <span class="token number">1</span>  <span class="token number">2</span>  <span class="token number">3</span>  <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>此例中，补集中包含了数字0~9、空格和换行符\\n，所以没有被删除，其他字符全部被删除了。</p><p>用tr压缩字符，可以压缩输入中重复的字符：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;thissss is      a text linnnnnnne.&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&#39; sn&#39;</span>
this is a text line.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>巧妙使用tr做数字相加操作：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n1</span> <span class="token operator">|</span> <span class="token builtin class-name">echo</span> $<span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">tr</span> <span class="token string">&#39;\\n&#39;</span> <span class="token string">&#39;+&#39;</span><span class="token variable">)</span></span> <span class="token number">0</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除Windows文件“造成”的&#39;^M&#39;字符：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token function">file</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>&quot;</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>&quot;</span> <span class="token operator">&gt;</span> new_file
或
<span class="token function">cat</span> <span class="token function">file</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token entity" title="\\r">\\r</span>&quot;</span> <span class="token operator">&gt;</span> new_file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>tr可以使用的字符类：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>:alnum:<span class="token punctuation">]</span>：字母和数字
<span class="token punctuation">[</span>:alpha:<span class="token punctuation">]</span>：字母
<span class="token punctuation">[</span>:cntrl:<span class="token punctuation">]</span>：控制（非打印）字符
<span class="token punctuation">[</span>:digit:<span class="token punctuation">]</span>：数字
<span class="token punctuation">[</span>:graph:<span class="token punctuation">]</span>：图形字符
<span class="token punctuation">[</span>:lower:<span class="token punctuation">]</span>：小写字母
<span class="token punctuation">[</span>:print:<span class="token punctuation">]</span>：可打印字符
<span class="token punctuation">[</span>:punct:<span class="token punctuation">]</span>：标点符号
<span class="token punctuation">[</span>:space:<span class="token punctuation">]</span>：空白字符
<span class="token punctuation">[</span>:upper:<span class="token punctuation">]</span>：大写字母
<span class="token punctuation">[</span>:xdigit:<span class="token punctuation">]</span>：十六进制字符  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tr</span> <span class="token string">&#39;[:lower:]&#39;</span> <span class="token string">&#39;[:upper:]&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,31),l=[i];function p(c,o){return a(),s("div",null,l)}const u=n(t,[["render",p],["__file","tr.html.vue"]]),m=JSON.parse('{"path":"/command/linux/tr.html","title":"tr","lang":"zh-CN","frontmatter":{"description":"tr 将字符进行替换压缩和删除 补充说明 tr命令 可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大。 语法 选项 参数 字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”； 字符集2：指定要转...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/tr.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"tr"}],["meta",{"property":"og:description","content":"tr 将字符进行替换压缩和删除 补充说明 tr命令 可以对来自标准输入的字符进行替换、压缩和删除。它可以将一组字符变成另一组字符，经常用来编写优美的单行命令，作用很强大。 语法 选项 参数 字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”； 字符集2：指定要转..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tr\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.02,"words":605},"filePathRelative":"command/linux/tr.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
