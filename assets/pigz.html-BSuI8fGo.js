import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as i,a,d as e,e as o,b as r}from"./app-CHACLx4z.js";const l={},c=a("h1",{id:"pigz",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#pigz"},[a("span",null,"pigz")])],-1),m=a("p",null,"可以用来解压缩文件，gzip的并行实现升级版",-1),d=a("h2",{id:"补充说明",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#补充说明"},[a("span",null,"补充说明")])],-1),u=a("strong",null,"pigz命令",-1),v={href:"http://zlib.net/pigz/",target:"_blank",rel:"noopener noreferrer"},b=r(`<h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pigz <span class="token punctuation">[</span> -cdfhikKlLmMnNqrRtz0<span class="token punctuation">..</span><span class="token number">9,11</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-b</span> blocksize <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-p</span> threads <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-S</span> suffix <span class="token punctuation">]</span> <span class="token punctuation">[</span> name <span class="token punctuation">..</span>.  <span class="token punctuation">]</span>
unpigz <span class="token punctuation">[</span> <span class="token parameter variable">-cfhikKlLmMnNqrRtz</span> <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-b</span> blocksize <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-p</span> threads <span class="token punctuation">]</span> <span class="token punctuation">[</span> <span class="token parameter variable">-S</span> suffix <span class="token punctuation">]</span> <span class="token punctuation">[</span> name <span class="token punctuation">..</span>.  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-0</span> to -9, <span class="token parameter variable">-11</span>       <span class="token comment"># Compression level (level 11, zopfli, is much slower)</span>
--fast, <span class="token parameter variable">--best</span>      <span class="token comment"># Compression levels 1 and 9 respectively</span>
-b, <span class="token parameter variable">--blocksize</span> mmm <span class="token comment"># Set compression block size to mmmK (default 128K)</span>
-c, <span class="token parameter variable">--stdout</span>        <span class="token comment"># Write all processed output to stdout (won&#39;t delete)</span>
-d, <span class="token parameter variable">--decompress</span>    <span class="token comment"># Decompress the compressed input</span>
-f, <span class="token parameter variable">--force</span>         <span class="token comment"># Force overwrite, compress .gz, links, and to terminal</span>
<span class="token parameter variable">-F</span>  <span class="token parameter variable">--first</span>         <span class="token comment"># Do iterations first, before block split for -11</span>
-h, <span class="token parameter variable">--help</span>          <span class="token comment"># Display a help screen and quit</span>
-i, <span class="token parameter variable">--independent</span>   <span class="token comment"># Compress blocks independently for damage recovery</span>
-I, <span class="token parameter variable">--iterations</span> n  <span class="token comment"># Number of iterations for -11 optimization</span>
-J, <span class="token parameter variable">--maxsplits</span> n   <span class="token comment"># Maximum number of split blocks for -11</span>
-k, <span class="token parameter variable">--keep</span>          <span class="token comment"># Do not delete original file after processing</span>
-K, <span class="token parameter variable">--zip</span>           <span class="token comment"># Compress to PKWare zip (.zip) single entry format</span>
-l, <span class="token parameter variable">--list</span>          <span class="token comment"># List the contents of the compressed input</span>
-L, <span class="token parameter variable">--license</span>       <span class="token comment"># Display the pigz license and quit</span>
-m, --no-time       <span class="token comment"># Do not store or restore mod time</span>
-M, <span class="token parameter variable">--time</span>          <span class="token comment"># Store or restore mod time</span>
-n, --no-name       <span class="token comment"># Do not store or restore file name or mod time</span>
-N, <span class="token parameter variable">--name</span>          <span class="token comment"># Store or restore file name and mod time</span>
<span class="token parameter variable">-O</span>  <span class="token parameter variable">--oneblock</span>      <span class="token comment"># Do not split into smaller blocks for -11</span>
-p, <span class="token parameter variable">--processes</span> n   <span class="token comment"># Allow up to n compression threads (default is the number of online processors, or 8 if unknown)</span>
-q, <span class="token parameter variable">--quiet</span>         <span class="token comment"># Print no messages, even on error</span>
-r, <span class="token parameter variable">--recursive</span>     <span class="token comment"># Process the contents of all subdirectories</span>
-R, <span class="token parameter variable">--rsyncable</span>     <span class="token comment"># Input-determined block locations for rsync</span>
-S, <span class="token parameter variable">--suffix</span> .sss   <span class="token comment"># Use suffix .sss instead of .gz (for compression)</span>
-t, <span class="token parameter variable">--test</span>          <span class="token comment"># Test the integrity of the compressed input</span>
-v, <span class="token parameter variable">--verbose</span>       <span class="token comment"># Provide more verbose output</span>
<span class="token parameter variable">-V</span>  <span class="token parameter variable">--version</span>       <span class="token comment"># Show the version of pigz</span>
<span class="token parameter variable">-Y</span>  <span class="token parameter variable">--synchronous</span>   <span class="token comment"># Force output file write to permanent storage</span>
-z, <span class="token parameter variable">--zlib</span>          <span class="token comment"># Compress to zlib (.zz) instead of gzip format</span>
--                  <span class="token comment"># All arguments after &quot;--&quot; are treated as files</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>可以结合<code>tar</code>使用, 压缩命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-cvf</span> - dir1 dir2 dir3 <span class="token operator">|</span> pigz <span class="token parameter variable">-p</span> <span class="token number">8</span> <span class="token operator">&gt;</span> output.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pigz <span class="token parameter variable">-p</span> <span class="token number">8</span> <span class="token parameter variable">-d</span> output.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果是gzip格式，也支持用tar解压</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> output.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11);function k(h,g){const s=t("ExternalLinkIcon");return p(),i("div",null,[c,m,d,a("p",null,[u,e("可以用来解压缩文件，最重要的是支持多线程并行处理，解压缩比gzip快。主页: "),a("a",v,[e("http://zlib.net/pigz/"),o(s)])]),b])}const x=n(l,[["render",k],["__file","pigz.html.vue"]]),_=JSON.parse('{"path":"/command/linux/pigz.html","title":"pigz","lang":"zh-CN","frontmatter":{"description":"pigz 可以用来解压缩文件，gzip的并行实现升级版 补充说明 pigz命令可以用来解压缩文件，最重要的是支持多线程并行处理，解压缩比gzip快。主页: http://zlib.net/pigz/ 语法 参数 实例 可以结合tar使用, 压缩命令 解压命令 如果是gzip格式，也支持用tar解压","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/pigz.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"pigz"}],["meta",{"property":"og:description","content":"pigz 可以用来解压缩文件，gzip的并行实现升级版 补充说明 pigz命令可以用来解压缩文件，最重要的是支持多线程并行处理，解压缩比gzip快。主页: http://zlib.net/pigz/ 语法 参数 实例 可以结合tar使用, 压缩命令 解压命令 如果是gzip格式，也支持用tar解压"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pigz\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.43,"words":430},"filePathRelative":"command/linux/pigz.md","localizedDate":"2024年4月12日","autoDesc":true}');export{x as comp,_ as data};
