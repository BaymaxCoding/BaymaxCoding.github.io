import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,b as a}from"./app-DOGW-9XX.js";const t={},i=a(`<h1 id="newusers" tabindex="-1"><a class="header-anchor" href="#newusers"><span>newusers</span></a></h1><p>用于批处理的方式一次创建多个命令</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>newusers命令</strong> 用于批处理的方式一次创建多个命令。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>newusers<span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>用户文件：指定包含用户信息的文本文件，文件的格式要与<code>/etc/passwd</code>相同。</p><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>实用newusers命令批量添加用户：</p><p>用法很简单，newusers后面直接跟一个文件，文件格式和<code>/etc/passwd</code>的格式相同。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>用户名1:x:<span class="token environment constant">UID</span>:GID:用户说明:用户的家目录:所用<span class="token environment constant">SHELL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>jingang0:x:520:520::/home/jingang0:/sbin/nologin
jingang1:x:521:521::/home/jingang1:/sbin/nologin
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得一提的是关于SHELL类型，查看主机上所有SHELL，可以通过chsh来查看：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost beinan<span class="token punctuation">]</span><span class="token comment"># chsh --list</span>
/bin/sh
/bin/bash
/sbin/nologin
/bin/ksh
/bin/tcsh
/bin/csh
/bin/zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中除了<code>/sbin/nologin</code>，其它类型的SHELL都能登录系统，nologin大多是虚拟用户用的SHELL，也就是说虽然他是系统用户，但他并无登录系统的权限；如果您想添加这类用户，就把他的SHELL设置成<code>/sbin/nologin</code>，比如上面的例子。</p><p>关于用户名、UID、GID及用户的家目录是怎么回事，您可以读相应的参考文档。</p>`,18),o=[i];function d(l,r){return n(),s("div",null,o)}const u=e(t,[["render",d],["__file","newusers.html.vue"]]),h=JSON.parse('{"path":"/command/linux/newusers.html","title":"newusers","lang":"zh-CN","frontmatter":{"description":"newusers 用于批处理的方式一次创建多个命令 补充说明 newusers命令 用于批处理的方式一次创建多个命令。 语法 参数 用户文件：指定包含用户信息的文本文件，文件的格式要与/etc/passwd相同。 实例 实用newusers命令批量添加用户： 用法很简单，newusers后面直接跟一个文件，文件格式和/etc/passwd的格式相同。 ...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/newusers.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"newusers"}],["meta",{"property":"og:description","content":"newusers 用于批处理的方式一次创建多个命令 补充说明 newusers命令 用于批处理的方式一次创建多个命令。 语法 参数 用户文件：指定包含用户信息的文本文件，文件的格式要与/etc/passwd相同。 实例 实用newusers命令批量添加用户： 用法很简单，newusers后面直接跟一个文件，文件格式和/etc/passwd的格式相同。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"newusers\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":0.99,"words":297},"filePathRelative":"command/linux/newusers.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,h as data};
