import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,e}from"./app-D_HUMAmc.js";const i={},l=e(`<h1 id="cd" tabindex="-1"><a class="header-anchor" href="#cd"><span>cd</span></a></h1><p>切换用户当前工作目录。</p><h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要"><span>概要</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> <span class="token punctuation">[</span>-L<span class="token operator">|</span><span class="token punctuation">[</span>-P <span class="token punctuation">[</span>-e<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>dir<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="主要用途" tabindex="-1"><a class="header-anchor" href="#主要用途"><span>主要用途</span></a></h2><ul><li>切换工作目录至<code>dir</code>。其中<code>dir</code>的表示法可以是绝对路径或相对路径。</li><li>若参数<code>dir</code>省略，则默认为使用者的shell变量<code>HOME</code>。</li><li>如果<code>dir</code>指定为<code>~</code>时表示为使用者的shell变量<code>HOME</code>，<code>.</code>表示当前目录，<code>..</code>表示当前目录的上一级目录。</li><li>环境变量<code>CDPATH</code>是由冒号分割的一到多个目录，你可以将常去的目录的上一级加入到<code>CDPATH</code>以便方便访问它们；如果<code>dir</code>以<code>/</code>开头那么<code>CDPATH</code>不会被使用。</li><li>当<code>shopt</code>选项<code>cdable_vars</code>打开时，如果<code>dir</code>在<code>CDPATH</code>及当前目录下均不存在，那么会把它当作变量，读取它的值作为要进入的目录。</li></ul><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><p>dir（可选）：指定要切换到的目录。</p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-L</span> （默认值）如果要切换到的目标目录是一个符号连接，那么切换到符号连接的目录。
<span class="token parameter variable">-P</span> 如果要切换到的目标目录是一个符号连接，那么切换到它指向的物理位置目录。
-  当前工作目录将被切换到环境变量<span class="token environment constant">OLDPWD</span>所表示的目录，也就是前一个工作目录。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值</span></a></h2><p>返回状态为成功除非无法进入指定的目录。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span>    <span class="token comment"># 进入用户主目录；</span>
<span class="token builtin class-name">cd</span> /  <span class="token comment"># 进入根目录</span>
<span class="token builtin class-name">cd</span> ~  <span class="token comment"># 进入用户主目录；</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>  <span class="token comment"># 返回上级目录（若当前目录为“/“，则执行完后还在“/&quot;；&quot;..&quot;为上级目录的意思）；</span>
<span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token comment"># 返回上两级目录；</span>
<span class="token builtin class-name">cd</span> <span class="token operator">!</span>$  <span class="token comment"># 把上个命令的参数作为cd参数使用。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于切换到上一个工作目录的说明</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> -
<span class="token comment"># 命令会首先显示要切换到的目标目录，然后再进入。</span>
<span class="token builtin class-name">cd</span> <span class="token variable">\${<span class="token environment constant">OLDPWD</span>}</span>
<span class="token comment"># 命令会直接切换到上一个工作目录。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于<code>CDPATH</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 设置桌面文件夹作为CDPATH的值。</span>
<span class="token assign-left variable">CDPATH</span><span class="token operator">=</span><span class="token string">&#39;~/Desktop&#39;</span>
<span class="token comment"># 假设我们接下来要演示涉及到的路径~和~/Desktop下没有test3文件夹，现在新建它们。</span>
<span class="token function">mkdir</span> ~/test3
<span class="token function">mkdir</span> ~/Desktop/test3
<span class="token comment"># 进入~目录。</span>
<span class="token builtin class-name">cd</span> ~
<span class="token comment"># 进入test3目录。</span>
<span class="token builtin class-name">cd</span> test3
<span class="token comment"># 执行后显示~/Desktop/test3并进入该目录，而不是~目录的test3目录。</span>
<span class="token comment"># 如果CDPATH存在值，那么优先在CDPATH中查找并进入第一个匹配成功的，如果全部失败那么最后尝试当前目录。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于<code>cdable_vars</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 打开选项。</span>
<span class="token builtin class-name">shopt</span> <span class="token parameter variable">-s</span> cdable_vars
<span class="token comment"># 假设当前路径以及CDPATH没有名为new_var的目录。</span>
<span class="token assign-left variable">new_var</span><span class="token operator">=</span><span class="token string">&#39;~/Desktop&#39;</span>
<span class="token comment"># 尝试进入。</span>
<span class="token builtin class-name">cd</span> new_var
<span class="token comment"># 关闭选项。</span>
<span class="token builtin class-name">shopt</span> <span class="token parameter variable">-u</span> cdable_vars
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ol><li><p>该命令是bash内建命令，相关的帮助信息请查看<code>help</code>命令。</p></li><li><p>建议您在编写脚本的过程中如有必要使用<code>cd</code>命令时，请增加必要的注释以用于提醒阅读者当前工作目录，以免出现诸如<code>找不到文件</code>这类问题的发生。</p></li></ol>`,22),t=[l];function c(d,o){return n(),s("div",null,t)}const m=a(i,[["render",c],["__file","cd.html.vue"]]),u=JSON.parse('{"path":"/command/linux/cd.html","title":"cd","lang":"zh-CN","frontmatter":{"description":"cd 切换用户当前工作目录。 概要 主要用途 切换工作目录至dir。其中dir的表示法可以是绝对路径或相对路径。 若参数dir省略，则默认为使用者的shell变量HOME。 如果dir指定为~时表示为使用者的shell变量HOME，.表示当前目录，..表示当前目录的上一级目录。 环境变量CDPATH是由冒号分割的一到多个目录，你可以将常去的目录的上一级...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/cd.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"cd"}],["meta",{"property":"og:description","content":"cd 切换用户当前工作目录。 概要 主要用途 切换工作目录至dir。其中dir的表示法可以是绝对路径或相对路径。 若参数dir省略，则默认为使用者的shell变量HOME。 如果dir指定为~时表示为使用者的shell变量HOME，.表示当前目录，..表示当前目录的上一级目录。 环境变量CDPATH是由冒号分割的一到多个目录，你可以将常去的目录的上一级..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cd\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"主要用途","slug":"主要用途","link":"#主要用途","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.48,"words":744},"filePathRelative":"command/linux/cd.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
