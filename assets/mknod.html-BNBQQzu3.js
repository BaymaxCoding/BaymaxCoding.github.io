import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as a,b as t}from"./app-DOGW-9XX.js";const s={},i=t(`<h1 id="mknod" tabindex="-1"><a class="header-anchor" href="#mknod"><span>mknod</span></a></h1><p>创建字符设备文件和块设备文件</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>mknod命令</strong> 用于创建Linux中的字符设备文件和块设备文件。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mknod<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-Z：设置安全的上下文；
-m：设置权限模式；
-help：显示帮助信息；
--version：显示版本信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>文件名：要创建的设备文件名；</li><li>类型：指定要创建的设备文件的类型；</li><li>主设备号：指定设备文件的主设备号；</li><li>次设备号：指定设备文件的次设备号。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-la</span> /dev/ttyUSB*
crw-rw—- <span class="token number">1</span> root dialout <span class="token number">188</span>, <span class="token number">0</span> <span class="token number">2008</span>-02-13 <span class="token number">18</span>:32 /dev/ttyUSB0
<span class="token function">mknod</span> /dev/ttyUSB32 c <span class="token number">188</span> <span class="token number">32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩展知识" tabindex="-1"><a class="header-anchor" href="#扩展知识"><span>扩展知识</span></a></h3><p>Linux的设备管理是和文件系统紧密结合的，各种设备都以文件的形式存放在/dev目录 下，称为设备文件。应用程序可以打开、关闭和读写这些设备文件，完成对设备的操作，就像操作普通的数据文件一样。</p><p>为了管理这些设备，系统为设备编了号，每 个设备号又分为主设备号和次设备号。主设备号用来区分不同种类的设备，而次设备号用来区分同一类型的多个设备。对于常用设备，Linux有约定俗成的编 号，如硬盘的主设备号是3。</p><p>Linux为所有的设备文件都提供了统一的操作函数接口，方法是使用数据结构struct file_operations。这个数据结构中包括许多操作函数的指针，如open()、close()、read()和write()等，但由于外设 的种类较多，操作方式各不相同。Struct file_operations结构体中的成员为一系列的接口函数，如用于读/写的read/write函数和用于控制的ioctl等。</p><p>打开一个文件就是调用这个文件file_operations中的open操作。不同类型的文件有不同的file_operations成员函数，如普通的磁盘数据文件， 接口函数完成磁盘数据块读写操作；而对于各种设备文件，则最终调用各自驱动程序中的I/O函数进行具体设备的操作。这样，应用程序根本不必考虑操作的是设 备还是普通文件，可一律当作文件处理，具有非常清晰统一的I/O接口。所以file_operations是文件层次的I/O接口。</p>`,17),l=[i];function o(d,r){return n(),a("div",null,l)}const m=e(s,[["render",o],["__file","mknod.html.vue"]]),h=JSON.parse('{"path":"/command/linux/mknod.html","title":"mknod","lang":"zh-CN","frontmatter":{"description":"mknod 创建字符设备文件和块设备文件 补充说明 mknod命令 用于创建Linux中的字符设备文件和块设备文件。 语法 选项 参数 文件名：要创建的设备文件名； 类型：指定要创建的设备文件的类型； 主设备号：指定设备文件的主设备号； 次设备号：指定设备文件的次设备号。 实例 扩展知识 Linux的设备管理是和文件系统紧密结合的，各种设备都以文件的形...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/mknod.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"mknod"}],["meta",{"property":"og:description","content":"mknod 创建字符设备文件和块设备文件 补充说明 mknod命令 用于创建Linux中的字符设备文件和块设备文件。 语法 选项 参数 文件名：要创建的设备文件名； 类型：指定要创建的设备文件的类型； 主设备号：指定设备文件的主设备号； 次设备号：指定设备文件的次设备号。 实例 扩展知识 Linux的设备管理是和文件系统紧密结合的，各种设备都以文件的形..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mknod\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]},{"level":3,"title":"扩展知识","slug":"扩展知识","link":"#扩展知识","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.02,"words":605},"filePathRelative":"command/linux/mknod.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,h as data};
