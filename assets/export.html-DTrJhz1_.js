import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o,c as r,a as n,b as a,d as e,e as l}from"./app-D_HUMAmc.js";const p={},c=l(`<h1 id="export" tabindex="-1"><a class="header-anchor" href="#export"><span>export</span></a></h1><p>为shell变量或函数设置导出属性。</p><h2 id="概要" tabindex="-1"><a class="header-anchor" href="#概要"><span>概要</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>export [-fn] [name[=word]]...
export -p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主要用途" tabindex="-1"><a class="header-anchor" href="#主要用途"><span>主要用途</span></a></h2><ul><li>定义一到多个变量并设置导出属性。</li><li>修改一到多个变量的值并设置导出属性。</li><li>删除一到多个变量的导出属性。</li><li>显示全部拥有导出属性的变量。</li><li>为一到多个已定义函数新增导出属性。</li><li>删除一到多个函数的导出属性。</li><li>显示全部拥有导出属性的函数。</li></ul><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-f：指向函数。
-n：删除变量的导出属性。
-p：显示全部拥有导出属性的变量。
-pf：显示全部拥有导出属性的函数。
-nf：删除函数的导出属性。
--：在它之后的选项无效。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h2><p>name（可选）：变量名或已定义函数名。</p><p>value（可选）：变量的值。</p><h3 id="返回值" tabindex="-1"><a class="header-anchor" href="#返回值"><span>返回值</span></a></h3><p>export返回true除非你提供了非法选项或非法名称。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 显示全部拥有导出属性的变量。</span>
<span class="token comment"># export -p</span>
<span class="token comment"># export</span>
<span class="token comment"># 显示全部拥有导出属性的函数。</span>
<span class="token comment"># export -pf</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 首先删除要演示的变量名</span>
<span class="token comment">#unset a b</span>
<span class="token comment"># 定义变量的同时增加导出属性</span>
<span class="token builtin class-name">export</span> a <span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">3</span>
<span class="token comment"># 当然也可以先定义后增加导出属性</span>
<span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">3</span>
<span class="token builtin class-name">export</span> b

<span class="token comment"># 修改拥有导出属性的变量的值</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">5</span> <span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">7</span>
<span class="token comment"># 当然也可以直接赋值修改</span>
<span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token assign-left variable">b</span><span class="token operator">=</span><span class="token number">7</span>

<span class="token comment"># 删除变量的导出属性</span>
<span class="token builtin class-name">export</span> <span class="token parameter variable">-n</span> a b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 首先删除要演示的函数名</span>
<span class="token builtin class-name">unset</span> func_1 func_2
<span class="token comment"># 创建函数</span>
<span class="token keyword">function</span> <span class="token function-name function">func_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function-name function">func_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;890&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token comment"># 为已定义函数增加导出属性</span>
<span class="token builtin class-name">export</span> <span class="token parameter variable">-f</span> func_1 func_2

<span class="token comment"># 删除函数的导出属性</span>
<span class="token builtin class-name">export</span> <span class="token parameter variable">-fn</span> a b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 添加环境变量（JAVA）到\`~/.bashrc\`</span>
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/usr/local/jdk1.7.0/bin:<span class="token environment constant">$PATH</span>
<span class="token comment"># 添加当前位置到动态库环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable">\${LD_LIBRARY_PATH}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="错误用法" tabindex="-1"><a class="header-anchor" href="#错误用法"><span>错误用法</span></a></h2><ul><li>对未定义的函数添加导出属性。</li><li>对没有导出属性的函数/变量执行删除导出属性操作。</li><li>在 <code>--</code> 后使用选项。</li></ul><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a"><span>Q&amp;A</span></a></h2><h4 id="q-对变量或函数设置导出属性有什么用" tabindex="-1"><a class="header-anchor" href="#q-对变量或函数设置导出属性有什么用"><span>Q：对变量或函数设置导出属性有什么用？</span></a></h4>`,22),d={href:"https://askubuntu.com/questions/26318/environment-variable-vs-shell-variable-whats-the-difference",target:"_blank",rel:"noopener noreferrer"},u=n("h4",{id:"q-如果我编写的脚本修改了已有的环境变量的值-那么执行它会在当前终端生效吗-会影响之前以及之后打开的终端吗",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#q-如果我编写的脚本修改了已有的环境变量的值-那么执行它会在当前终端生效吗-会影响之前以及之后打开的终端吗"},[n("span",null,"Q：如果我编写的脚本修改了已有的环境变量的值，那么执行它会在当前终端生效吗？会影响之前以及之后打开的终端吗？")])],-1),m=n("code",null,"source",-1),b=n("code",null,"source",-1),h=n("code",null,"~/.bashrc",-1),v={href:"https://www.cnblogs.com/hongzg1982/articles/2101792.html",target:"_blank",rel:"noopener noreferrer"},k=l('<h4 id="q-我脚本文件中调用-bashrc中定义的函数和变量。为什么在新打开的终端中通过-sh-方式调用该脚本或直接运行" tabindex="-1"><a class="header-anchor" href="#q-我脚本文件中调用-bashrc中定义的函数和变量。为什么在新打开的终端中通过-sh-方式调用该脚本或直接运行"><span>Q：我脚本文件中调用<code>~/.bashrc</code>中定义的函数和变量。为什么在新打开的终端中通过 <code>sh</code> 方式调用该脚本或直接运行</span></a></h4><p>这个当前用户有执行权限的脚本却不能使用这些函数和变量？<br> A：请在<code>~/.bashrc</code>文件中增加export它们的语句。另请参阅 <strong>知识点</strong> 段落。</p><h4 id="q-数组和关联数组也可以设置导出属性吗" tabindex="-1"><a class="header-anchor" href="#q-数组和关联数组也可以设置导出属性吗"><span>Q：数组和关联数组也可以设置导出属性吗？</span></a></h4>',3),g={href:"https://stackoverflow.com/questions/5564418/exporting-an-array-in-bash-script",target:"_blank",rel:"noopener noreferrer"},f=l('<h4 id="q-为什么我在查看变量或函数导出属性的时候显示的开头是declare" tabindex="-1"><a class="header-anchor" href="#q-为什么我在查看变量或函数导出属性的时候显示的开头是declare"><span>Q：为什么我在查看变量或函数导出属性的时候显示的开头是<code>declare</code>？</span></a></h4><p>A：因为<code>declare</code>也能够设置变量或函数的导出属性，详见<code>declare</code>命令。</p><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ol><li>该命令是bash内建命令，相关的帮助信息请查看<code>help</code>命令。</li></ol><h3 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点"><span>知识点</span></a></h3>',5),x=n("code",null,"info bash",-1),_={href:"http://www.gnu.org/software/bash/manual/bash.html",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"3.7.3",-1),y=n("blockquote",null,[n("ul",null,[n("li",null,"shell parameters that are set by variable assignment or with set or inherited from the shell’s parent in the environment"),n("li",null,"shell functions defined during execution or inherited from the shell’s parent in the environment")])],-1),w=n("p",null,[a("那么第一句话中的参数又和变量有什么关系呢？在"),n("code",null,"3.4"),a("节第一段中提到：")],-1),A=n("blockquote",null,[n("p",null,"A variable is a parameter denoted by a name.")],-1),T=n("p",null,"变量是有名字的参数。",-1),S=n("p",null,"那么子shell确实继承了父shell中带有导出属性的变量或函数。",-1),L={href:"https://blog.csdn.net/soaringlee_fighting/article/details/78759448",target:"_blank",rel:"noopener noreferrer"},N=n("h3",{id:"参考链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考链接"},[n("span",null,"参考链接")])],-1),z={href:"https://www.cnblogs.com/hongzg1982/articles/2101792.html",target:"_blank",rel:"noopener noreferrer"},E={href:"https://stackoverflow.com/questions/5564418/exporting-an-array-in-bash-script",target:"_blank",rel:"noopener noreferrer"},C={href:"https://unix.stackexchange.com/questions/22796/can-i-export-functions-in-bash",target:"_blank",rel:"noopener noreferrer"},H={href:"https://askubuntu.com/questions/26318/environment-variable-vs-shell-variable-whats-the-difference",target:"_blank",rel:"noopener noreferrer"},B=l(`<h3 id="扩展阅读" tabindex="-1"><a class="header-anchor" href="#扩展阅读"><span>扩展阅读</span></a></h3><p>一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># export</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">G_BROKEN_FILENAMES</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">HISTSIZE</span></span><span class="token operator">=</span><span class="token string">&quot;1000&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span><span class="token string">&quot;/root&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">hostname</span><span class="token operator">=</span><span class="token string">&quot;localhost&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">INPUTRC</span><span class="token operator">=</span><span class="token string">&quot;/etc/inputrc&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span><span class="token string">&quot;zh_CN.UTF-8&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LESSOPEN</span></span><span class="token operator">=</span><span class="token string">&quot;|/usr/bin/lesspipe.sh %s&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">logname</span><span class="token operator">=</span><span class="token string">&quot;root&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">LS_COLORS</span></span><span class="token operator">=</span><span class="token string">&quot;no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35:&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">mail</span><span class="token operator">=</span><span class="token string">&quot;/var/spool/mail/root&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token environment constant">OLDPWD</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">pwd</span><span class="token operator">=</span><span class="token string">&quot;/root&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span><span class="token string">&quot;/bin/bash&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">SHLVL</span></span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">SSH_CLIENT</span><span class="token operator">=</span><span class="token string">&quot;192.168.2.111 2705 22&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">SSH_CONNECTION</span><span class="token operator">=</span><span class="token string">&quot;192.168.2.111 2705 192.168.2.2 22&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable">SSH_TTY</span><span class="token operator">=</span><span class="token string">&quot;/dev/pts/0&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">TERM</span></span><span class="token operator">=</span><span class="token string">&quot;linux&quot;</span>
<span class="token builtin class-name">declare</span> <span class="token parameter variable">-x</span> <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token string">&quot;root&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function R(I,P){const s=i("ExternalLinkIcon");return o(),r("div",null,[c,n("p",null,[a("A：它们会成为环境变量，可以在脚本中访问它们，尤其是脚本中调用的子进程需要时。（ "),n("strong",null,[n("a",d,[a("参考链接4"),e(s)])]),a(" ）")]),u,n("p",null,[a("A：只有通过"),m,a("方式调用的脚本会生效，您可以查看"),b,a("命令获得更多信息；其他方式只是在子shell中执行。 之前的不会影响，之后的除非是修改了"),h,a("这种启动终端时加载的脚本。（ "),n("strong",null,[n("a",v,[a("参考链接1"),e(s)])]),a(" ）")]),k,n("p",null,[a("A：是可以的（如果你的bash支持它们），不过有些问题（ "),n("strong",null,[n("a",g,[a("参考链接2"),e(s)])]),a(" ）。")]),f,n("p",null,[a("在"),x,a("或 "),n("a",_,[a("bash在线文档"),e(s)]),a(" 的 "),q,a("节提到了shell执行环境，其中涉及变量和函数的内容如下")]),y,w,A,T,S,n("p",null,[a("可参考链接： "),n("a",L,[a("执行脚本方式的区别"),e(s)])]),N,n("ol",null,[n("li",null,[n("a",z,[a("关于bashrc profile文件的讨论"),e(s)])]),n("li",null,[n("a",E,[a("关于export数组的讨论"),e(s)])]),n("li",null,[n("a",C,[a("export -pf用法"),e(s)])]),n("li",null,[n("a",H,[a("环境变量和shell变量的区别"),e(s)])])]),B])}const D=t(p,[["render",R],["__file","export.html.vue"]]),V=JSON.parse('{"path":"/command/linux/export.html","title":"export","lang":"zh-CN","frontmatter":{"description":"export 为shell变量或函数设置导出属性。 概要 主要用途 定义一到多个变量并设置导出属性。 修改一到多个变量的值并设置导出属性。 删除一到多个变量的导出属性。 显示全部拥有导出属性的变量。 为一到多个已定义函数新增导出属性。 删除一到多个函数的导出属性。 显示全部拥有导出属性的函数。 选项 参数 name（可选）：变量名或已定义函数名。 va...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/export.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"export"}],["meta",{"property":"og:description","content":"export 为shell变量或函数设置导出属性。 概要 主要用途 定义一到多个变量并设置导出属性。 修改一到多个变量的值并设置导出属性。 删除一到多个变量的导出属性。 显示全部拥有导出属性的变量。 为一到多个已定义函数新增导出属性。 删除一到多个函数的导出属性。 显示全部拥有导出属性的函数。 选项 参数 name（可选）：变量名或已定义函数名。 va..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"export\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"概要","slug":"概要","link":"#概要","children":[]},{"level":2,"title":"主要用途","slug":"主要用途","link":"#主要用途","children":[]},{"level":2,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[{"level":3,"title":"返回值","slug":"返回值","link":"#返回值","children":[]}]},{"level":2,"title":"例子","slug":"例子","link":"#例子","children":[]},{"level":2,"title":"错误用法","slug":"错误用法","link":"#错误用法","children":[]},{"level":2,"title":"Q&A","slug":"q-a","link":"#q-a","children":[{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":3,"title":"知识点","slug":"知识点","link":"#知识点","children":[]},{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]},{"level":3,"title":"扩展阅读","slug":"扩展阅读","link":"#扩展阅读","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":4.69,"words":1407},"filePathRelative":"command/linux/export.md","localizedDate":"2024年4月12日","autoDesc":true}');export{D as comp,V as data};
