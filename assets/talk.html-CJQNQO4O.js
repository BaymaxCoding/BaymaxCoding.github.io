import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,b as t}from"./app-DOGW-9XX.js";const s={},i=t(`<h1 id="talk" tabindex="-1"><a class="header-anchor" href="#talk"><span>talk</span></a></h1><p>让用户和其他用户聊天</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>talk命令</strong> 是talk服务器的客户端工具，通过talk命令可以让用户和其他用户聊天。linux中talk命令参数程序的使用很简单，只要知道交谈对象的地址，就可以邀请对方交谈。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>talk<span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>用户：指定聊天的用户；</li><li>终端：指定用户的终端。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>例如登录在主机rs6000.cic.test.com上的用户jdx希望和登录在主机tirc.cs.test.com上的用户wangxz进行交谈，则可以输入下面的命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>talk wangxz@tirc.cs.test.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Internet上的相关程序（Talk Daemon）就会传送一条信息邀请wangxz来交谈，这时用户wangxz的屏幕上就会出现如下信息，并响铃提示：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>Message from Talk_Daemon@tirc.cs.test.com at <span class="token number">21</span>:44 …
talk: connection requested by jdx@rs6000.cic.test.com
talk: respond with:  talk jdx@rs6000.cic.test.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时，用户wangxz应该做的工作就是按照上面的信息提示，即输入linux中talk命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>talk jdx@rs6000.cic.test.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后，连接建立成功，两个用户就可以进行交谈了。这时，双方的终端屏幕上都将显示信息 <strong>[Connection established]</strong> 并响铃，同时屏幕被linux中talk命令程序以一条水平线分割为上下两部分，上半部分用来显示用户自己输入的内容，下半部分用来显示对方输入的内容。两个用户可以同时输入，他们输入的内容将会立即显示在双方的屏幕上。</p><p>在用户进行输入时，可按 <strong>BACKSPACE</strong> 见来更正前一个字符，也可按 <strong>CTRL+w</strong> 来删除一个完整的单词，或者用 <strong>CTRL+U</strong> 来删除一整行，另外，用户还可以通过按 <strong>CTRL+L</strong> 来刷新屏幕。如果要结束交谈，可由任何一方按下 <strong>CTRL+C</strong> 来中断连接，但在结束对话前最好道声“再见”，并等待对方回应。linux中talk命令程序结束时，在屏幕上将回显示一条信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Connection closing. Exiting<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并非每次要求对方交谈都能成功，有时对方没有登录，则linux中talk命令程序提示信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Your party is not logged on<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并退出；如果对方已登录，但因某种原因（如不是正在使用机器）没有响应，那么linux中talk命令程序将会每隔10秒钟给他发一条邀请信息，同时在自己的屏幕上显示：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Ringing your party again<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果用户不愿等待，则可以按 <strong>CTRL+C</strong> 终止linux中talk命令程序。还有的时候系统可能出现下面的信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Checking <span class="token keyword">for</span> invitation on caller’s machine<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这说明双方的linux中talk命令程序不兼容，这时可以试试ntalk和ytalk命令，如果没有，就只好找系统管理员了。</p><p>如果用户在做某些紧急工作（如编辑邮件）时不希望被linux中talk命令的邀请打搅，他可以使用命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mesg n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来暂时拒绝交谈，这时如果有用户邀请他交谈，只能得到提示信息：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Your party is refusing messages<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不过要注意的是，一旦完成紧急工作。最好立即打开信息接收开关（用命令<code>mesg y</code>），否则将会失去很多信息交流的机会。</p><p>以上是linux中talk命令参数的是使用方法。</p>`,31),l=[i];function d(c,r){return e(),n("div",null,l)}const u=a(s,[["render",d],["__file","talk.html.vue"]]),m=JSON.parse('{"path":"/command/linux/talk.html","title":"talk","lang":"zh-CN","frontmatter":{"description":"talk 让用户和其他用户聊天 补充说明 talk命令 是talk服务器的客户端工具，通过talk命令可以让用户和其他用户聊天。linux中talk命令参数程序的使用很简单，只要知道交谈对象的地址，就可以邀请对方交谈。 语法 参数 用户：指定聊天的用户； 终端：指定用户的终端。 实例 例如登录在主机rs6000.cic.test.com上的用户jdx希...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/talk.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"talk"}],["meta",{"property":"og:description","content":"talk 让用户和其他用户聊天 补充说明 talk命令 是talk服务器的客户端工具，通过talk命令可以让用户和其他用户聊天。linux中talk命令参数程序的使用很简单，只要知道交谈对象的地址，就可以邀请对方交谈。 语法 参数 用户：指定聊天的用户； 终端：指定用户的终端。 实例 例如登录在主机rs6000.cic.test.com上的用户jdx希..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"talk\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":2.82,"words":845},"filePathRelative":"command/linux/talk.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
