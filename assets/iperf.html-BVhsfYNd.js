import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,b as e}from"./app-DOGW-9XX.js";const i={},p=e(`<h1 id="iperf" tabindex="-1"><a class="header-anchor" href="#iperf"><span>iperf</span></a></h1><p>网络性能测试工具</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>iperf命令</strong> 是一个网络性能测试工具。iperf可以测试TCP和UDP带宽质量。iperf可以测量最大TCP带宽，具有多种参数和UDP特性。iperf可以报告带宽，延迟抖动和数据包丢失。利用iperf这一特性，可以用来测试一些网络设备如路由器，防火墙，交换机等的性能。</p><p>iperf分为两种版本，Unix/Linux版和Windows版，Unix/Linux版更新比较快，版本最新。Windows版更新慢。Windows版的iperf叫jperf，或者xjperf。jperf是在iperf基础上开发了更好的UI和新的功能。</p><p>Linux版本下载地址：http://code.google.com/p/iperf/downloads/list</p><h3 id="安装iperf" tabindex="-1"><a class="header-anchor" href="#安装iperf"><span>安装iperf</span></a></h3><p>对于windows版的iperf，直接将解压出来的iperf.exe和cygwin1.dll复制到%systemroot%目录即可，对于linux版的iperf，请使用如下命令安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>gunzip <span class="token parameter variable">-c</span> iperf-<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>.tar.gz <span class="token operator">|</span> <span class="token function">tar</span> <span class="token parameter variable">-xvf</span> -
<span class="token builtin class-name">cd</span> iperf-<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
./configure
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-f, <span class="token parameter variable">--format</span> <span class="token punctuation">\\</span><span class="token punctuation">[</span>bkmaBKMA<span class="token punctuation">]</span>   <span class="token comment"># 格式化带宽数输出。支持的格式有： </span>
                           <span class="token comment"># &#39;b&#39; = bits/sec </span>
                           <span class="token comment"># &#39;B&#39; = Bytes/sec </span>
                           <span class="token comment"># &#39;k&#39; = Kbits/sec </span>
                           <span class="token comment"># &#39;K&#39; = KBytes/sec </span>
                           <span class="token comment"># &#39;m&#39; = Mbits/sec </span>
                           <span class="token comment"># &#39;M&#39; = MBytes/sec </span>
                           <span class="token comment"># &#39;g&#39; = Gbits/sec </span>
                           <span class="token comment"># &#39;G&#39; = GBytes/sec </span>
                           <span class="token comment"># &#39;a&#39; = adaptive bits/sec </span>
                           <span class="token comment"># &#39;A&#39; = adaptive Bytes/sec 自适应格式是kilo-和mega-二者之一。</span>
                           <span class="token comment"># 除了带宽之外的字段都输出为字节，除非指定输出的格式，默认的参数是a。 </span>
                           <span class="token comment"># 注意：在计算字节byte时，Kilo = 1024， Mega = 1024^2，Giga = 1024^3。</span>
                           <span class="token comment"># 通常，在网络中，Kilo = 1000， Mega = 1000^2， and Giga = 1000^3，所以，Iperf也按此来计算比特（位）。</span>
                           <span class="token comment"># 如果这些困扰了你，那么请使用-f b参数，然后亲自计算一下。</span>
-i, <span class="token parameter variable">--interval</span> <span class="token comment">#           # 设置每次报告之间的时间间隔，单位为秒。如果设置为非零值，就会按照此时间间隔输出测试报告。默认值为零。</span>
-l, <span class="token parameter variable">--len</span> <span class="token comment">#\\[KM]           # 设置读写缓冲区的长度。TCP方式默认为8KB，UDP方式默认为1470字节。</span>
-m, --print<span class="token punctuation">\\</span>_mss           <span class="token comment"># 输出TCP MSS值（通过TCP\\_MAXSEG支持）。MSS值一般比MTU值小40字节。通常情况</span>
-p, <span class="token parameter variable">--port</span> <span class="token comment">#               # 设置端口，与服务器端的监听端口一致。默认是5001端口，与ttcp的一样。</span>
-u, <span class="token parameter variable">--udp</span>                  <span class="token comment"># 使用UDP方式而不是TCP方式。参看-b选项。</span>
-w, <span class="token parameter variable">--window</span> <span class="token comment">#\\[KM]        # 设置套接字缓冲区为指定大小。对于TCP方式，此设置为TCP窗口大小。</span>
                           <span class="token comment"># 对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值。</span>
-B, <span class="token parameter variable">--bind</span> <span class="token function">host</span>            <span class="token comment"># 绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，</span>
                           <span class="token comment"># 这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。在Iperf的UDP模式下，此参数用于绑定和加入一个多播组。</span>
                           <span class="token comment"># 使用范围在224.0.0.0至239.255.255.255的多播地址。参考-T参数。</span>
-C, <span class="token parameter variable">--compatibility</span>        <span class="token comment"># 与低版本的Iperf使用时，可以使用兼容模式。不需要两端同时使用兼容模式，但是强烈推荐两端同时使用兼容模式。</span>
                           <span class="token comment"># 某些情况下，使用某些数据流可以引起1.7版本的服务器端崩溃或引起非预期的连接尝试。</span>
-M, <span class="token parameter variable">--mss</span>                  <span class="token comment"># ip头减去40字节。在以太网中，MSS值 为1460字节（MTU1500字节）。许多操作系统不支持此选项。</span>
-N, <span class="token parameter variable">--nodelay</span>              <span class="token comment"># 设置TCP无延迟选项，禁用Nagle&#39;s运算法则。通常情况此选项对于交互程序，例如telnet，是禁用的。</span>
<span class="token parameter variable">-V</span> <span class="token punctuation">(</span>from v1.6 or higher<span class="token punctuation">)</span>   <span class="token comment"># 绑定一个IPv6地址。 服务端：$ iperf -s –V 客户端：$ iperf -c -V 注意：在1.6.3或更高版本中，指定IPv6地址不需要使用-B参数绑定，在1.6之前的版本则需要。在大多数操作系统中，将响应IPv4客户端映射的IPv4地址。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务器端专用选项</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-s, <span class="token parameter variable">--server</span>                    <span class="token comment"># Iperf服务器模式</span>
<span class="token parameter variable">-D</span> <span class="token punctuation">(</span>v1.2或更高版本<span class="token punctuation">)</span>               <span class="token comment"># Unix平台下Iperf作为后台守护进程运行。在Win32平台下，Iperf将作为服务运行。</span>
-R<span class="token punctuation">(</span>v1.2或更高版本，仅用于Windows<span class="token punctuation">)</span>  <span class="token comment"># 卸载Iperf服务（如果它在运行）。</span>
-o<span class="token punctuation">(</span>v1.2或更高版本，仅用于Windows<span class="token punctuation">)</span>  <span class="token comment"># 重定向输出到指定文件</span>
-c, <span class="token parameter variable">--client</span> <span class="token function">host</span>               <span class="token comment"># 如果Iperf运行在服务器模式，并且用-c参数指定一个主机，那么Iperf将只接受指定主机的连接。此参数不能工作于UDP模式。</span>
-P, <span class="token parameter variable">--parallel</span> <span class="token comment">#                # 服务器关闭之前保持的连接数。默认是0，这意味着永远接受连接。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端专用选项</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-b, <span class="token parameter variable">--bandwidth</span> <span class="token comment">#\\[KM]       # UDP模式使用的带宽，单位bits/sec。此选项与-u选项相关。默认值是1 Mbit/sec。 </span>
-c, <span class="token parameter variable">--client</span> <span class="token function">host</span>            <span class="token comment"># 运行Iperf的客户端模式，连接到指定的Iperf服务器端。 </span>
-d, <span class="token parameter variable">--dualtest</span>               <span class="token comment"># 运行双测试模式。这将使服务器端反向连接到客户端，</span>
                             <span class="token comment"># 使用-L 参数中指定的端口（或默认使用客户端连接到服务器端的端口）。</span>
                             <span class="token comment"># 这些在操作的同时就立即完成了。如果你想要一个交互的测试，请尝试-r参数。 </span>
-n, <span class="token parameter variable">--num</span> <span class="token comment">#\\[KM]             # 传送的缓冲器数量。通常情况，Iperf按照10秒钟发送数据。</span>
                             <span class="token comment"># -n参数跨越此限制，按照指定次数发送指定长度的数据，而不论该操作耗费多少时间。参考-l与-t选项。 </span>
-r, <span class="token parameter variable">--tradeoff</span>               <span class="token comment"># 往复测试模式。当客户端到服务器端的测试结束时，服务器端通过-l选项指定的端口（或默认为客户端连接到服务器端的端口），</span>
                             <span class="token comment"># 反向连接至客户端。当客户端连接终止时，反向连接随即开始。如果需要同时进行双向测试，请尝试-d参数。 </span>
-t, <span class="token parameter variable">--time</span> <span class="token comment">#                 # 设置传输的总时间。Iperf在指定的时间内，重复的发送指定长度的数据包。默认是10秒钟。参考-l与-n选项。 </span>
-L, <span class="token parameter variable">--listenport</span> <span class="token comment">#           # 指定服务端反向连接到客户端时使用的端口。默认使用客户端连接至服务端的端口。 </span>
-P, <span class="token parameter variable">--parallel</span> <span class="token comment">#             # 线程数。指定客户端与服务端之间使用的线程数。默认是1线程。需要客户端与服务器端同时使用此参数。 </span>
-S, <span class="token parameter variable">--tos</span> <span class="token comment">#                  # 出栈数据包的服务类型。许多路由器忽略TOS字段。你可以指定这个值，使用以&quot;0x&quot;开始的16进制数，</span>
                             <span class="token comment"># 或以&quot;0&quot;开始的8进制数或10进制数。 例如，16进制&#39;0x10&#39; = 8进制&#39;020&#39; = 十进制&#39;16&#39;。</span>
                             <span class="token comment"># TOS值1349就是： IPTOS\\_LOWDELAY minimize delay 0x10 IPTOS\\_THROUGHPUT maximize </span>
                             <span class="token comment"># throughput 0x08 IPTOS\\_RELIABILITY maximize reliability 0x04 IPTOS\\_LOWCOST minimize cost 0x02 </span>
-T, <span class="token parameter variable">--ttl</span> <span class="token comment">#                  # 出栈多播数据包的TTL值。这本质上就是数据通过路由器的跳数。默认是1，链接本地。 </span>
<span class="token parameter variable">-F</span> <span class="token punctuation">(</span>from v1.2 or higher<span class="token punctuation">)</span>     <span class="token comment"># 使用特定的数据流测量带宽，例如指定的文件。 $ iperf -c -F </span>
<span class="token parameter variable">-I</span> <span class="token punctuation">(</span>from v1.2 or higher<span class="token punctuation">)</span>     <span class="token comment"># 与-F一样，由标准输入输出文件输入数据。 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>杂项</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-h, <span class="token parameter variable">--help</span>          <span class="token comment"># 显示命令行参考并退出 。</span>
-v, <span class="token parameter variable">--version</span>       <span class="token comment"># 显示版本信息和编译信息并退出。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>带宽测试通常采用UDP模式，因为能测出极限带宽、时延抖动、丢包率。在进行测试时，首先以链路理论带宽作为数据发送速率进行测试，例如，从客户端到服务器之间的链路的理论带宽为100Mbps，先用<code>-b 100M</code>进行测试，然后根据测试结果（包括实际带宽，时延抖动和丢包率），再以实际带宽作为数据发送速率进行测试，会发现时延抖动和丢包率比第一次好很多，重复测试几次，就能得出稳定的实际带宽。</p><p><strong>UDP模式</strong></p><p>服务器端：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-u</span> <span class="token parameter variable">-s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-u</span> <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1 <span class="token parameter variable">-b</span> 100M <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在udp模式下，以100Mbps为数据发送速率，客户端到服务器192.168.1.1上传带宽测试，测试时间为60秒。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-u</span> <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1 <span class="token parameter variable">-b</span> 5M <span class="token parameter variable">-P</span> <span class="token number">30</span> <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端同时向服务器端发起30个连接线程，以5Mbps为数据发送速率。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-u</span> <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1 <span class="token parameter variable">-b</span> 100M <span class="token parameter variable">-d</span> <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以100M为数据发送速率，进行上下行带宽测试。</p><p><strong>TCP模式</strong></p><p>服务器端：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-s</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1 <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在tcp模式下，客户端到服务器192.168.1.1上传带宽测试，测试时间为60秒。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1  <span class="token parameter variable">-P</span> <span class="token number">30</span> <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端同时向服务器端发起30个连接线程。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>iperf <span class="token parameter variable">-c</span> <span class="token number">192.168</span>.1.1  <span class="token parameter variable">-d</span> <span class="token parameter variable">-t</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进行上下行带宽测试。</p>`,39),t=[p];function l(r,c){return s(),n("div",null,t)}const d=a(i,[["render",l],["__file","iperf.html.vue"]]),v=JSON.parse('{"path":"/command/linux/iperf.html","title":"iperf","lang":"zh-CN","frontmatter":{"description":"iperf 网络性能测试工具 补充说明 iperf命令 是一个网络性能测试工具。iperf可以测试TCP和UDP带宽质量。iperf可以测量最大TCP带宽，具有多种参数和UDP特性。iperf可以报告带宽，延迟抖动和数据包丢失。利用iperf这一特性，可以用来测试一些网络设备如路由器，防火墙，交换机等的性能。 iperf分为两种版本，Unix/Linu...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/iperf.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"iperf"}],["meta",{"property":"og:description","content":"iperf 网络性能测试工具 补充说明 iperf命令 是一个网络性能测试工具。iperf可以测试TCP和UDP带宽质量。iperf可以测量最大TCP带宽，具有多种参数和UDP特性。iperf可以报告带宽，延迟抖动和数据包丢失。利用iperf这一特性，可以用来测试一些网络设备如路由器，防火墙，交换机等的性能。 iperf分为两种版本，Unix/Linu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iperf\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"安装iperf","slug":"安装iperf","link":"#安装iperf","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":7.15,"words":2145},"filePathRelative":"command/linux/iperf.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,v as data};
