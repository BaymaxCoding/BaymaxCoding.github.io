import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,b as i}from"./app-D3p8wuGf.js";const s={},t=i(`<h1 id="iconv" tabindex="-1"><a class="header-anchor" href="#iconv"><span>iconv</span></a></h1><p>转换文件的编码方式</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>iconv命令</strong> 是用来转换文件的编码方式的，比如它可以将UTF8编码的转换成GB18030的编码，反过来也行。JDK中也提供了类似的工具native2ascii。Linux下的iconv开发库包括iconv_open,iconv_close,iconv等C函数，可以用来在C/C++程序中很方便的转换字符编码，这在抓取网页的程序中很有用处，而iconv命令在调试此类程序时用得着。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">iconv</span> <span class="token parameter variable">-f</span> encoding <span class="token punctuation">[</span>-t encoding<span class="token punctuation">]</span> <span class="token punctuation">[</span>inputfile<span class="token punctuation">]</span><span class="token punctuation">..</span>. 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">-f</span> encoding :把字符从encoding编码开始转换。 
<span class="token parameter variable">-t</span> encoding :把字符转换到encoding编码。 
<span class="token parameter variable">-l</span> :列出已知的编码字符集合 
<span class="token parameter variable">-o</span> <span class="token function">file</span> :指定输出文件 
<span class="token parameter variable">-c</span> :忽略输出的非法字符 
<span class="token parameter variable">-s</span> :禁止警告信息，但不是错误信息 
<span class="token parameter variable">--verbose</span> :显示进度信息 
-f和-t所能指定的合法字符在-l选项的命令里面都列出来了。 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>列出当前支持的字符编码：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">iconv</span> <span class="token parameter variable">-l</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将文件file1转码，转后文件输出到fil2中：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">iconv</span> file1 <span class="token parameter variable">-f</span> EUC-JP-MS <span class="token parameter variable">-t</span> UTF-8 <span class="token parameter variable">-o</span> file2 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里，没<code>-o</code>那么会输出到标准输出。</p>`,14),o=[t];function c(l,r){return e(),n("div",null,o)}const v=a(s,[["render",c],["__file","iconv.html.vue"]]),m=JSON.parse('{"path":"/command/linux/iconv.html","title":"iconv","lang":"zh-CN","frontmatter":{"description":"iconv 转换文件的编码方式 补充说明 iconv命令 是用来转换文件的编码方式的，比如它可以将UTF8编码的转换成GB18030的编码，反过来也行。JDK中也提供了类似的工具native2ascii。Linux下的iconv开发库包括iconv_open,iconv_close,iconv等C函数，可以用来在C/C++程序中很方便的转换字符编码，这...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/iconv.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"iconv"}],["meta",{"property":"og:description","content":"iconv 转换文件的编码方式 补充说明 iconv命令 是用来转换文件的编码方式的，比如它可以将UTF8编码的转换成GB18030的编码，反过来也行。JDK中也提供了类似的工具native2ascii。Linux下的iconv开发库包括iconv_open,iconv_close,iconv等C函数，可以用来在C/C++程序中很方便的转换字符编码，这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"iconv\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1,"words":299},"filePathRelative":"command/linux/iconv.md","localizedDate":"2024年4月12日","autoDesc":true}');export{v as comp,m as data};
