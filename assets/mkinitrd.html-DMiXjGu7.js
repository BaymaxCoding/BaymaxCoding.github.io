import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as e}from"./app-CHACLx4z.js";const i={},t=e(`<h1 id="mkinitrd" tabindex="-1"><a class="header-anchor" href="#mkinitrd"><span>mkinitrd</span></a></h1><p>建立要载入ramdisk的映像文件</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>mkinitrd命令</strong> 建立要载入ramdisk的映像文件，以供Linux开机时载入ramdisk。</p><p>这个是重新封包核心的命令，例如你自己修改了一个设备的驱动，如果这个驱动要加入核心级别的话，就需要对核心进行重新封包，把新加的配置编译到核心内部去！</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mkinitrd<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-f：若指定的映像问家名称与现有文件重复，则覆盖现有的文件；
-v：执行时显示详细的信息；
--omit-scsi-modules：不要载入SCSI模块；
<span class="token parameter variable">--preload</span><span class="token operator">=</span><span class="token operator">&lt;</span>模块名称<span class="token operator">&gt;</span>：指定要载入的模块；
<span class="token parameter variable">--with</span><span class="token operator">=</span><span class="token operator">&lt;</span>模块名称<span class="token operator">&gt;</span>：指定要载入的模块；
--version：显示版本信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>映像文件：指定要创建的映像文件；</li><li>内核版本：指定内核版本。</li></ul><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost tmp<span class="token punctuation">]</span><span class="token comment"># mkinitrd -v -f myinitrd.img $(uname -r)</span>
Creating initramfs
WARNING: using /tmp <span class="token keyword">for</span> temporary files
Looking <span class="token keyword">for</span> deps of module ide-disk
Looking <span class="token keyword">for</span> deps of module ext3  jbd
Looking <span class="token keyword">for</span> deps of module jbd
Using modules:  ./kernel/fs/jbd/jbd.ko ./kernel/fs/ext3/ext3.ko
/sbin/nash -<span class="token operator">&gt;</span> /tmp/initrd.Vz3928/bin/nash
/sbin/insmod.static -<span class="token operator">&gt;</span> /tmp/initrd.Vz3928/bin/insmod
/sbin/udev.static -<span class="token operator">&gt;</span> /tmp/initrd.Vz3928/sbin/udev
/etc/udev/udev.conf -<span class="token operator">&gt;</span> /tmp/initrd.Vz3928/etc/udev/udev.conf
copy from /lib/modules/2.6.9-5.EL/./kernel/fs/jbd/jbd.ko<span class="token punctuation">(</span>elf32-i386<span class="token punctuation">)</span> to /tmp/initrd.Vz3928/lib/jbd.ko<span class="token punctuation">(</span>elf32-i386<span class="token punctuation">)</span>
copy from /lib/modules/2.6.9-5.EL/./kernel/fs/ext3/ext3.ko<span class="token punctuation">(</span>elf32-i386<span class="token punctuation">)</span> to /tmp/initrd.Vz3928/lib/ext3.ko<span class="token punctuation">(</span>elf32-i386<span class="token punctuation">)</span>
Loading module jbd
Loading module ext3

<span class="token punctuation">[</span>root@localhost tmp<span class="token punctuation">]</span><span class="token comment"># file myinitrd.img</span>
myinitrd.img: <span class="token function">gzip</span> compressed data, from Unix, max compression

<span class="token punctuation">[</span>root@localhost tmp<span class="token punctuation">]</span><span class="token comment"># mv myinitrd.img  myinitrd.img.gz</span>
<span class="token punctuation">[</span>root@localhost tmp<span class="token punctuation">]</span><span class="token comment"># gzip -d myinitrd.img.gz</span>
<span class="token punctuation">[</span>root@localhost tmp<span class="token punctuation">]</span><span class="token comment"># file myinitrd.img</span>
myinitrd.img: ASCII cpio archive <span class="token punctuation">(</span>SVR4 with no CRC<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[t];function l(d,r){return a(),s("div",null,o)}const m=n(i,[["render",l],["__file","mkinitrd.html.vue"]]),u=JSON.parse('{"path":"/command/linux/mkinitrd.html","title":"mkinitrd","lang":"zh-CN","frontmatter":{"description":"mkinitrd 建立要载入ramdisk的映像文件 补充说明 mkinitrd命令 建立要载入ramdisk的映像文件，以供Linux开机时载入ramdisk。 这个是重新封包核心的命令，例如你自己修改了一个设备的驱动，如果这个驱动要加入核心级别的话，就需要对核心进行重新封包，把新加的配置编译到核心内部去！ 语法 选项 参数 映像文件：指定要创建的映...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/mkinitrd.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"mkinitrd"}],["meta",{"property":"og:description","content":"mkinitrd 建立要载入ramdisk的映像文件 补充说明 mkinitrd命令 建立要载入ramdisk的映像文件，以供Linux开机时载入ramdisk。 这个是重新封包核心的命令，例如你自己修改了一个设备的驱动，如果这个驱动要加入核心级别的话，就需要对核心进行重新封包，把新加的配置编译到核心内部去！ 语法 选项 参数 映像文件：指定要创建的映..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mkinitrd\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"command/linux/mkinitrd.md","localizedDate":"2024年4月12日","autoDesc":true}');export{m as comp,u as data};
