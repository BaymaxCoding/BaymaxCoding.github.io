import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-D_HUMAmc.js";const t={},i=e(`<h1 id="ifconfig" tabindex="-1"><a class="header-anchor" href="#ifconfig"><span>ifconfig</span></a></h1><p>配置和显示Linux系统网卡的网络参数</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>ifconfig命令</strong> 被用于配置和显示Linux内核中网络接口的网络参数。用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>ifconfig<span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>add<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：设置网络设备IPv6的ip地址；
del<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：删除网络设备IPv6的IP地址；
down：关闭指定的网络设备；
<span class="token operator">&lt;</span>hw<span class="token operator">&lt;</span>网络设备类型<span class="token operator">&gt;</span><span class="token operator">&lt;</span>硬件地址<span class="token operator">&gt;</span>：设置网络设备的类型与硬件地址；
io_addr<span class="token operator">&lt;</span>I/O地址<span class="token operator">&gt;</span>：设置网络设备的I/O地址；
irq<span class="token operator">&lt;</span>IRQ地址<span class="token operator">&gt;</span>：设置网络设备的IRQ；
media<span class="token operator">&lt;</span>网络媒介类型<span class="token operator">&gt;</span>：设置网络设备的媒介类型；
mem_start<span class="token operator">&lt;</span>内存地址<span class="token operator">&gt;</span>：设置网络设备在主内存所占用的起始地址；
metric<span class="token operator">&lt;</span>数目<span class="token operator">&gt;</span>：指定在计算数据包的转送次数时，所要加上的数目；
mtu<span class="token operator">&lt;</span>字节<span class="token operator">&gt;</span>：设置网络设备的MTU；
netmask<span class="token operator">&lt;</span>子网掩码<span class="token operator">&gt;</span>：设置网络设备的子网掩码；
tunnel<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：建立IPv4与IPv6之间的隧道通信地址；
up：启动指定的网络设备；
-broadcast<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：将要送往指定地址的数据包当成广播数据包来处理；
-pointopoint<span class="token operator">&lt;</span>地址<span class="token operator">&gt;</span>：与指定地址的网络设备建立直接连线，此模式具有保密功能；
-promisc：关闭或启动指定网络设备的promiscuous模式；
IP地址：指定网络设备的IP地址；
网络设备：指定网络设备的名称。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p><strong>显示网络设备信息（激活状态的）：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:1E:51  
          inet addr:10.160.7.81  Bcast:10.160.15.255  Mask:255.255.240.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:61430830 errors:0 dropped:0 overruns:0 frame:0
          TX packets:88534 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:3607197869 <span class="token punctuation">(</span><span class="token number">3.3</span> GiB<span class="token punctuation">)</span>  TX bytes:6115042 <span class="token punctuation">(</span><span class="token number">5.8</span> MiB<span class="token punctuation">)</span>

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:56103 errors:0 dropped:0 overruns:0 frame:0
          TX packets:56103 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:5079451 <span class="token punctuation">(</span><span class="token number">4.8</span> MiB<span class="token punctuation">)</span>  TX bytes:5079451 <span class="token punctuation">(</span><span class="token number">4.8</span> MiB<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p><strong>eth0</strong> 表示第一块网卡，其中<code>HWaddr</code>表示网卡的物理地址，可以看到目前这个网卡的物理地址(MAC地址）是<code>00:16:3E:00:1E:51</code>。</p><p><strong>inet addr</strong> 用来表示网卡的IP地址，此网卡的IP地址是<code>10.160.7.81</code>，广播地址<code>Bcast:10.160.15.255</code>，掩码地址<code>Mask:255.255.240.0</code>。</p><p><strong>lo</strong> 是表示主机的回坏地址，这个一般是用来测试一个网络程序，但又不想让局域网或外网的用户能够查看，只能在此台主机上运行和查看所用的网络接口。比如把 httpd服务器的指定到回坏地址，在浏览器输入127.0.0.1就能看到你所架WEB网站了。但只是您能看得到，局域网的其它主机或用户无从知道。</p><ul><li>第一行：连接类型：Ethernet（以太网）HWaddr（硬件mac地址）。</li><li>第二行：网卡的IP地址、子网、掩码。</li><li>第三行：UP（代表网卡开启状态）RUNNING（代表网卡的网线被接上）MULTICAST（支持组播）MTU:1500（最大传输单元）：1500字节。</li><li>第四、五行：接收、发送数据包情况统计。</li><li>第七行：接收、发送数据字节数统计信息。</li></ul><p><strong>启动关闭指定网卡：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> eth0 up
<span class="token function">ifconfig</span> eth0 down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ifconfig eth0 up</code>为启动网卡eth0，<code>ifconfig eth0 down</code>为关闭网卡eth0。ssh登陆linux服务器操作要小心，关闭了就不能开启了，除非你有多网卡。</p><p><strong>为网卡配置和删除IPv6地址：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> eth0 <span class="token function">add</span> 33ffe:3240:800:1005::2/64    <span class="token comment">#为网卡eth0配置IPv6地址</span>
<span class="token function">ifconfig</span> eth0 del 33ffe:3240:800:1005::2/64    <span class="token comment">#为网卡eth0删除IPv6地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>用ifconfig修改MAC地址：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> eth0 hw ether 00:AA:BB:CC:dd:EE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>配置IP地址：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.2.10</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.2.10 netmask 255.255.255.0</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ifconfig eth0 192.168.2.10 netmask 255.255.255.0 broadcast 192.168.2.255</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>启用和关闭arp协议：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> eth0 arp    <span class="token comment">#开启网卡eth0 的arp协议</span>
<span class="token function">ifconfig</span> eth0 <span class="token parameter variable">-arp</span>   <span class="token comment">#关闭网卡eth0 的arp协议</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>设置最大传输单元：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> eth0 mtu <span class="token number">1500</span>    <span class="token comment">#设置能通过的最大数据包大小为 1500 bytes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>其它实例</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span>   <span class="token comment">#处于激活状态的网络接口</span>
<span class="token function">ifconfig</span> <span class="token parameter variable">-a</span>  <span class="token comment">#所有配置的网络接口，不论其是否激活</span>
<span class="token function">ifconfig</span> eth0  <span class="token comment">#显示eth0的网卡信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[i];function l(c,r){return s(),a("div",null,o)}const u=n(t,[["render",l],["__file","ifconfig.html.vue"]]),m=JSON.parse('{"path":"/command/linux/ifconfig.html","title":"ifconfig","lang":"zh-CN","frontmatter":{"description":"ifconfig 配置和显示Linux系统网卡的网络参数 补充说明 ifconfig命令 被用于配置和显示Linux内核中网络接口的网络参数。用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。 语法 参数 实例 显示网络设备信息（激活状态的）： 说明： eth0...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/ifconfig.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"ifconfig"}],["meta",{"property":"og:description","content":"ifconfig 配置和显示Linux系统网卡的网络参数 补充说明 ifconfig命令 被用于配置和显示Linux内核中网络接口的网络参数。用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。 语法 参数 实例 显示网络设备信息（激活状态的）： 说明： eth0..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ifconfig\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":3.68,"words":1104},"filePathRelative":"command/linux/ifconfig.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
