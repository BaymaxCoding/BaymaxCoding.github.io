import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as e}from"./app-DOGW-9XX.js";const l={},t=e(`<h1 id="ln" tabindex="-1"><a class="header-anchor" href="#ln"><span>ln</span></a></h1><p>用来为文件创建链接</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>ln命令</strong> 用来为文件创建链接，链接类型分为硬链接和符号链接两种，默认的链接类型是硬链接。如果要创建符号链接必须使用&quot;-s&quot;选项。</p><p>注意：符号链接文件不是一个独立的文件，它的许多属性依赖于源文件，所以给符号链接文件设置存取权限是没有意义的。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token punctuation">[</span>-T<span class="token punctuation">]</span> 目标 链接名	<span class="token punctuation">(</span>第一种格式<span class="token punctuation">)</span>
　或：ln <span class="token punctuation">[</span>选项<span class="token punctuation">]</span><span class="token punctuation">..</span>. 目标		<span class="token punctuation">(</span>第二种格式<span class="token punctuation">)</span>
　或：ln <span class="token punctuation">[</span>选项<span class="token punctuation">]</span><span class="token punctuation">..</span>. 目标<span class="token punctuation">..</span>. 目录	<span class="token punctuation">(</span>第三种格式<span class="token punctuation">)</span>
　或：ln <span class="token punctuation">[</span>选项<span class="token punctuation">]</span><span class="token punctuation">..</span>. <span class="token parameter variable">-t</span> 目录 目标<span class="token punctuation">..</span>.	<span class="token punctuation">(</span>第四种格式<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>--backup<span class="token punctuation">[</span><span class="token operator">=</span>CONTROL<span class="token punctuation">]</span>      <span class="token comment"># 为每个已存在的目标文件创建备份文件</span>
<span class="token parameter variable">-b</span>                      <span class="token comment"># 类似--backup，但不接受任何参数</span>
-d, -F, <span class="token parameter variable">--directory</span>         <span class="token comment"># 创建指向目录的硬链接(只适用于超级用户)</span>
-f, <span class="token parameter variable">--force</span>                 <span class="token comment"># 强行删除任何已存在的目标文件</span>
-i, <span class="token parameter variable">--interactive</span>           <span class="token comment"># 覆盖既有文件之前先询问用户</span>
-L, <span class="token parameter variable">--logical</span>               <span class="token comment"># 取消引用作为符号链接的目标</span>
-n, --no-dereference        <span class="token comment"># 把符号链接的目的目录视为一般文件</span>
-P, <span class="token parameter variable">--physical</span>              <span class="token comment"># 直接将硬链接到符号链接</span>
-r, <span class="token parameter variable">--relative</span>              <span class="token comment"># 创建相对于链接位置的符号链接</span>
-s, <span class="token parameter variable">--symbolic</span>              <span class="token comment"># 对源文件建立符号链接，而非硬链接</span>
-S, <span class="token parameter variable">--suffix</span><span class="token operator">=</span>SUFFIX         <span class="token comment"># 用&quot;-b&quot;参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，预设的备份字符串是符号“~”，用户可通过“-S”参数来改变它</span>
-t, --target-directory<span class="token operator">=</span>DIRECTORY <span class="token comment"># 指定要在其中创建链接的DIRECTORY</span>
-T, --no-target-directory   <span class="token comment"># 将“LINK_NAME”视为常规文件</span>
-v, <span class="token parameter variable">--verbose</span>               <span class="token comment"># 打印每个链接文件的名称</span>
<span class="token parameter variable">--help</span>      <span class="token comment"># 显示此帮助信息并退出</span>
<span class="token parameter variable">--version</span>   <span class="token comment"># 显示版本信息并退出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><ul><li>源文件：指定链接的源文件。如果使用<code>-s</code>选项创建符号链接，则“源文件”可以是文件或者目录。创建硬链接时，则“源文件”参数只能是文件。</li><li>目标文件：指定源文件的目标链接文件。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>none, off       <span class="token comment"># 不进行备份(即使使用了--backup 选项)</span>
numbered, t     <span class="token comment"># 备份文件加上数字进行排序</span>
existing, nil   <span class="token comment"># 若有数字的备份文件已经存在则使用数字，否则使用普通方式备份</span>
simple, never   <span class="token comment"># 永远使用普通方式备份</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h3><p>将目录<code>/usr/mengqc/mub1</code> 下的文件 m2.c 链接到目录 <code>/usr/liu</code> 下的文件 a2.c</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/mengqc
<span class="token function">ln</span> mub1/m2.c /usr/liu/a2.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在执行ln命令之前，目录<code>/usr/liu</code>中不存在a2.c文件。执行ln之后，在<code>/usr/liu</code>目录中才有a2.c这一项，表明m2.c和a2.c链接起来（注意，二者在物理上是同一文件），利用<code>ls -l</code>命令可以看到链接数的变化。</p><p><strong>创建软链接</strong></p><p>在目录<code>/usr/liu</code>下建立一个符号链接文件abc，使它指向目录<code>/usr/mengqc/mub1</code></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/mengqc/mub1 /usr/liu/abc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行该命令后，<code>/usr/mengqc/mub1</code>代表的路径将存放在名为<code>/usr/liu/abc</code>的文件中。</p><p><strong>创建硬链接</strong></p><p>给文件创建硬链接，为 <code>log2022.log</code> 创建硬链接 <code>ln2022</code>，<code>log2022.log</code> 与 <code>ln2022</code> 的各项属性相同</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ln</span> log2022.log ln2022
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>[root@localhost test]# ll
lrwxrwxrwx 1 root root     11 12-07 16:01 link2013 -&gt; log2022.log
-rw-r--r-- 1 root bin      61 11-13 06:03 log2022.log
[root@localhost test]# ln log2022.log ln2022
[root@localhost test]# ll
lrwxrwxrwx 1 root root     11 12-07 16:01 link2013 -&gt; log2022.log
-rw-r--r-- 2 root bin      61 11-13 06:03 ln2022
-rw-r--r-- 2 root bin      61 11-13 06:03 log2022.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="扩展知识" tabindex="-1"><a class="header-anchor" href="#扩展知识"><span>扩展知识</span></a></h2><p>Linux具有为一个文件起多个名字的功能，称为链接。被链接的文件可以存放在相同的目录下，但是必须有不同的文件名，而不用在硬盘上为同样的数据重复备份。另外，被链接的文件也可以有相同的文件名，但是存放在不同的目录下，这样只要对一个目录下的该文件进行修改，就可以完成对所有目录下同名链接文件的修改。对于某个文件的各链接文件，我们可以给它们指定不同的存取权限，以控制对信息的共享和增强安全性。</p><p>文件链接有两种形式，即硬链接和符号链接。</p><p>ln功能说明：是为某一个文件在另外一个位置建立一个同步的链接，当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p><blockquote><p>⚠️ ln命令会保持每一处链接文件的同步性，也就是说，不论你改动了哪一处，其它的文件都会发生相同的变化。</p></blockquote><h3 id="软链接" tabindex="-1"><a class="header-anchor" href="#软链接"><span>软链接：</span></a></h3><ol><li>软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式</li><li>软链接可以 跨文件系统 ，硬链接不可以</li><li>软链接可以对一个不存在的文件名进行链接</li><li>软链接可以对目录进行链接</li></ol><h3 id="硬链接" tabindex="-1"><a class="header-anchor" href="#硬链接"><span>硬链接</span></a></h3><p>建立硬链接时，在另外的目录或本目录中增加目标文件的一个目录项，这样，一个文件就登记在多个目录中。如下所示的m2.c文件就在目录mub1和liu中都建立了目录项。</p><ol><li>硬链接，以文件副本的形式存在。但不占用实际空间。</li><li>不允许给目录创建硬链接</li><li>硬链接只有在同一个文件系统中才能创建</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-ailR</span>
.:
total <span class="token number">16</span>
<span class="token number">922730</span> drwxr-xr-x  <span class="token number">4</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 <span class="token builtin class-name">.</span>
<span class="token number">393217</span> drwxrwxrwt. <span class="token number">9</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:19 <span class="token punctuation">..</span>
<span class="token number">922733</span> drwxr-xr-x  <span class="token number">2</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 liu
<span class="token number">922731</span> -rw-r--r--  <span class="token number">3</span> root root    <span class="token number">0</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 m2.c
<span class="token number">922732</span> drwxr-xr-x  <span class="token number">2</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 mub1

./liu:
total <span class="token number">8</span>
<span class="token number">922733</span> drwxr-xr-x <span class="token number">2</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 <span class="token builtin class-name">.</span>
<span class="token number">922730</span> drwxr-xr-x <span class="token number">4</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 <span class="token punctuation">..</span>
<span class="token number">922731</span> -rw-r--r-- <span class="token number">3</span> root root    <span class="token number">0</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 m2.c

./mub1:
total <span class="token number">8</span>
<span class="token number">922732</span> drwxr-xr-x <span class="token number">2</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 <span class="token builtin class-name">.</span>
<span class="token number">922730</span> drwxr-xr-x <span class="token number">4</span> root root <span class="token number">4096</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 <span class="token punctuation">..</span>
<span class="token number">922731</span> -rw-r--r-- <span class="token number">3</span> root root    <span class="token number">0</span> Jun <span class="token number">17</span> <span class="token number">11</span>:18 m2.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建硬链接后，己经存在的文件的索引节点号（inode）会被多个目录文件项使用。一个文件的硬链接数可以在目录的长列表格式的第二列中看到，无额外链接的文件的链接数为1。</p><p>在默认情况下，ln命令创建硬链接。ln命令会增加链接数，rm命令会减少链接数。一个文件除非链接数为0，否则不会从文件系统中被物理地删除。</p><p>对硬链接有如下限制：</p><ul><li>不能对目录文件做硬链接。</li><li>不能在不同的文件系统之间做硬链接。就是说，链接文件和被链接文件必须位于同一个文件系统中。</li></ul><h3 id="符号链接-软连接" tabindex="-1"><a class="header-anchor" href="#符号链接-软连接"><span>符号链接(软连接)</span></a></h3><p>符号链接也称为软链接，是将一个路径名链接到一个文件。这些文件是一种特别类型的文件。事实上，它只是一个文本文件（如下所示的abc文件），其中包含它提供链接的另一个文件的路径名，如虚线箭头所示。另一个文件是实际包含所有数据的文件。所有读、写文件内容的命令被用于符号链接时，将沿着链接方向前进来访问实际的文件。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">ls</span> <span class="token parameter variable">-il</span>
total <span class="token number">0</span>
<span class="token number">922736</span> lrwxrwxrwx <span class="token number">1</span> root root <span class="token number">5</span> Jun <span class="token number">17</span> <span class="token number">11</span>:27 abc -<span class="token operator">&gt;</span> a.txt
<span class="token number">922735</span> -rw-r--r-- <span class="token number">1</span> root root <span class="token number">0</span> Jun <span class="token number">17</span> <span class="token number">11</span>:27 a.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与硬链接不同的是，符号链接确实是一个新文件，当然它具有不同的索引节点号；而硬链接并没有建立新文件。</p><p>符号链接没有硬链接的限制，可以对目录文件做符号链接，也可以在不同文件系统之间做符号链接。</p><p>用<code>ln -s</code>命令建立符号链接时，源文件最好用绝对路径名。这样可以在任何工作目录下进行符号链接。而当源文件用相对路径时，如果当前的工作路径与要创建的符号链接文件所在路径不同，就不能进行链接。</p><p>符号链接保持了链接与源文件或目录之间的区别：</p><ul><li>删除源文件或目录，只删除了数据，不会删除链接。一旦以同样文件名创建了源文件，链接将继续指向该文件的新数据。</li><li>在目录长列表中，符号链接作为一种特殊的文件类型显示出来，其第一个字母是l。</li><li>符号链接的大小是其链接文件的路径名中的字节数。</li><li>当用<code>ls -l</code>命令列出文件时，可以看到符号链接名后有一个箭头指向源文件或目录，例如<code>lrwxrwxrwx … 14 jun 20 10:20 /etc/motd-&gt;/original_file</code>其中，表示“文件大小”的数字“14”恰好说明源文件名<code>original_file</code>由14个字符构成。</li></ul>`,48),i=[t];function o(p,c){return s(),a("div",null,i)}const u=n(l,[["render",o],["__file","ln.html.vue"]]),m=JSON.parse('{"path":"/command/linux/ln.html","title":"ln","lang":"zh-CN","frontmatter":{"description":"ln 用来为文件创建链接 补充说明 ln命令 用来为文件创建链接，链接类型分为硬链接和符号链接两种，默认的链接类型是硬链接。如果要创建符号链接必须使用\\"-s\\"选项。 注意：符号链接文件不是一个独立的文件，它的许多属性依赖于源文件，所以给符号链接文件设置存取权限是没有意义的。 语法 选项 参数 源文件：指定链接的源文件。如果使用-s选项创建符号链接，则“...","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/ln.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"ln"}],["meta",{"property":"og:description","content":"ln 用来为文件创建链接 补充说明 ln命令 用来为文件创建链接，链接类型分为硬链接和符号链接两种，默认的链接类型是硬链接。如果要创建符号链接必须使用\\"-s\\"选项。 注意：符号链接文件不是一个独立的文件，它的许多属性依赖于源文件，所以给符号链接文件设置存取权限是没有意义的。 语法 选项 参数 源文件：指定链接的源文件。如果使用-s选项创建符号链接，则“..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ln\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]},{"level":2,"title":"扩展知识","slug":"扩展知识","link":"#扩展知识","children":[{"level":3,"title":"软链接：","slug":"软链接","link":"#软链接","children":[]},{"level":3,"title":"硬链接","slug":"硬链接","link":"#硬链接","children":[]},{"level":3,"title":"符号链接(软连接)","slug":"符号链接-软连接","link":"#符号链接-软连接","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":7.74,"words":2321},"filePathRelative":"command/linux/ln.md","localizedDate":"2024年4月12日","autoDesc":true}');export{u as comp,m as data};
