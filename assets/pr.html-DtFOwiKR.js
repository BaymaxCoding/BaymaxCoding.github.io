import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,b as t}from"./app-DOGW-9XX.js";const e={},p=t(`<h1 id="pr" tabindex="-1"><a class="header-anchor" href="#pr"><span>pr</span></a></h1><p>将文本文件转换成适合打印的格式</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>pr命令</strong> 用来将文本文件转换成适合打印的格式，它可以把较大的文件分割成多个页面进行打印，并为每个页面添加标题。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pr<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>-e<span class="token operator">&lt;</span>制表符<span class="token punctuation">[</span>宽度<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>--expand-tabs<span class="token operator">=</span><span class="token operator">&lt;</span>制表符<span class="token punctuation">[</span>宽度<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>：将制表符（或制表符）转换为空格.如果指定了宽度，则将制表符转换为宽度字符，默认为8<span class="token punctuation">;</span>
-h<span class="token operator">&lt;</span>标题<span class="token operator">&gt;</span>：为页指定标题；
-i<span class="token operator">&lt;</span>out-tab-char<span class="token punctuation">[</span>out-tab-width<span class="token operator">&gt;</span><span class="token punctuation">(</span>--output-tabs<span class="token operator">&lt;</span>out-tab-char<span class="token punctuation">[</span>out-tab-width<span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>：在输出中用制表符替换空格，可以指定替代制表符<span class="token punctuation">(</span>默认为制表符<span class="token punctuation">)</span>和宽度<span class="token punctuation">(</span>默认为8<span class="token punctuation">)</span>；
-l<span class="token operator">&lt;</span>行数<span class="token operator">&gt;</span>：指定每页的行数；
-n<span class="token operator">&lt;</span>分隔符<span class="token punctuation">[</span>数字<span class="token punctuation">]</span><span class="token operator">&gt;</span>：对列进行编号，或者使用 <span class="token parameter variable">-m</span> 选项对行进行编号，将分隔符附加到每个数字默认为制表符并限制数字的大小，默认为5；
-o<span class="token operator">&lt;</span>宽度<span class="token operator">&gt;</span>：为左边距设置宽度；
-s<span class="token operator">&lt;</span>分隔符<span class="token operator">&gt;</span><span class="token punctuation">(</span>--separator<span class="token operator">&lt;</span>分隔符<span class="token operator">&gt;</span><span class="token punctuation">)</span>：使用指定的分隔符（默认为制表符）而不是空格分隔列；
-S<span class="token operator">&lt;</span>字符串<span class="token operator">&gt;</span><span class="token punctuation">(</span>--sep-string<span class="token operator">&lt;</span>字符串<span class="token operator">&gt;</span><span class="token punctuation">)</span>：使用指定的字符串（默认为-J的制表符）或者是一个空格分隔列；
-w<span class="token operator">&lt;</span>页面宽度<span class="token operator">&gt;</span>：设置页面宽度以进行多列输出，默认为72；
-W<span class="token operator">&lt;</span>页面宽度<span class="token operator">&gt;</span>：设置页面宽度为固定值，默认为72；
-J<span class="token punctuation">(</span>--join-lines<span class="token punctuation">)</span>：合并整行，忽略 <span class="token parameter variable">-W</span> 如果设置<span class="token punctuation">;</span>
-num_cols：num_cols是一个整数，为一页有n行的文件打印指定num_cols列；
-m<span class="token punctuation">(</span>--merge<span class="token punctuation">)</span>：打印所有文件，每列一个文件。
-f<span class="token punctuation">(</span>-F<span class="token punctuation">)</span><span class="token punctuation">(</span>--form-feed<span class="token punctuation">)</span>：用换页符替代换行符；
-r<span class="token punctuation">(</span>--no-file-warnings<span class="token punctuation">)</span>：无法打开输入文件时静默；
-t：限制页眉,页脚与页尾的填充；
-T<span class="token punctuation">(</span>--omit-pagination<span class="token punctuation">)</span>：类似于-t,但也限制换页；
-v<span class="token punctuation">(</span>--show-non-printing<span class="token punctuation">)</span>：将不可打印的字符转换为八进制反斜杠格式；
-d：双倍行距；
-a<span class="token punctuation">(</span>--across<span class="token punctuation">)</span>：交错打印，即水平打印，而非纵向打印；
-c<span class="token punctuation">(</span>--show-control-chars<span class="token punctuation">)</span>：将控制字符转换为帽子符号（例如 ^C），将其他不可打印的字符转换为八进制反斜杠格式；
--help：打印帮助信息并退出；
--version：打印版本信息并退出.


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><p>文件：需要转换格式的文件。</p>`,10),o=[p];function i(c,l){return a(),s("div",null,o)}const d=n(e,[["render",i],["__file","pr.html.vue"]]),m=JSON.parse('{"path":"/command/linux/pr.html","title":"pr","lang":"zh-CN","frontmatter":{"description":"pr 将文本文件转换成适合打印的格式 补充说明 pr命令 用来将文本文件转换成适合打印的格式，它可以把较大的文件分割成多个页面进行打印，并为每个页面添加标题。 语法 选项 参数 文件：需要转换格式的文件。","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/pr.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"pr"}],["meta",{"property":"og:description","content":"pr 将文本文件转换成适合打印的格式 补充说明 pr命令 用来将文本文件转换成适合打印的格式，它可以把较大的文件分割成多个页面进行打印，并为每个页面添加标题。 语法 选项 参数 文件：需要转换格式的文件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pr\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.98,"words":593},"filePathRelative":"command/linux/pr.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,m as data};
