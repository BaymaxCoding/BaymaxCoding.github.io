import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e}from"./app-D_HUMAmc.js";const t={},l=e(`<h1 id="lscpu" tabindex="-1"><a class="header-anchor" href="#lscpu"><span>lscpu</span></a></h1><p>显示有关CPU架构的信息</p><h2 id="补充说明" tabindex="-1"><a class="header-anchor" href="#补充说明"><span>补充说明</span></a></h2><p><strong>lscpu命令</strong> 是显示有关CPU架构的信息。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>lscpu <span class="token punctuation">[</span>选项<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选项" tabindex="-1"><a class="header-anchor" href="#选项"><span>选项</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> -a, <span class="token parameter variable">--all</span>               <span class="token comment"># 打印在线和离线CPU（默认为-e）</span>
 -b, <span class="token parameter variable">--online</span>            <span class="token comment"># 仅打印在线CPU（-p的默认值）</span>
 -c, <span class="token parameter variable">--offline</span>           <span class="token comment"># 打印离线CPU</span>
 -e, --extended<span class="token punctuation">[</span><span class="token operator">=</span><span class="token operator">&lt;</span>list<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token comment"># 打印出一个扩展的可读格式</span>
 -p, --parse<span class="token punctuation">[</span><span class="token operator">=</span><span class="token operator">&lt;</span>list<span class="token operator">&gt;</span><span class="token punctuation">]</span>    <span class="token comment"># 打印出可解析的格式</span>
 -s, <span class="token parameter variable">--sysroot</span> <span class="token operator">&lt;</span>dir<span class="token operator">&gt;</span>     <span class="token comment"># 将指定的目录用作系统根目录</span>
 -x, <span class="token parameter variable">--hex</span>               <span class="token comment"># 打印十六进制掩码，而不是CPU列表</span>

 -h, <span class="token parameter variable">--help</span>     <span class="token comment"># 显示此帮助并退出</span>
 -V, <span class="token parameter variable">--version</span>  <span class="token comment"># 输出版本信息并退出</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数"><span>参数</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>可用列：
           CPU  逻辑CPU编号
          CORE  逻辑核心号码
        SOCKET  逻辑套接字号
          NODE  逻辑NUMA节点号
          BOOK  逻辑书号
         CACHE  显示了如何在CPU之间共享高速缓存
  POLARIZATION  虚拟硬件上的CPU调度模式
       ADDRESS  CPU的物理地址
    CONFIGURED  显示管理程序是否分配了CPU
        ONLINE  显示Linux是否正在使用CPU
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lscpu</span>
Architecture:          x86_64
CPU op-mode<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:        <span class="token number">32</span>-bit, <span class="token number">64</span>-bit
Byte Order:            Little Endian
CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:                <span class="token number">4</span>
On-line CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span> list:   <span class="token number">0</span>-3
Thread<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per core:    <span class="token number">1</span>
Core<span class="token punctuation">(</span>s<span class="token punctuation">)</span> per socket:    <span class="token number">4</span>
Socket<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:             <span class="token number">1</span>
NUMA node<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:          <span class="token number">1</span>
Vendor ID:             GenuineIntel
CPU family:            <span class="token number">6</span>
Model:                 <span class="token number">30</span>
Model name:            Intel<span class="token punctuation">(</span>R<span class="token punctuation">)</span> Xeon<span class="token punctuation">(</span>R<span class="token punctuation">)</span> CPU           X3430  @ <span class="token number">2</span>.40GHz
Stepping:              <span class="token number">5</span>
CPU MHz:               <span class="token number">2394.055</span>
BogoMIPS:              <span class="token number">4788.11</span>
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              8192K
NUMA node0 CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span>:     <span class="token number">0</span>-3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看cpu编号对应的核心号码，区分是大核还是小核。</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lscpu -e</span>
CPU NODE SOCKET CORE L1d:L1i:L2:L3 ONLINE MAXMHZ    MINMHZ
<span class="token number">0</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">0</span>    <span class="token number">0</span>:0:0:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">1</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">1</span>    <span class="token number">1</span>:1:1:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">2</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">2</span>    <span class="token number">2</span>:2:2:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">3</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">3</span>    <span class="token number">3</span>:3:3:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">4</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">0</span>    <span class="token number">0</span>:0:0:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">5</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">1</span>    <span class="token number">1</span>:1:1:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">6</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">2</span>    <span class="token number">2</span>:2:2:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
<span class="token number">7</span>   <span class="token number">0</span>    <span class="token number">0</span>      <span class="token number">3</span>    <span class="token number">3</span>:3:3:0       是     <span class="token number">3600.0000</span> <span class="token number">800.0000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[l];function i(c,o){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","lscpu.html.vue"]]),m=JSON.parse('{"path":"/command/linux/lscpu.html","title":"lscpu","lang":"zh-CN","frontmatter":{"description":"lscpu 显示有关CPU架构的信息 补充说明 lscpu命令 是显示有关CPU架构的信息。 语法 选项 参数 例子","head":[["meta",{"property":"og:url","content":"https://baymaxcoding.github.io/command/linux/lscpu.html"}],["meta",{"property":"og:site_name","content":"BaymaxCoding"}],["meta",{"property":"og:title","content":"lscpu"}],["meta",{"property":"og:description","content":"lscpu 显示有关CPU架构的信息 补充说明 lscpu命令 是显示有关CPU架构的信息。 语法 选项 参数 例子"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T04:24:50.000Z"}],["meta",{"property":"article:author","content":"BaymaxCoding"}],["meta",{"property":"article:modified_time","content":"2024-04-12T04:24:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lscpu\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-12T04:24:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"BaymaxCoding\\",\\"url\\":\\"https://baymaxcoding.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"例子","slug":"例子","link":"#例子","children":[]}]}],"git":{"createdTime":1712895890000,"updatedTime":1712895890000,"contributors":[{"name":"BaymaxCoding","email":"BRemail2324996822@163.com","commits":1}]},"readingTime":{"minutes":1.55,"words":465},"filePathRelative":"command/linux/lscpu.md","localizedDate":"2024年4月12日","autoDesc":true}');export{d as comp,m as data};
